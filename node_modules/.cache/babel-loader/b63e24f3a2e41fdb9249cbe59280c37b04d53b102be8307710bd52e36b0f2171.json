{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SMIC_STUDIO\\\\Desktop\\\\MEHFIL 25 APP\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { loadFromLocalStorage, saveToLocalStorage, calculateTeamStandings } from '../utils/dataStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardContainer = styled.div`\n  padding: 20px;\n  color: white;\n  min-height: 100vh;\n`;\n_c = DashboardContainer;\nconst Header = styled.h1`\n  text-align: center;\n  font-size: 2rem;\n  margin-bottom: 30px;\n  color: gold;\n`;\n_c2 = Header;\nconst TabContainer = styled.div`\n  display: flex;\n  border-bottom: 2px solid rgba(255,255,255,0.2);\n  margin-bottom: 30px;\n  flex-wrap: wrap;\n`;\n_c3 = TabContainer;\nconst Tab = styled.button`\n  padding: 15px 30px;\n  background: ${props => props.active ? 'rgba(255,255,255,0.2)' : 'transparent'};\n  color: ${props => props.active ? 'gold' : 'white'};\n  border: none;\n  cursor: pointer;\n  font-size: 1.1rem;\n  font-weight: bold;\n\n  &:hover {\n    background: rgba(255,255,255,0.1);\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 15px;\n    font-size: 0.9rem;\n  }\n`;\n_c4 = Tab;\nconst FormContainer = styled.div`\n  background: rgba(255,255,255,0.1);\n  border-radius: 15px;\n  padding: 30px;\n  backdrop-filter: blur(10px);\n  margin-bottom: 30px;\n`;\n_c5 = FormContainer;\nconst FormTitle = styled.h2`\n  margin-top: 0;\n  color: gold;\n  border-bottom: 1px solid rgba(255,255,255,0.2);\n  padding-bottom: 10px;\n`;\n_c6 = FormTitle;\nconst FormGroup = styled.div`\n  margin-bottom: 20px;\n`;\n_c7 = FormGroup;\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  font-weight: bold;\n`;\n_c8 = Label;\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px;\n  border-radius: 8px;\n  border: none;\n  background: rgba(255,255,255,0.1);\n  color: white;\n  font-size: 1rem;\n\n  &:focus {\n    outline: 2px solid gold;\n  }\n`;\n_c9 = Input;\nconst Select = styled.select`\n  width: 100%;\n  padding: 12px;\n  border-radius: 8px;\n  border: none;\n  background: rgba(255,255,255,0.1);\n  color: white;\n  font-size: 1rem;\n\n  &:focus {\n    outline: 2px solid gold;\n  }\n`;\n_c0 = Select;\nconst Button = styled.button`\n  padding: 12px 25px;\n  background: gold;\n  color: #333;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-weight: bold;\n  font-size: 1rem;\n  transition: all 0.3s ease;\n  margin-right: 10px;\n  margin-bottom: 10px;\n\n  &:hover {\n    background: #ffd700;\n    transform: translateY(-2px);\n  }\n`;\n_c1 = Button;\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  background: rgba(255,255,255,0.1);\n  border-radius: 10px;\n  overflow: hidden;\n`;\n_c10 = Table;\nconst Th = styled.th`\n  background: rgba(0,0,0,0.2);\n  padding: 15px;\n  text-align: left;\n`;\n_c11 = Th;\nconst Td = styled.td`\n  padding: 15px;\n  border-bottom: 1px solid rgba(255,255,255,0.1);\n`;\n_c12 = Td;\nconst Tr = styled.tr`\n  &:hover {\n    background: rgba(255,255,255,0.05);\n  }\n`;\n_c13 = Tr;\nconst ColorPreview = styled.div`\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background: ${props => `rgb(${props.r}, ${props.g}, ${props.b})`};\n  display: inline-block;\n  margin-right: 10px;\n`;\n_c14 = ColorPreview;\nconst RGBInputContainer = styled.div`\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n`;\n_c15 = RGBInputContainer;\nconst RGBInput = styled.input`\n  width: 80px;\n  padding: 8px;\n  border-radius: 5px;\n  border: none;\n  background: rgba(255,255,255,0.1);\n  color: white;\n  text-align: center;\n`;\n_c16 = RGBInput;\nconst AdminDashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState('events');\n  const [events, setEvents] = useState([]);\n  const [teams, setTeams] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [programs, setPrograms] = useState([]);\n  const [results, setResults] = useState([]);\n  const [points, setPoints] = useState({\n    gold: 10,\n    silver: 7,\n    bronze: 5\n  });\n  // Category-specific points configuration\n  const [categoryPoints, setCategoryPoints] = useState({});\n  // Grade-specific points configuration\n  const [gradePoints, setGradePoints] = useState({});\n  // Available grades configuration\n  const [availableGrades, setAvailableGrades] = useState(['A', 'B', 'C', 'D']);\n  // New grade points configuration\n  const [newGradePoints, setNewGradePoints] = useState({\n    gold: 10,\n    silver: 7,\n    bronze: 5\n  });\n  // Team managers configuration\n  const [teamManagers, setTeamManagers] = useState([]);\n\n  // Form states\n  const [newEvent, setNewEvent] = useState({\n    name: '',\n    categories: [],\n    color: {\n      r: 106,\n      g: 17,\n      b: 203\n    }\n  });\n  const [newTeam, setNewTeam] = useState({\n    name: '',\n    color: '#FF5733'\n  });\n  const [newCategory, setNewCategory] = useState({\n    name: '',\n    order: 1\n  });\n  const [newStudent, setNewStudent] = useState({\n    name: '',\n    chestNumber: '',\n    team: '',\n    category: ''\n  });\n  const [newProgram, setNewProgram] = useState({\n    name: '',\n    type: 'Individual'\n  });\n  const [newResult, setNewResult] = useState({\n    event: '',\n    program: '',\n    category: '',\n    participants: [{\n      name: '',\n      position: ''\n    }]\n  });\n  const [newTeamManager, setNewTeamManager] = useState({\n    username: '',\n    password: '',\n    team: ''\n  });\n  const [editingTeamManager, setEditingTeamManager] = useState(null);\n  const [adminPassword, setAdminPassword] = useState('admin123');\n  const [selectedCategoryForPoints, setSelectedCategoryForPoints] = useState('');\n  const [selectedGradeForPoints, setSelectedGradeForPoints] = useState('');\n  const [newGrade, setNewGrade] = useState('');\n\n  // Event filtering states\n  const [selectedEventForTeams, setSelectedEventForTeams] = useState('');\n  const [selectedEventForStudents, setSelectedEventForStudents] = useState('');\n  const [selectedEventForPrograms, setSelectedEventForPrograms] = useState('');\n  const [selectedEventForResults, setSelectedEventForResults] = useState('');\n\n  // Load data from localStorage on component mount\n  useEffect(() => {\n    const savedEvents = loadFromLocalStorage('events', []);\n    const savedTeams = loadFromLocalStorage('teams', []);\n    const savedCategories = loadFromLocalStorage('categories', []);\n    const savedStudents = loadFromLocalStorage('students', []);\n    const savedPrograms = loadFromLocalStorage('programs', []);\n    const savedResults = loadFromLocalStorage('results', []);\n    const savedPoints = loadFromLocalStorage('points', {\n      gold: 10,\n      silver: 7,\n      bronze: 5\n    });\n    const savedCategoryPoints = loadFromLocalStorage('categoryPoints', {});\n    const savedGradePoints = loadFromLocalStorage('gradePoints', {});\n    const savedPassword = loadFromLocalStorage('adminPassword', 'admin123');\n    const savedAvailableGrades = loadFromLocalStorage('availableGrades', ['A', 'B', 'C', 'D']);\n    const savedTeamManagers = loadFromLocalStorage('teamManagers', []);\n\n    // Load event filtering states\n    const savedSelectedEventForTeams = loadFromLocalStorage('selectedEventForTeams', '');\n    const savedSelectedEventForStudents = loadFromLocalStorage('selectedEventForStudents', '');\n    const savedSelectedEventForPrograms = loadFromLocalStorage('selectedEventForPrograms', '');\n    const savedSelectedEventForResults = loadFromLocalStorage('selectedEventForResults', '');\n    setEvents(savedEvents);\n    setTeams(savedTeams);\n    setCategories(savedCategories);\n    setStudents(savedStudents);\n    setPrograms(savedPrograms);\n    setResults(savedResults);\n    setPoints(savedPoints);\n    setCategoryPoints(savedCategoryPoints);\n    setGradePoints(savedGradePoints);\n    setAdminPassword(savedPassword);\n    setAvailableGrades(savedAvailableGrades);\n    setTeamManagers(savedTeamManagers);\n\n    // Set event filtering states\n    setSelectedEventForTeams(savedSelectedEventForTeams);\n    setSelectedEventForStudents(savedSelectedEventForStudents);\n    setSelectedEventForPrograms(savedSelectedEventForPrograms);\n    setSelectedEventForResults(savedSelectedEventForResults);\n\n    // Initialize form select options\n    if (savedEvents.length > 0) {\n      setNewResult(prev => ({\n        ...prev,\n        event: savedEvents[0].name\n      }));\n    }\n    if (savedPrograms.length > 0) {\n      setNewResult(prev => ({\n        ...prev,\n        program: savedPrograms[0].name\n      }));\n    }\n    if (savedCategories.length > 0) {\n      setNewResult(prev => ({\n        ...prev,\n        category: savedCategories[0].name\n      }));\n      setSelectedCategoryForPoints(savedCategories[0].name);\n    }\n    if (savedTeams.length > 0) {\n      setNewTeamManager(prev => ({\n        ...prev,\n        team: savedTeams[0].name\n      }));\n    }\n  }, []);\n\n  // Function to pre-configure points for a new grade across all categories\n  const preConfigureGradePoints = (grade, pointsConfig) => {\n    const updatedGradePoints = {\n      ...gradePoints\n    };\n\n    // For each category, create a default grade point configuration\n    categories.forEach(category => {\n      const key = `${category.name}-${grade}`;\n      updatedGradePoints[key] = {\n        ...pointsConfig\n      };\n    });\n    setGradePoints(updatedGradePoints);\n  };\n\n  // Update team standings when results or points change\n  useEffect(() => {\n    const savedTeams = loadFromLocalStorage('teams', []);\n    const updatedTeams = calculateTeamStandings(savedTeams, results, points, categoryPoints, gradePoints);\n    setTeams(updatedTeams);\n  }, [results, points, categoryPoints, gradePoints]);\n\n  // Save data to localStorage whenever state changes\n  useEffect(() => {\n    saveToLocalStorage('events', events);\n  }, [events]);\n  useEffect(() => {\n    saveToLocalStorage('teams', teams);\n  }, [teams]);\n  useEffect(() => {\n    saveToLocalStorage('categories', categories);\n  }, [categories]);\n  useEffect(() => {\n    saveToLocalStorage('students', students);\n  }, [students]);\n  useEffect(() => {\n    saveToLocalStorage('programs', programs);\n  }, [programs]);\n  useEffect(() => {\n    saveToLocalStorage('results', results);\n  }, [results]);\n  useEffect(() => {\n    saveToLocalStorage('points', points);\n  }, [points]);\n  useEffect(() => {\n    saveToLocalStorage('categoryPoints', categoryPoints);\n  }, [categoryPoints]);\n  useEffect(() => {\n    saveToLocalStorage('gradePoints', gradePoints);\n  }, [gradePoints]);\n  useEffect(() => {\n    saveToLocalStorage('adminPassword', adminPassword);\n  }, [adminPassword]);\n  useEffect(() => {\n    saveToLocalStorage('availableGrades', availableGrades);\n  }, [availableGrades]);\n  useEffect(() => {\n    saveToLocalStorage('teamManagers', teamManagers);\n  }, [teamManagers]);\n\n  // Save event filtering states to localStorage\n  useEffect(() => {\n    saveToLocalStorage('selectedEventForTeams', selectedEventForTeams);\n  }, [selectedEventForTeams]);\n  useEffect(() => {\n    saveToLocalStorage('selectedEventForStudents', selectedEventForStudents);\n  }, [selectedEventForStudents]);\n  useEffect(() => {\n    saveToLocalStorage('selectedEventForPrograms', selectedEventForPrograms);\n  }, [selectedEventForPrograms]);\n  useEffect(() => {\n    saveToLocalStorage('selectedEventForResults', selectedEventForResults);\n  }, [selectedEventForResults]);\n  const handleCreateEvent = () => {\n    if (newEvent.name.trim() === '') return;\n    const event = {\n      id: events.length + 1,\n      name: newEvent.name,\n      categories: categories.map(cat => cat.name),\n      color: newEvent.color\n    };\n    setEvents([...events, event]);\n    setNewEvent({\n      name: '',\n      categories: [],\n      color: {\n        r: 106,\n        g: 17,\n        b: 203\n      }\n    });\n  };\n  const handleCreateTeam = () => {\n    if (newTeam.name.trim() === '') return;\n    const team = {\n      id: teams.length + 1,\n      name: newTeam.name,\n      color: newTeam.color\n    };\n    setTeams([...teams, team]);\n    setNewTeam({\n      name: '',\n      color: '#FF5733'\n    });\n  };\n  const handleCreateCategory = () => {\n    if (newCategory.name.trim() === '') return;\n    const category = {\n      id: categories.length + 1,\n      name: newCategory.name,\n      order: newCategory.order\n    };\n    setCategories([...categories, category]);\n    setNewCategory({\n      name: '',\n      order: categories.length + 2\n    });\n  };\n  const handleCreateStudent = () => {\n    if (newStudent.name.trim() === '' || newStudent.chestNumber.trim() === '') return;\n    const student = {\n      id: students.length + 1,\n      name: newStudent.name,\n      chestNumber: newStudent.chestNumber,\n      team: newStudent.team,\n      category: newStudent.category,\n      photo: null\n    };\n    setStudents([...students, student]);\n    setNewStudent({\n      name: '',\n      chestNumber: '',\n      team: '',\n      category: ''\n    });\n  };\n  const handleCreateProgram = () => {\n    if (newProgram.name.trim() === '') return;\n    const program = {\n      id: programs.length + 1,\n      name: newProgram.name,\n      type: newProgram.type\n    };\n    setPrograms([...programs, program]);\n    setNewProgram({\n      name: '',\n      type: 'Individual'\n    });\n  };\n  const handleAddParticipant = () => {\n    setNewResult({\n      ...newResult,\n      participants: [...newResult.participants, {\n        name: '',\n        position: ''\n      }]\n    });\n  };\n  const handleParticipantChange = (index, field, value) => {\n    const updatedParticipants = [...newResult.participants];\n    updatedParticipants[index][field] = value;\n    setNewResult({\n      ...newResult,\n      participants: updatedParticipants\n    });\n  };\n  const handleRemoveParticipant = index => {\n    if (newResult.participants.length <= 1) return;\n    const updatedParticipants = [...newResult.participants];\n    updatedParticipants.splice(index, 1);\n    setNewResult({\n      ...newResult,\n      participants: updatedParticipants\n    });\n  };\n  const handleSaveResult = () => {\n    // Calculate points based on position, category, and grade\n    const participantsWithPoints = newResult.participants.map(participant => {\n      let pointValue = 0;\n\n      // Extract grade from participant name if it exists (e.g., \"John Doe (A)\" or \"SJ001 (B)\")\n      let grade = '';\n      let participantName = participant.name;\n\n      // Updated regex to handle more grades (A, B, C, D)\n      const gradeMatch = participant.name.match(/\\(([A-D])\\)$/);\n      if (gradeMatch) {\n        grade = gradeMatch[1];\n        participantName = participant.name.replace(/\\s*\\([A-D]\\)$/, '');\n      }\n\n      // Use grade-specific points if available\n      let pointConfig = points; // default\n\n      // Use the category from the current result being saved, not the selected category for points configuration\n      if (grade && newResult.category) {\n        const gradeKey = `${newResult.category}-${grade}`;\n        if (gradePoints[gradeKey]) {\n          pointConfig = gradePoints[gradeKey];\n        } else if (categoryPoints[newResult.category]) {\n          // Fall back to category-specific points\n          pointConfig = categoryPoints[newResult.category];\n        }\n      } else if (categoryPoints[newResult.category]) {\n        // Use category-specific points if no grade specified\n        pointConfig = categoryPoints[newResult.category];\n      }\n      switch (participant.position.toLowerCase()) {\n        case '1':\n        case 'first':\n        case 'gold':\n          pointValue = pointConfig.gold;\n          break;\n        case '2':\n        case 'second':\n        case 'silver':\n          pointValue = pointConfig.silver;\n          break;\n        case '3':\n        case 'third':\n        case 'bronze':\n          pointValue = pointConfig.bronze;\n          break;\n        default:\n          pointValue = 0;\n      }\n      return {\n        ...participant,\n        points: pointValue\n      };\n    });\n    const result = {\n      id: results.length + 1,\n      event: newResult.event,\n      program: newResult.program,\n      category: newResult.category,\n      participants: participantsWithPoints,\n      timestamp: new Date().toISOString()\n    };\n    setResults([...results, result]);\n\n    // Reset form\n    setNewResult({\n      event: newResult.event,\n      program: newResult.program,\n      category: newResult.category,\n      participants: [{\n        name: '',\n        position: ''\n      }]\n    });\n  };\n  const handleChangePassword = () => {\n    // In a real app, you would validate the current password first\n    const newPassword = prompt('Enter new password:');\n    if (newPassword && newPassword.trim() !== '') {\n      setAdminPassword(newPassword.trim());\n      alert('Password updated successfully!');\n    }\n  };\n  const handleSaveCategoryPoints = () => {\n    if (!selectedCategoryForPoints) return;\n    setCategoryPoints({\n      ...categoryPoints,\n      [selectedCategoryForPoints]: {\n        ...points\n      }\n    });\n    alert(`Points configuration saved for category: ${selectedCategoryForPoints}`);\n  };\n  const handleCategoryChangeForPoints = categoryName => {\n    setSelectedCategoryForPoints(categoryName);\n\n    // Load existing points for this category if they exist\n    if (categoryPoints[categoryName]) {\n      setPoints(categoryPoints[categoryName]);\n    } else {\n      // Reset to default points if no custom points for this category\n      setPoints({\n        gold: 10,\n        silver: 7,\n        bronze: 5\n      });\n    }\n  };\n\n  // Handle grade selection for points configuration\n  const handleGradeChangeForPoints = grade => {\n    setSelectedGradeForPoints(grade);\n\n    // Create a key for category-grade combination\n    const key = `${selectedCategoryForPoints}-${grade}`;\n\n    // Load existing points for this category-grade combination if they exist\n    if (gradePoints[key]) {\n      setPoints(gradePoints[key]);\n    } else {\n      // Check if there are category-specific points\n      if (categoryPoints[selectedCategoryForPoints]) {\n        setPoints(categoryPoints[selectedCategoryForPoints]);\n      } else {\n        // Reset to default points\n        setPoints({\n          gold: 10,\n          silver: 7,\n          bronze: 5\n        });\n      }\n    }\n  };\n\n  // Pre-populate A grade points example\n  const handlePrepopulateAGrade = () => {\n    if (!selectedCategoryForPoints) {\n      alert('Please select a category first');\n      return;\n    }\n    setSelectedGradeForPoints('A');\n    setPoints({\n      gold: 10,\n      silver: 7,\n      bronze: 5\n    });\n  };\n\n  // Save grade-specific points\n  const handleSaveGradePoints = () => {\n    if (!selectedCategoryForPoints || !selectedGradeForPoints) return;\n    const key = `${selectedCategoryForPoints}-${selectedGradeForPoints}`;\n    setGradePoints({\n      ...gradePoints,\n      [key]: {\n        ...points\n      }\n    });\n    alert(`Points configuration saved for category: ${selectedCategoryForPoints}, grade: ${selectedGradeForPoints}`);\n  };\n  return /*#__PURE__*/_jsxDEV(DashboardContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'switcher',\n        onClick: () => setActiveTab('switcher'),\n        children: \"Role Switcher\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'events',\n        onClick: () => setActiveTab('events'),\n        children: \"Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'categories',\n        onClick: () => setActiveTab('categories'),\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'teams',\n        onClick: () => setActiveTab('teams'),\n        children: \"Teams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'students',\n        onClick: () => setActiveTab('students'),\n        children: \"Students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'programs',\n        onClick: () => setActiveTab('programs'),\n        children: \"Programs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'results',\n        onClick: () => setActiveTab('results'),\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'grades',\n        onClick: () => setActiveTab('grades'),\n        children: \"Grades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'batch-points',\n        onClick: () => setActiveTab('batch-points'),\n        children: \"Batch Points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'points',\n        onClick: () => setActiveTab('points'),\n        children: \"Points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 7\n    }, this), activeTab === 'switcher' && /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Switch Between Roles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '20px',\n          flexWrap: 'wrap',\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate('/'),\n          style: {\n            background: 'rgba(255,255,255,0.2)',\n            color: 'white'\n          },\n          children: \"Public View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {},\n          style: {\n            background: 'gold',\n            color: '#333'\n          },\n          children: \"Admin Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate('/team-manager-login'),\n          style: {\n            background: 'rgba(255,255,255,0.2)',\n            color: 'white'\n          },\n          children: \"Team Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleLogout,\n          style: {\n            background: '#ff4757',\n            color: 'white'\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 9\n    }, this), activeTab === 'events' && /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Create New Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Event Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: newEvent.name,\n          onChange: e => setNewEvent({\n            ...newEvent,\n            name: e.target.value\n          }),\n          placeholder: \"Enter event name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Event Color (RGB)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RGBInputContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"R\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RGBInput, {\n              type: \"number\",\n              min: \"0\",\n              max: \"255\",\n              value: newEvent.color.r,\n              onChange: e => setNewEvent({\n                ...newEvent,\n                color: {\n                  ...newEvent.color,\n                  r: parseInt(e.target.value) || 0\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"G\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RGBInput, {\n              type: \"number\",\n              min: \"0\",\n              max: \"255\",\n              value: newEvent.color.g,\n              onChange: e => setNewEvent({\n                ...newEvent,\n                color: {\n                  ...newEvent.color,\n                  g: parseInt(e.target.value) || 0\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RGBInput, {\n              type: \"number\",\n              min: \"0\",\n              max: \"255\",\n              value: newEvent.color.b,\n              onChange: e => setNewEvent({\n                ...newEvent,\n                color: {\n                  ...newEvent.color,\n                  b: parseInt(e.target.value) || 0\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ColorPreview, {\n              r: newEvent.color.r,\n              g: newEvent.color.g,\n              b: newEvent.color.b\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCreateEvent,\n        children: \"Create Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Existing Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Categories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: events.map(event => /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: event.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: event.categories.join(', ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: [/*#__PURE__*/_jsxDEV(ColorPreview, {\n                r: event.color.r,\n                g: event.color.g,\n                b: event.color.b\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 21\n              }, this), \"RGB(\", event.color.r, \", \", event.color.g, \", \", event.color.b, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 19\n            }, this)]\n          }, event.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 9\n    }, this), activeTab === 'categories' && /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Manage Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Category Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: newCategory.name,\n          onChange: e => setNewCategory({\n            ...newCategory,\n            name: e.target.value\n          }),\n          placeholder: \"Enter category name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Display Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          value: newCategory.order,\n          onChange: e => setNewCategory({\n            ...newCategory,\n            order: parseInt(e.target.value) || 1\n          }),\n          placeholder: \"Enter display order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCreateCategory,\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Existing Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 775,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: categories.map(category => /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 783,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: category.order\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 784,\n              columnNumber: 19\n            }, this)]\n          }, category.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 9\n    }, this), activeTab === 'teams' && /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Create New Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Team Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: newTeam.name,\n          onChange: e => setNewTeam({\n            ...newTeam,\n            name: e.target.value\n          }),\n          placeholder: \"Enter team name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Team Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"color\",\n          value: newTeam.color,\n          onChange: e => setNewTeam({\n            ...newTeam,\n            color: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCreateTeam,\n        children: \"Create Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Filter Teams by Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 819,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedEventForTeams,\n            onChange: e => setSelectedEventForTeams(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All Events\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 824,\n              columnNumber: 17\n            }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: event.name,\n              children: event.name\n            }, event.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 826,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Existing Teams\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(Th, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 835,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 836,\n                columnNumber: 19\n              }, this), selectedEventForTeams && /*#__PURE__*/_jsxDEV(Th, {\n                children: [\"Participated in \", selectedEventForTeams]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 837,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: teams.map(team => {\n              // Filter teams that participated in the selected event if any\n              if (selectedEventForTeams) {\n                const teamResults = results.filter(result => result.event === selectedEventForTeams && result.participants.some(participant => {\n                  const student = students.find(s => s.chestNumber === participant.name || s.name === participant.name);\n                  return student && student.team === team.name;\n                }));\n\n                // If no results for this team in the selected event, skip\n                if (teamResults.length === 0) return null;\n              }\n              return /*#__PURE__*/_jsxDEV(Tr, {\n                children: [/*#__PURE__*/_jsxDEV(Td, {\n                  children: team.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 861,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Td, {\n                  children: [/*#__PURE__*/_jsxDEV(ColorPreview, {\n                    r: parseInt(team.color.slice(1, 3), 16),\n                    g: parseInt(team.color.slice(3, 5), 16),\n                    b: parseInt(team.color.slice(5, 7), 16)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 863,\n                    columnNumber: 25\n                  }, this), team.color]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 862,\n                  columnNumber: 23\n                }, this), selectedEventForTeams && /*#__PURE__*/_jsxDEV(Td, {\n                  children: \"Participated\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 869,\n                  columnNumber: 25\n                }, this)]\n              }, team.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 860,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 840,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 793,\n      columnNumber: 9\n    }, this), activeTab === 'students' && /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Register Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Student Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: newStudent.name,\n          onChange: e => setNewStudent({\n            ...newStudent,\n            name: e.target.value\n          }),\n          placeholder: \"Enter student name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 887,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Chest Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 896,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: newStudent.chestNumber,\n          onChange: e => setNewStudent({\n            ...newStudent,\n            chestNumber: e.target.value\n          }),\n          placeholder: \"Enter chest number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 897,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 895,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: newStudent.team,\n          onChange: e => setNewStudent({\n            ...newStudent,\n            team: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 911,\n            columnNumber: 15\n          }, this), teams.map(team => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: team.name,\n            children: team.name\n          }, team.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 913,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 907,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 905,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: newStudent.category,\n          onChange: e => setNewStudent({\n            ...newStudent,\n            category: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 924,\n            columnNumber: 15\n          }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category.name,\n            children: category.name\n          }, category.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 926,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 920,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCreateStudent,\n        children: \"Register Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Filter Students by Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 936,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedEventForStudents,\n            onChange: e => setSelectedEventForStudents(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All Events\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 941,\n              columnNumber: 17\n            }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: event.name,\n              children: event.name\n            }, event.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 943,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 937,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Registered Students\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 948,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(Th, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 952,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Chest Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 953,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Team\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 954,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 955,\n                columnNumber: 19\n              }, this), selectedEventForStudents && /*#__PURE__*/_jsxDEV(Th, {\n                children: [\"Participated in \", selectedEventForStudents]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 956,\n                columnNumber: 48\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 951,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 950,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: students.map(student => {\n              // Filter students who participated in the selected event if any\n              if (selectedEventForStudents) {\n                const studentResults = results.filter(result => result.event === selectedEventForStudents && result.participants.some(participant => participant.name === student.chestNumber || participant.name === student.name));\n\n                // If no results for this student in the selected event, skip\n                if (studentResults.length === 0) return null;\n              }\n              return /*#__PURE__*/_jsxDEV(Tr, {\n                children: [/*#__PURE__*/_jsxDEV(Td, {\n                  children: student.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 977,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Td, {\n                  children: student.chestNumber\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 978,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Td, {\n                  children: student.team\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 979,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Td, {\n                  children: student.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 980,\n                  columnNumber: 23\n                }, this), selectedEventForStudents && /*#__PURE__*/_jsxDEV(Td, {\n                  children: \"Participated\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 982,\n                  columnNumber: 25\n                }, this)]\n              }, student.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 976,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 959,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 949,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 934,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 883,\n      columnNumber: 9\n    }, this), activeTab === 'programs' && /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Define Program\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 997,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Program Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 999,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: newProgram.name,\n          onChange: e => setNewProgram({\n            ...newProgram,\n            name: e.target.value\n          }),\n          placeholder: \"Enter program name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1000,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 998,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Program Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1009,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: newProgram.type,\n          onChange: e => setNewProgram({\n            ...newProgram,\n            type: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Individual\",\n            children: \"Individual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1014,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Group\",\n            children: \"Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1015,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"General\",\n            children: \"General\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1016,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1010,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1008,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCreateProgram,\n        children: \"Add Program\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1020,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Filter Programs by Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1025,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedEventForPrograms,\n            onChange: e => setSelectedEventForPrograms(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All Events\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1030,\n              columnNumber: 17\n            }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: event.name,\n              children: event.name\n            }, event.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1032,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1026,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1024,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Existing Programs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1037,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(Th, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1041,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1042,\n                columnNumber: 19\n              }, this), selectedEventForPrograms && /*#__PURE__*/_jsxDEV(Th, {\n                children: [\"Used in \", selectedEventForPrograms]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1043,\n                columnNumber: 48\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1040,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1039,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: programs.map(program => {\n              // Filter programs used in the selected event if any\n              if (selectedEventForPrograms) {\n                const programResults = results.filter(result => result.event === selectedEventForPrograms && result.program === program.name);\n\n                // If no results for this program in the selected event, skip\n                if (programResults.length === 0) return null;\n              }\n              return /*#__PURE__*/_jsxDEV(Tr, {\n                children: [/*#__PURE__*/_jsxDEV(Td, {\n                  children: program.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1061,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Td, {\n                  children: program.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1062,\n                  columnNumber: 23\n                }, this), selectedEventForPrograms && /*#__PURE__*/_jsxDEV(Td, {\n                  children: \"Used\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1064,\n                  columnNumber: 25\n                }, this)]\n              }, program.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1060,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1046,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1038,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1023,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 996,\n      columnNumber: 9\n    }, this), activeTab === 'results' && /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Enter Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1079,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'rgba(255,255,255,0.1)',\n          padding: '15px',\n          borderRadius: '10px',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0 0 10px 0',\n            color: 'gold'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tip:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1088,\n            columnNumber: 15\n          }, this), \" To use grade-specific points, include the grade in participant names\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1087,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0 0 5px 0',\n            fontSize: '0.9rem'\n          },\n          children: \"Examples: \\\"John Doe (A)\\\" or \\\"SJ001 (B)\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1090,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: 0,\n            fontSize: '0.9rem',\n            fontStyle: 'italic'\n          },\n          children: \"Configure grade points in the \\\"Points\\\" tab\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1093,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1081,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1099,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: newResult.event,\n          onChange: e => setNewResult({\n            ...newResult,\n            event: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select an event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1104,\n            columnNumber: 15\n          }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: event.name,\n            children: event.name\n          }, event.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1106,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1098,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Program\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: newResult.program,\n          onChange: e => setNewResult({\n            ...newResult,\n            program: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a program\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1117,\n            columnNumber: 15\n          }, this), programs.map(program => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: program.name,\n            children: program.name\n          }, program.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1119,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: newResult.category,\n          onChange: e => setNewResult({\n            ...newResult,\n            category: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1130,\n            columnNumber: 15\n          }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category.name,\n            children: category.name\n          }, category.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1132,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Participants & Positions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1137,\n        columnNumber: 11\n      }, this), newResult.participants.map((participant, index) => /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '10px',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Participant name or chest number\",\n            value: participant.name,\n            onChange: e => handleParticipantChange(index, 'name', e.target.value),\n            style: {\n              flex: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1141,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Position (1st, 2nd, 3rd or Gold, Silver, Bronze)\",\n            value: participant.position,\n            onChange: e => handleParticipantChange(index, 'position', e.target.value),\n            style: {\n              flex: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1148,\n            columnNumber: 17\n          }, this), newResult.participants.length > 1 && /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleRemoveParticipant(index),\n            style: {\n              backgroundColor: '#ff4757'\n            },\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1156,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1140,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1139,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAddParticipant,\n        children: \"Add Participant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSaveResult,\n        children: \"Save Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Filter Results by Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedEventForResults,\n            onChange: e => setSelectedEventForResults(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All Events\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1175,\n              columnNumber: 17\n            }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: event.name,\n              children: event.name\n            }, event.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1177,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Existing Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(Th, {\n                children: \"Event\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1186,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Program\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1187,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1188,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Participants\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1189,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1185,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: results.filter(result => !selectedEventForResults || result.event === selectedEventForResults).map(result => /*#__PURE__*/_jsxDEV(Tr, {\n              children: [/*#__PURE__*/_jsxDEV(Td, {\n                children: result.event\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1197,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: result.program\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1198,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: result.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1199,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: result.participants.map((p, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [p.name, \" - \", p.position, \" (\", p.points, \" points)\"]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1202,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1200,\n                columnNumber: 23\n              }, this)]\n            }, result.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1196,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1192,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1183,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1078,\n      columnNumber: 9\n    }, this), activeTab === 'grades' && /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Manage Grades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1217,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'rgba(255,255,255,0.1)',\n          padding: '15px',\n          borderRadius: '10px',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: 0,\n            color: 'gold'\n          },\n          children: \"Add New Grade with Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Grade Letter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: newGrade,\n            onChange: e => setNewGrade(e.target.value.toUpperCase()),\n            placeholder: \"Enter grade (e.g., A, B, C)\",\n            maxLength: \"1\",\n            style: {\n              width: '80px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1228,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Default Points for this Grade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '10px',\n              flexWrap: 'wrap'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"1st (Gold)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1242,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"number\",\n                value: newGradePoints.gold,\n                onChange: e => setNewGradePoints({\n                  ...newGradePoints,\n                  gold: parseInt(e.target.value) || 0\n                }),\n                style: {\n                  width: '80px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1243,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1241,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"2nd (Silver)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1251,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"number\",\n                value: newGradePoints.silver,\n                onChange: e => setNewGradePoints({\n                  ...newGradePoints,\n                  silver: parseInt(e.target.value) || 0\n                }),\n                style: {\n                  width: '80px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1252,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"3rd (Bronze)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1260,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"number\",\n                value: newGradePoints.bronze,\n                onChange: e => setNewGradePoints({\n                  ...newGradePoints,\n                  bronze: parseInt(e.target.value) || 0\n                }),\n                style: {\n                  width: '80px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1261,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1259,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1240,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            if (newGrade && !availableGrades.includes(newGrade)) {\n              // Add the new grade to available grades\n              setAvailableGrades([...availableGrades, newGrade]);\n\n              // Ask user if they want to pre-configure points for all categories\n              const preConfigure = window.confirm(`Grade ${newGrade} added successfully!\\n\\n` + `Do you want to pre-configure default points (${newGradePoints.gold}/${newGradePoints.silver}/${newGradePoints.bronze}) ` + `for this grade across all categories?\\n\\n` + `You can always customize these later in the Points tab.`);\n              if (preConfigure) {\n                preConfigureGradePoints(newGrade, newGradePoints);\n                alert(`Points pre-configured for grade ${newGrade} across all categories!`);\n              }\n              setNewGrade('');\n              setNewGradePoints({\n                gold: 10,\n                silver: 7,\n                bronze: 5\n              });\n            } else if (availableGrades.includes(newGrade)) {\n              alert(`Grade ${newGrade} already exists!`);\n            } else {\n              alert('Please enter a valid grade letter.');\n            }\n          },\n          children: \"Add Grade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1271,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Available Grades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1303,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '10px',\n          flexWrap: 'wrap',\n          marginBottom: '20px'\n        },\n        children: availableGrades.map((grade, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'rgba(255,255,255,0.2)',\n            padding: '10px 15px',\n            borderRadius: '20px',\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: grade\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1316,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (availableGrades.length > 1) {\n                setAvailableGrades(availableGrades.filter(g => g !== grade));\n              } else {\n                alert('You must have at least one grade!');\n              }\n            },\n            style: {\n              background: 'transparent',\n              border: 'none',\n              color: 'red',\n              cursor: 'pointer',\n              marginLeft: '10px',\n              fontWeight: 'bold'\n            },\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1317,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1306,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1304,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Grade Point Configuration Example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1341,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'rgba(255,255,255,0.1)',\n            padding: '20px',\n            borderRadius: '10px',\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'gold',\n              fontWeight: 'bold'\n            },\n            children: \"Example: Configure A Grade Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1348,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            style: {\n              paddingLeft: '20px',\n              color: 'rgba(255,255,255,0.9)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Go to the \\\"Points\\\" tab\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1350,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Select a category (e.g., \\\"Senior\\\")\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1351,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"From the \\\"Select Grade\\\" dropdown, choose \\\"A Grade\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1352,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Set points for each position:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                style: {\n                  paddingLeft: '20px',\n                  marginTop: '5px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"1st Position (Gold): 10 points\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1355,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"2nd Position (Silver): 7 points\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1356,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"3rd Position (Bronze): 5 points\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1357,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1354,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1353,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Click \\\"Save Grade Points\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1360,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontStyle: 'italic',\n              color: 'rgba(255,255,255,0.7)'\n            },\n            children: \"Participants with names like \\\"John Doe (A)\\\" will now receive these points instead of the default values.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1362,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'rgba(255,255,255,0.7)'\n          },\n          children: \"Note: Grades are used to differentiate point values for participants in the same category. For example, you can have different point values for A grade and B grade participants in the same category. To use grade-specific points, include the grade in parentheses at the end of participant names (e.g., \\\"Participant Name (A)\\\").\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1367,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1340,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1216,\n      columnNumber: 9\n    }, this), activeTab === 'batch-points' && /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Batch Grade Points Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1378,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'rgba(255,255,255,0.7)'\n        },\n        children: \"Configure points for a grade across all categories at once\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1379,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Select Grade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1384,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedGradeForPoints,\n          onChange: e => {\n            setSelectedGradeForPoints(e.target.value);\n            // Load existing points if they exist for any category\n            const existingConfig = Object.keys(gradePoints).find(key => key.endsWith(`-${e.target.value}`));\n            if (existingConfig && gradePoints[existingConfig]) {\n              setPoints(gradePoints[existingConfig]);\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a grade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1398,\n            columnNumber: 15\n          }, this), availableGrades.map((grade, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: grade,\n            children: [grade, \" Grade\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1400,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1385,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1383,\n        columnNumber: 11\n      }, this), selectedGradeForPoints && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'rgba(255,255,255,0.1)',\n          padding: '20px',\n          borderRadius: '10px',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Set Points for \", selectedGradeForPoints, \" Grade (All Categories)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1407,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"1st Position (Gold) Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1410,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: points.gold,\n            onChange: e => setPoints({\n              ...points,\n              gold: parseInt(e.target.value) || 0\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1411,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1409,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"2nd Position (Silver) Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1419,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: points.silver,\n            onChange: e => setPoints({\n              ...points,\n              silver: parseInt(e.target.value) || 0\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1420,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1418,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"3rd Position (Bronze) Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1428,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: points.bronze,\n            onChange: e => setPoints({\n              ...points,\n              bronze: parseInt(e.target.value) || 0\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1429,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1427,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            if (!selectedGradeForPoints) return;\n            const updatedGradePoints = {\n              ...gradePoints\n            };\n            let updatedCount = 0;\n\n            // Update points for this grade across all categories\n            categories.forEach(category => {\n              const key = `${category.name}-${selectedGradeForPoints}`;\n              updatedGradePoints[key] = {\n                ...points\n              };\n              updatedCount++;\n            });\n            setGradePoints(updatedGradePoints);\n            alert(`Points updated for ${updatedCount} categories with ${selectedGradeForPoints} grade`);\n          },\n          children: \"Apply to All Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1436,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Current Configurations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1458,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(Th, {\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1462,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Th, {\n                  children: \"Grade\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1463,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Th, {\n                  children: \"1st (Gold)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1464,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Th, {\n                  children: \"2nd (Silver)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1465,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Th, {\n                  children: \"3rd (Bronze)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1466,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1461,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1460,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: categories.map((category, index) => {\n                const key = `${category.name}-${selectedGradeForPoints}`;\n                const config = gradePoints[key] || points;\n                return /*#__PURE__*/_jsxDEV(Tr, {\n                  children: [/*#__PURE__*/_jsxDEV(Td, {\n                    children: category.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1475,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: selectedGradeForPoints\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1476,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: config.gold\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1477,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: config.silver\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1478,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: config.bronze\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1479,\n                    columnNumber: 27\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1474,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1469,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1459,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1457,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1406,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1377,\n      columnNumber: 9\n    }, this), activeTab === 'points' && /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Configure Points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1493,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'rgba(255,255,255,0.1)',\n          padding: '15px',\n          borderRadius: '10px',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0 0 10px 0',\n            color: 'gold'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Quick Setup Example:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1502,\n            columnNumber: 15\n          }, this), \" To configure A grade with 10/7/5 points:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1501,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          style: {\n            margin: '0 0 10px 20px',\n            fontSize: '0.9rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Select a category below\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1505,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Choose \\\"A Grade\\\" from the dropdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1506,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Set Gold=10, Silver=7, Bronze=5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1507,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Click \\\"Save Grade Points\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1508,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1504,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: 0,\n            fontSize: '0.9rem',\n            fontStyle: 'italic'\n          },\n          children: \"Participants named \\\"John Doe (A)\\\" will get these points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1510,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1495,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Configure Points By Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1516,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedCategoryForPoints,\n          onChange: e => handleCategoryChangeForPoints(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1521,\n            columnNumber: 15\n          }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category.name,\n            children: category.name\n          }, category.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1523,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1517,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1515,\n        columnNumber: 11\n      }, this), selectedCategoryForPoints && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'rgba(255,255,255,0.1)',\n          padding: '20px',\n          borderRadius: '10px',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Points for \", selectedCategoryForPoints]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1530,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Select Grade (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1533,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedGradeForPoints,\n            onChange: e => handleGradeChangeForPoints(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"No grade (category only)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1538,\n              columnNumber: 19\n            }, this), availableGrades.map((grade, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: grade,\n              children: [grade, \" Grade\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1540,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1534,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handlePrepopulateAGrade,\n            style: {\n              marginLeft: '10px',\n              background: 'rgba(255,215,0,0.2)',\n              color: 'gold'\n            },\n            children: \"Example: A Grade (10/7/5)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1543,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1532,\n          columnNumber: 15\n        }, this), selectedGradeForPoints && /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Points for \", selectedCategoryForPoints, \" - \", selectedGradeForPoints, \" Grade\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1556,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"1st Position (Gold) Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1560,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: points.gold,\n            onChange: e => setPoints({\n              ...points,\n              gold: parseInt(e.target.value) || 0\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1561,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1559,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"2nd Position (Silver) Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1569,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: points.silver,\n            onChange: e => setPoints({\n              ...points,\n              silver: parseInt(e.target.value) || 0\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1570,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1568,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"3rd Position (Bronze) Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1578,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: points.bronze,\n            onChange: e => setPoints({\n              ...points,\n              bronze: parseInt(e.target.value) || 0\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1579,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1577,\n          columnNumber: 15\n        }, this), selectedGradeForPoints ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveGradePoints,\n          children: \"Save Grade Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1587,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveCategoryPoints,\n          children: \"Save Category Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1589,\n          columnNumber: 17\n        }, this), !selectedGradeForPoints && categoryPoints[selectedCategoryForPoints] && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px',\n            color: 'gold'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Current category configuration saved\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1594,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1593,\n          columnNumber: 17\n        }, this), selectedGradeForPoints && gradePoints[`${selectedCategoryForPoints}-${selectedGradeForPoints}`] && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px',\n            color: 'gold'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Current grade configuration saved\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1600,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1599,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1529,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Default Points Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1606,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"These points will be used when no category-specific or grade-specific points are configured.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1607,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"1st Position (Gold) Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1610,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          value: points.gold,\n          onChange: e => setPoints({\n            ...points,\n            gold: parseInt(e.target.value) || 0\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1611,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1609,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"2nd Position (Silver) Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1619,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          value: points.silver,\n          onChange: e => setPoints({\n            ...points,\n            silver: parseInt(e.target.value) || 0\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1620,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1618,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"3rd Position (Bronze) Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1628,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          value: points.bronze,\n          onChange: e => setPoints({\n            ...points,\n            bronze: parseInt(e.target.value) || 0\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1629,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1627,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => saveToLocalStorage('points', points),\n        children: \"Save Default Points Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1636,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleChangePassword,\n        children: \"Change Admin Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1637,\n        columnNumber: 11\n      }, this), Object.keys(categoryPoints).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Category-Specific Points Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1641,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(Th, {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1645,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"1st (Gold)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1646,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"2nd (Silver)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1647,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"3rd (Bronze)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1648,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1644,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1643,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(categoryPoints).map(([category, pointsConfig]) => /*#__PURE__*/_jsxDEV(Tr, {\n              children: [/*#__PURE__*/_jsxDEV(Td, {\n                children: category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1654,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: pointsConfig.gold\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1655,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: pointsConfig.silver\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1656,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: pointsConfig.bronze\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1657,\n                columnNumber: 23\n              }, this)]\n            }, category, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1653,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1651,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1642,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1640,\n        columnNumber: 13\n      }, this), Object.keys(gradePoints).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Grade-Specific Points Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1667,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(Th, {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1671,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Grade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1672,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"1st (Gold)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1673,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"2nd (Silver)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1674,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"3rd (Bronze)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1675,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1670,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1669,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(gradePoints).map(([key, pointsConfig]) => {\n              const [category, grade] = key.split('-');\n              return /*#__PURE__*/_jsxDEV(Tr, {\n                children: [/*#__PURE__*/_jsxDEV(Td, {\n                  children: category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1683,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Td, {\n                  children: grade\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1684,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Td, {\n                  children: pointsConfig.gold\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1685,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Td, {\n                  children: pointsConfig.silver\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1686,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Td, {\n                  children: pointsConfig.bronze\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1687,\n                  columnNumber: 25\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1682,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1678,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1668,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1666,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1492,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 610,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"0kCGs/17H3BMDRbmqwrKQ4QvUGY=\", false, function () {\n  return [useNavigate];\n});\n_c17 = AdminDashboard;\nexport default AdminDashboard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17;\n$RefreshReg$(_c, \"DashboardContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"TabContainer\");\n$RefreshReg$(_c4, \"Tab\");\n$RefreshReg$(_c5, \"FormContainer\");\n$RefreshReg$(_c6, \"FormTitle\");\n$RefreshReg$(_c7, \"FormGroup\");\n$RefreshReg$(_c8, \"Label\");\n$RefreshReg$(_c9, \"Input\");\n$RefreshReg$(_c0, \"Select\");\n$RefreshReg$(_c1, \"Button\");\n$RefreshReg$(_c10, \"Table\");\n$RefreshReg$(_c11, \"Th\");\n$RefreshReg$(_c12, \"Td\");\n$RefreshReg$(_c13, \"Tr\");\n$RefreshReg$(_c14, \"ColorPreview\");\n$RefreshReg$(_c15, \"RGBInputContainer\");\n$RefreshReg$(_c16, \"RGBInput\");\n$RefreshReg$(_c17, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","styled","useNavigate","loadFromLocalStorage","saveToLocalStorage","calculateTeamStandings","jsxDEV","_jsxDEV","DashboardContainer","div","_c","Header","h1","_c2","TabContainer","_c3","Tab","button","props","active","_c4","FormContainer","_c5","FormTitle","h2","_c6","FormGroup","_c7","Label","label","_c8","Input","input","_c9","Select","select","_c0","Button","_c1","Table","table","_c10","Th","th","_c11","Td","td","_c12","Tr","tr","_c13","ColorPreview","r","g","b","_c14","RGBInputContainer","_c15","RGBInput","_c16","AdminDashboard","_s","navigate","activeTab","setActiveTab","events","setEvents","teams","setTeams","categories","setCategories","students","setStudents","programs","setPrograms","results","setResults","points","setPoints","gold","silver","bronze","categoryPoints","setCategoryPoints","gradePoints","setGradePoints","availableGrades","setAvailableGrades","newGradePoints","setNewGradePoints","teamManagers","setTeamManagers","newEvent","setNewEvent","name","color","newTeam","setNewTeam","newCategory","setNewCategory","order","newStudent","setNewStudent","chestNumber","team","category","newProgram","setNewProgram","type","newResult","setNewResult","event","program","participants","position","newTeamManager","setNewTeamManager","username","password","editingTeamManager","setEditingTeamManager","adminPassword","setAdminPassword","selectedCategoryForPoints","setSelectedCategoryForPoints","selectedGradeForPoints","setSelectedGradeForPoints","newGrade","setNewGrade","selectedEventForTeams","setSelectedEventForTeams","selectedEventForStudents","setSelectedEventForStudents","selectedEventForPrograms","setSelectedEventForPrograms","selectedEventForResults","setSelectedEventForResults","savedEvents","savedTeams","savedCategories","savedStudents","savedPrograms","savedResults","savedPoints","savedCategoryPoints","savedGradePoints","savedPassword","savedAvailableGrades","savedTeamManagers","savedSelectedEventForTeams","savedSelectedEventForStudents","savedSelectedEventForPrograms","savedSelectedEventForResults","length","prev","preConfigureGradePoints","grade","pointsConfig","updatedGradePoints","forEach","key","updatedTeams","handleCreateEvent","trim","id","map","cat","handleCreateTeam","handleCreateCategory","handleCreateStudent","student","photo","handleCreateProgram","handleAddParticipant","handleParticipantChange","index","field","value","updatedParticipants","handleRemoveParticipant","splice","handleSaveResult","participantsWithPoints","participant","pointValue","participantName","gradeMatch","match","replace","pointConfig","gradeKey","toLowerCase","result","timestamp","Date","toISOString","handleChangePassword","newPassword","prompt","alert","handleSaveCategoryPoints","handleCategoryChangeForPoints","categoryName","handleGradeChangeForPoints","handlePrepopulateAGrade","handleSaveGradePoints","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","display","gap","flexWrap","justifyContent","background","handleLogout","onChange","e","target","placeholder","min","max","parseInt","join","marginTop","teamResults","filter","some","find","s","slice","studentResults","programResults","padding","borderRadius","marginBottom","margin","fontSize","fontStyle","alignItems","flex","backgroundColor","p","i","toUpperCase","maxLength","width","includes","preConfigure","window","confirm","border","cursor","marginLeft","fontWeight","paddingLeft","existingConfig","Object","keys","endsWith","updatedCount","config","entries","split","_c17","$RefreshReg$"],"sources":["C:/Users/SMIC_STUDIO/Desktop/MEHFIL 25 APP/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { loadFromLocalStorage, saveToLocalStorage, calculateTeamStandings } from '../utils/dataStorage';\r\n\r\nconst DashboardContainer = styled.div`\r\n  padding: 20px;\r\n  color: white;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst Header = styled.h1`\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  margin-bottom: 30px;\r\n  color: gold;\r\n`;\r\n\r\nconst TabContainer = styled.div`\r\n  display: flex;\r\n  border-bottom: 2px solid rgba(255,255,255,0.2);\r\n  margin-bottom: 30px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Tab = styled.button`\r\n  padding: 15px 30px;\r\n  background: ${props => props.active ? 'rgba(255,255,255,0.2)' : 'transparent'};\r\n  color: ${props => props.active ? 'gold' : 'white'};\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.1rem;\r\n  font-weight: bold;\r\n\r\n  &:hover {\r\n    background: rgba(255,255,255,0.1);\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    padding: 10px 15px;\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n  background: rgba(255,255,255,0.1);\r\n  border-radius: 15px;\r\n  padding: 30px;\r\n  backdrop-filter: blur(10px);\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst FormTitle = styled.h2`\r\n  margin-top: 0;\r\n  color: gold;\r\n  border-bottom: 1px solid rgba(255,255,255,0.2);\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst FormGroup = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  border: none;\r\n  background: rgba(255,255,255,0.1);\r\n  color: white;\r\n  font-size: 1rem;\r\n\r\n  &:focus {\r\n    outline: 2px solid gold;\r\n  }\r\n`;\r\n\r\nconst Select = styled.select`\r\n  width: 100%;\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  border: none;\r\n  background: rgba(255,255,255,0.1);\r\n  color: white;\r\n  font-size: 1rem;\r\n\r\n  &:focus {\r\n    outline: 2px solid gold;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 12px 25px;\r\n  background: gold;\r\n  color: #333;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n  margin-right: 10px;\r\n  margin-bottom: 10px;\r\n\r\n  &:hover {\r\n    background: #ffd700;\r\n    transform: translateY(-2px);\r\n  }\r\n`;\r\n\r\nconst Table = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  background: rgba(255,255,255,0.1);\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Th = styled.th`\r\n  background: rgba(0,0,0,0.2);\r\n  padding: 15px;\r\n  text-align: left;\r\n`;\r\n\r\nconst Td = styled.td`\r\n  padding: 15px;\r\n  border-bottom: 1px solid rgba(255,255,255,0.1);\r\n`;\r\n\r\nconst Tr = styled.tr`\r\n  &:hover {\r\n    background: rgba(255,255,255,0.05);\r\n  }\r\n`;\r\n\r\nconst ColorPreview = styled.div`\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  background: ${props => `rgb(${props.r}, ${props.g}, ${props.b})`};\r\n  display: inline-block;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst RGBInputContainer = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst RGBInput = styled.input`\r\n  width: 80px;\r\n  padding: 8px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  background: rgba(255,255,255,0.1);\r\n  color: white;\r\n  text-align: center;\r\n`;\r\n\r\nconst AdminDashboard = () => {\r\n  const navigate = useNavigate();\r\n  const [activeTab, setActiveTab] = useState('events');\r\n  const [events, setEvents] = useState([]);\r\n  const [teams, setTeams] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [students, setStudents] = useState([]);\r\n  const [programs, setPrograms] = useState([]);\r\n  const [results, setResults] = useState([]);\r\n  const [points, setPoints] = useState({\r\n    gold: 10,\r\n    silver: 7,\r\n    bronze: 5\r\n  });\r\n  // Category-specific points configuration\r\n  const [categoryPoints, setCategoryPoints] = useState({});\r\n  // Grade-specific points configuration\r\n  const [gradePoints, setGradePoints] = useState({});\r\n  // Available grades configuration\r\n  const [availableGrades, setAvailableGrades] = useState(['A', 'B', 'C', 'D']);\r\n  // New grade points configuration\r\n  const [newGradePoints, setNewGradePoints] = useState({\r\n    gold: 10,\r\n    silver: 7,\r\n    bronze: 5\r\n  });\r\n  // Team managers configuration\r\n  const [teamManagers, setTeamManagers] = useState([]);\r\n  \r\n  // Form states\r\n  const [newEvent, setNewEvent] = useState({ name: '', categories: [], color: { r: 106, g: 17, b: 203 } });\r\n  const [newTeam, setNewTeam] = useState({ name: '', color: '#FF5733' });\r\n  const [newCategory, setNewCategory] = useState({ name: '', order: 1 });\r\n  const [newStudent, setNewStudent] = useState({ name: '', chestNumber: '', team: '', category: '' });\r\n  const [newProgram, setNewProgram] = useState({ name: '', type: 'Individual' });\r\n  const [newResult, setNewResult] = useState({ \r\n    event: '', \r\n    program: '', \r\n    category: '', \r\n    participants: [{ name: '', position: '' }] \r\n  });\r\n  const [newTeamManager, setNewTeamManager] = useState({ \r\n    username: '', \r\n    password: '', \r\n    team: '' \r\n  });\r\n  const [editingTeamManager, setEditingTeamManager] = useState(null);\r\n  const [adminPassword, setAdminPassword] = useState('admin123');\r\n  const [selectedCategoryForPoints, setSelectedCategoryForPoints] = useState('');\r\n  const [selectedGradeForPoints, setSelectedGradeForPoints] = useState('');\r\n  const [newGrade, setNewGrade] = useState('');\r\n  \r\n  // Event filtering states\r\n  const [selectedEventForTeams, setSelectedEventForTeams] = useState('');\r\n  const [selectedEventForStudents, setSelectedEventForStudents] = useState('');\r\n  const [selectedEventForPrograms, setSelectedEventForPrograms] = useState('');\r\n  const [selectedEventForResults, setSelectedEventForResults] = useState('');\r\n\r\n  // Load data from localStorage on component mount\r\n  useEffect(() => {\r\n    const savedEvents = loadFromLocalStorage('events', []);\r\n    const savedTeams = loadFromLocalStorage('teams', []);\r\n    const savedCategories = loadFromLocalStorage('categories', []);\r\n    const savedStudents = loadFromLocalStorage('students', []);\r\n    const savedPrograms = loadFromLocalStorage('programs', []);\r\n    const savedResults = loadFromLocalStorage('results', []);\r\n    const savedPoints = loadFromLocalStorage('points', { gold: 10, silver: 7, bronze: 5 });\r\n    const savedCategoryPoints = loadFromLocalStorage('categoryPoints', {});\r\n    const savedGradePoints = loadFromLocalStorage('gradePoints', {});\r\n    const savedPassword = loadFromLocalStorage('adminPassword', 'admin123');\r\n    const savedAvailableGrades = loadFromLocalStorage('availableGrades', ['A', 'B', 'C', 'D']);\r\n    const savedTeamManagers = loadFromLocalStorage('teamManagers', []);\r\n    \r\n    // Load event filtering states\r\n    const savedSelectedEventForTeams = loadFromLocalStorage('selectedEventForTeams', '');\r\n    const savedSelectedEventForStudents = loadFromLocalStorage('selectedEventForStudents', '');\r\n    const savedSelectedEventForPrograms = loadFromLocalStorage('selectedEventForPrograms', '');\r\n    const savedSelectedEventForResults = loadFromLocalStorage('selectedEventForResults', '');\r\n    \r\n    setEvents(savedEvents);\r\n    setTeams(savedTeams);\r\n    setCategories(savedCategories);\r\n    setStudents(savedStudents);\r\n    setPrograms(savedPrograms);\r\n    setResults(savedResults);\r\n    setPoints(savedPoints);\r\n    setCategoryPoints(savedCategoryPoints);\r\n    setGradePoints(savedGradePoints);\r\n    setAdminPassword(savedPassword);\r\n    setAvailableGrades(savedAvailableGrades);\r\n    setTeamManagers(savedTeamManagers);\r\n    \r\n    // Set event filtering states\r\n    setSelectedEventForTeams(savedSelectedEventForTeams);\r\n    setSelectedEventForStudents(savedSelectedEventForStudents);\r\n    setSelectedEventForPrograms(savedSelectedEventForPrograms);\r\n    setSelectedEventForResults(savedSelectedEventForResults);\r\n    \r\n    // Initialize form select options\r\n    if (savedEvents.length > 0) {\r\n      setNewResult(prev => ({ ...prev, event: savedEvents[0].name }));\r\n    }\r\n    if (savedPrograms.length > 0) {\r\n      setNewResult(prev => ({ ...prev, program: savedPrograms[0].name }));\r\n    }\r\n    if (savedCategories.length > 0) {\r\n      setNewResult(prev => ({ ...prev, category: savedCategories[0].name }));\r\n      setSelectedCategoryForPoints(savedCategories[0].name);\r\n    }\r\n    if (savedTeams.length > 0) {\r\n      setNewTeamManager(prev => ({ ...prev, team: savedTeams[0].name }));\r\n    }\r\n  }, []);\r\n\r\n  // Function to pre-configure points for a new grade across all categories\r\n  const preConfigureGradePoints = (grade, pointsConfig) => {\r\n    const updatedGradePoints = { ...gradePoints };\r\n    \r\n    // For each category, create a default grade point configuration\r\n    categories.forEach(category => {\r\n      const key = `${category.name}-${grade}`;\r\n      updatedGradePoints[key] = { ...pointsConfig };\r\n    });\r\n    \r\n    setGradePoints(updatedGradePoints);\r\n  };\r\n\r\n  // Update team standings when results or points change\r\n  useEffect(() => {\r\n    const savedTeams = loadFromLocalStorage('teams', []);\r\n    const updatedTeams = calculateTeamStandings(savedTeams, results, points, categoryPoints, gradePoints);\r\n    setTeams(updatedTeams);\r\n  }, [results, points, categoryPoints, gradePoints]);\r\n\r\n  // Save data to localStorage whenever state changes\r\n  useEffect(() => {\r\n    saveToLocalStorage('events', events);\r\n  }, [events]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('teams', teams);\r\n  }, [teams]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('categories', categories);\r\n  }, [categories]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('students', students);\r\n  }, [students]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('programs', programs);\r\n  }, [programs]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('results', results);\r\n  }, [results]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('points', points);\r\n  }, [points]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('categoryPoints', categoryPoints);\r\n  }, [categoryPoints]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('gradePoints', gradePoints);\r\n  }, [gradePoints]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('adminPassword', adminPassword);\r\n  }, [adminPassword]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('availableGrades', availableGrades);\r\n  }, [availableGrades]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('teamManagers', teamManagers);\r\n  }, [teamManagers]);\r\n\r\n  // Save event filtering states to localStorage\r\n  useEffect(() => {\r\n    saveToLocalStorage('selectedEventForTeams', selectedEventForTeams);\r\n  }, [selectedEventForTeams]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('selectedEventForStudents', selectedEventForStudents);\r\n  }, [selectedEventForStudents]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('selectedEventForPrograms', selectedEventForPrograms);\r\n  }, [selectedEventForPrograms]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('selectedEventForResults', selectedEventForResults);\r\n  }, [selectedEventForResults]);\r\n\r\n  const handleCreateEvent = () => {\r\n    if (newEvent.name.trim() === '') return;\r\n    const event = {\r\n      id: events.length + 1,\r\n      name: newEvent.name,\r\n      categories: categories.map(cat => cat.name),\r\n      color: newEvent.color\r\n    };\r\n    setEvents([...events, event]);\r\n    setNewEvent({ name: '', categories: [], color: { r: 106, g: 17, b: 203 } });\r\n  };\r\n\r\n  const handleCreateTeam = () => {\r\n    if (newTeam.name.trim() === '') return;\r\n    const team = {\r\n      id: teams.length + 1,\r\n      name: newTeam.name,\r\n      color: newTeam.color\r\n    };\r\n    setTeams([...teams, team]);\r\n    setNewTeam({ name: '', color: '#FF5733' });\r\n  };\r\n\r\n  const handleCreateCategory = () => {\r\n    if (newCategory.name.trim() === '') return;\r\n    const category = {\r\n      id: categories.length + 1,\r\n      name: newCategory.name,\r\n      order: newCategory.order\r\n    };\r\n    setCategories([...categories, category]);\r\n    setNewCategory({ name: '', order: categories.length + 2 });\r\n  };\r\n\r\n  const handleCreateStudent = () => {\r\n    if (newStudent.name.trim() === '' || newStudent.chestNumber.trim() === '') return;\r\n    const student = {\r\n      id: students.length + 1,\r\n      name: newStudent.name,\r\n      chestNumber: newStudent.chestNumber,\r\n      team: newStudent.team,\r\n      category: newStudent.category,\r\n      photo: null\r\n    };\r\n    setStudents([...students, student]);\r\n    setNewStudent({ name: '', chestNumber: '', team: '', category: '' });\r\n  };\r\n\r\n  const handleCreateProgram = () => {\r\n    if (newProgram.name.trim() === '') return;\r\n    const program = {\r\n      id: programs.length + 1,\r\n      name: newProgram.name,\r\n      type: newProgram.type\r\n    };\r\n    setPrograms([...programs, program]);\r\n    setNewProgram({ name: '', type: 'Individual' });\r\n  };\r\n\r\n  const handleAddParticipant = () => {\r\n    setNewResult({\r\n      ...newResult,\r\n      participants: [...newResult.participants, { name: '', position: '' }]\r\n    });\r\n  };\r\n\r\n  const handleParticipantChange = (index, field, value) => {\r\n    const updatedParticipants = [...newResult.participants];\r\n    updatedParticipants[index][field] = value;\r\n    setNewResult({\r\n      ...newResult,\r\n      participants: updatedParticipants\r\n    });\r\n  };\r\n\r\n  const handleRemoveParticipant = (index) => {\r\n    if (newResult.participants.length <= 1) return;\r\n    const updatedParticipants = [...newResult.participants];\r\n    updatedParticipants.splice(index, 1);\r\n    setNewResult({\r\n      ...newResult,\r\n      participants: updatedParticipants\r\n    });\r\n  };\r\n\r\n  const handleSaveResult = () => {\r\n    // Calculate points based on position, category, and grade\r\n    const participantsWithPoints = newResult.participants.map(participant => {\r\n      let pointValue = 0;\r\n      \r\n      // Extract grade from participant name if it exists (e.g., \"John Doe (A)\" or \"SJ001 (B)\")\r\n      let grade = '';\r\n      let participantName = participant.name;\r\n      \r\n      // Updated regex to handle more grades (A, B, C, D)\r\n      const gradeMatch = participant.name.match(/\\(([A-D])\\)$/);\r\n      if (gradeMatch) {\r\n        grade = gradeMatch[1];\r\n        participantName = participant.name.replace(/\\s*\\([A-D]\\)$/, '');\r\n      }\r\n      \r\n      // Use grade-specific points if available\r\n      let pointConfig = points; // default\r\n      \r\n      // Use the category from the current result being saved, not the selected category for points configuration\r\n      if (grade && newResult.category) {\r\n        const gradeKey = `${newResult.category}-${grade}`;\r\n        if (gradePoints[gradeKey]) {\r\n          pointConfig = gradePoints[gradeKey];\r\n        } else if (categoryPoints[newResult.category]) {\r\n          // Fall back to category-specific points\r\n          pointConfig = categoryPoints[newResult.category];\r\n        }\r\n      } else if (categoryPoints[newResult.category]) {\r\n        // Use category-specific points if no grade specified\r\n        pointConfig = categoryPoints[newResult.category];\r\n      }\r\n      \r\n      switch (participant.position.toLowerCase()) {\r\n        case '1':\r\n        case 'first':\r\n        case 'gold':\r\n          pointValue = pointConfig.gold;\r\n          break;\r\n        case '2':\r\n        case 'second':\r\n        case 'silver':\r\n          pointValue = pointConfig.silver;\r\n          break;\r\n        case '3':\r\n        case 'third':\r\n        case 'bronze':\r\n          pointValue = pointConfig.bronze;\r\n          break;\r\n        default:\r\n          pointValue = 0;\r\n      }\r\n      \r\n      return {\r\n        ...participant,\r\n        points: pointValue\r\n      };\r\n    });\r\n    \r\n    const result = {\r\n      id: results.length + 1,\r\n      event: newResult.event,\r\n      program: newResult.program,\r\n      category: newResult.category,\r\n      participants: participantsWithPoints,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    \r\n    setResults([...results, result]);\r\n    \r\n    // Reset form\r\n    setNewResult({ \r\n      event: newResult.event, \r\n      program: newResult.program, \r\n      category: newResult.category, \r\n      participants: [{ name: '', position: '' }] \r\n    });\r\n  };\r\n\r\n  const handleChangePassword = () => {\r\n    // In a real app, you would validate the current password first\r\n    const newPassword = prompt('Enter new password:');\r\n    if (newPassword && newPassword.trim() !== '') {\r\n      setAdminPassword(newPassword.trim());\r\n      alert('Password updated successfully!');\r\n    }\r\n  };\r\n\r\n  const handleSaveCategoryPoints = () => {\r\n    if (!selectedCategoryForPoints) return;\r\n    \r\n    setCategoryPoints({\r\n      ...categoryPoints,\r\n      [selectedCategoryForPoints]: { ...points }\r\n    });\r\n    \r\n    alert(`Points configuration saved for category: ${selectedCategoryForPoints}`);\r\n  };\r\n\r\n  const handleCategoryChangeForPoints = (categoryName) => {\r\n    setSelectedCategoryForPoints(categoryName);\r\n    \r\n    // Load existing points for this category if they exist\r\n    if (categoryPoints[categoryName]) {\r\n      setPoints(categoryPoints[categoryName]);\r\n    } else {\r\n      // Reset to default points if no custom points for this category\r\n      setPoints({ gold: 10, silver: 7, bronze: 5 });\r\n    }\r\n  };\r\n\r\n  // Handle grade selection for points configuration\r\n  const handleGradeChangeForPoints = (grade) => {\r\n    setSelectedGradeForPoints(grade);\r\n    \r\n    // Create a key for category-grade combination\r\n    const key = `${selectedCategoryForPoints}-${grade}`;\r\n    \r\n    // Load existing points for this category-grade combination if they exist\r\n    if (gradePoints[key]) {\r\n      setPoints(gradePoints[key]);\r\n    } else {\r\n      // Check if there are category-specific points\r\n      if (categoryPoints[selectedCategoryForPoints]) {\r\n        setPoints(categoryPoints[selectedCategoryForPoints]);\r\n      } else {\r\n        // Reset to default points\r\n        setPoints({ gold: 10, silver: 7, bronze: 5 });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Pre-populate A grade points example\r\n  const handlePrepopulateAGrade = () => {\r\n    if (!selectedCategoryForPoints) {\r\n      alert('Please select a category first');\r\n      return;\r\n    }\r\n    \r\n    setSelectedGradeForPoints('A');\r\n    setPoints({ gold: 10, silver: 7, bronze: 5 });\r\n  };\r\n\r\n  // Save grade-specific points\r\n  const handleSaveGradePoints = () => {\r\n    if (!selectedCategoryForPoints || !selectedGradeForPoints) return;\r\n    \r\n    const key = `${selectedCategoryForPoints}-${selectedGradeForPoints}`;\r\n    \r\n    setGradePoints({\r\n      ...gradePoints,\r\n      [key]: { ...points }\r\n    });\r\n    \r\n    alert(`Points configuration saved for category: ${selectedCategoryForPoints}, grade: ${selectedGradeForPoints}`);\r\n  };\r\n\r\n  return (\r\n    <DashboardContainer>\r\n      <Header>Admin Dashboard</Header>\r\n      \r\n      <TabContainer>\r\n        <Tab active={activeTab === 'switcher'} onClick={() => setActiveTab('switcher')}>Role Switcher</Tab>\r\n        <Tab active={activeTab === 'events'} onClick={() => setActiveTab('events')}>Events</Tab>\r\n        <Tab active={activeTab === 'categories'} onClick={() => setActiveTab('categories')}>Categories</Tab>\r\n        <Tab active={activeTab === 'teams'} onClick={() => setActiveTab('teams')}>Teams</Tab>\r\n        <Tab active={activeTab === 'students'} onClick={() => setActiveTab('students')}>Students</Tab>\r\n        <Tab active={activeTab === 'programs'} onClick={() => setActiveTab('programs')}>Programs</Tab>\r\n        <Tab active={activeTab === 'results'} onClick={() => setActiveTab('results')}>Results</Tab>\r\n        <Tab active={activeTab === 'grades'} onClick={() => setActiveTab('grades')}>Grades</Tab>\r\n        <Tab active={activeTab === 'batch-points'} onClick={() => setActiveTab('batch-points')}>Batch Points</Tab>\r\n        <Tab active={activeTab === 'points'} onClick={() => setActiveTab('points')}>Points</Tab>\r\n      </TabContainer>\r\n      \r\n      {activeTab === 'switcher' && (\r\n        <FormContainer>\r\n          <FormTitle>Switch Between Roles</FormTitle>\r\n          <div style={{ display: 'flex', gap: '20px', flexWrap: 'wrap', justifyContent: 'center' }}>\r\n            <Button \r\n              onClick={() => navigate('/')}\r\n              style={{ background: 'rgba(255,255,255,0.2)', color: 'white' }}\r\n            >\r\n              Public View\r\n            </Button>\r\n            <Button \r\n              onClick={() => {}}\r\n              style={{ background: 'gold', color: '#333' }}\r\n            >\r\n              Admin Dashboard\r\n            </Button>\r\n            <Button \r\n              onClick={() => navigate('/team-manager-login')}\r\n              style={{ background: 'rgba(255,255,255,0.2)', color: 'white' }}\r\n            >\r\n              Team Manager\r\n            </Button>\r\n            <Button \r\n              onClick={handleLogout}\r\n              style={{ background: '#ff4757', color: 'white' }}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </div>\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'events' && (\r\n        <FormContainer>\r\n          <FormTitle>Create New Event</FormTitle>\r\n          <FormGroup>\r\n            <Label>Event Name</Label>\r\n            <Input \r\n              type=\"text\" \r\n              value={newEvent.name}\r\n              onChange={(e) => setNewEvent({...newEvent, name: e.target.value})}\r\n              placeholder=\"Enter event name\"\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label>Event Color (RGB)</Label>\r\n            <RGBInputContainer>\r\n              <div>\r\n                <Label>R</Label>\r\n                <RGBInput \r\n                  type=\"number\" \r\n                  min=\"0\" \r\n                  max=\"255\" \r\n                  value={newEvent.color.r}\r\n                  onChange={(e) => setNewEvent({\r\n                    ...newEvent, \r\n                    color: {...newEvent.color, r: parseInt(e.target.value) || 0}\r\n                  })}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label>G</Label>\r\n                <RGBInput \r\n                  type=\"number\" \r\n                  min=\"0\" \r\n                  max=\"255\" \r\n                  value={newEvent.color.g}\r\n                  onChange={(e) => setNewEvent({\r\n                    ...newEvent, \r\n                    color: {...newEvent.color, g: parseInt(e.target.value) || 0}\r\n                  })}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label>B</Label>\r\n                <RGBInput \r\n                  type=\"number\" \r\n                  min=\"0\" \r\n                  max=\"255\" \r\n                  value={newEvent.color.b}\r\n                  onChange={(e) => setNewEvent({\r\n                    ...newEvent, \r\n                    color: {...newEvent.color, b: parseInt(e.target.value) || 0}\r\n                  })}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label>Preview</Label>\r\n                <ColorPreview r={newEvent.color.r} g={newEvent.color.g} b={newEvent.color.b} />\r\n              </div>\r\n            </RGBInputContainer>\r\n          </FormGroup>\r\n          \r\n          <Button onClick={handleCreateEvent}>Create Event</Button>\r\n          \r\n          <h3>Existing Events</h3>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <Th>Name</Th>\r\n                <Th>Categories</Th>\r\n                <Th>Color</Th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {events.map(event => (\r\n                <Tr key={event.id}>\r\n                  <Td>{event.name}</Td>\r\n                  <Td>{event.categories.join(', ')}</Td>\r\n                  <Td>\r\n                    <ColorPreview r={event.color.r} g={event.color.g} b={event.color.b} />\r\n                    RGB({event.color.r}, {event.color.g}, {event.color.b})\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'categories' && (\r\n        <FormContainer>\r\n          <FormTitle>Manage Categories</FormTitle>\r\n          <FormGroup>\r\n            <Label>Category Name</Label>\r\n            <Input \r\n              type=\"text\" \r\n              value={newCategory.name}\r\n              onChange={(e) => setNewCategory({...newCategory, name: e.target.value})}\r\n              placeholder=\"Enter category name\"\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label>Display Order</Label>\r\n            <Input \r\n              type=\"number\" \r\n              value={newCategory.order}\r\n              onChange={(e) => setNewCategory({...newCategory, order: parseInt(e.target.value) || 1})}\r\n              placeholder=\"Enter display order\"\r\n            />\r\n          </FormGroup>\r\n          \r\n          <Button onClick={handleCreateCategory}>Add Category</Button>\r\n          \r\n          <h3>Existing Categories</h3>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <Th>Name</Th>\r\n                <Th>Order</Th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {categories.map(category => (\r\n                <Tr key={category.id}>\r\n                  <Td>{category.name}</Td>\r\n                  <Td>{category.order}</Td>\r\n                </Tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'teams' && (\r\n        <FormContainer>\r\n          <FormTitle>Create New Team</FormTitle>\r\n          <FormGroup>\r\n            <Label>Team Name</Label>\r\n            <Input \r\n              type=\"text\" \r\n              value={newTeam.name}\r\n              onChange={(e) => setNewTeam({...newTeam, name: e.target.value})}\r\n              placeholder=\"Enter team name\"\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label>Team Color</Label>\r\n            <Input \r\n              type=\"color\" \r\n              value={newTeam.color}\r\n              onChange={(e) => setNewTeam({...newTeam, color: e.target.value})}\r\n            />\r\n          </FormGroup>\r\n          \r\n          <Button onClick={handleCreateTeam}>Create Team</Button>\r\n          \r\n          {/* Event filter for teams */}\r\n          <div style={{ marginTop: '30px' }}>\r\n            <FormGroup>\r\n              <Label>Filter Teams by Event</Label>\r\n              <Select \r\n                value={selectedEventForTeams}\r\n                onChange={(e) => setSelectedEventForTeams(e.target.value)}\r\n              >\r\n                <option value=\"\">All Events</option>\r\n                {events.map(event => (\r\n                  <option key={event.id} value={event.name}>{event.name}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            \r\n            <h3>Existing Teams</h3>\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <Th>Name</Th>\r\n                  <Th>Color</Th>\r\n                  {selectedEventForTeams && <Th>Participated in {selectedEventForTeams}</Th>}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {teams.map(team => {\r\n                  // Filter teams that participated in the selected event if any\r\n                  if (selectedEventForTeams) {\r\n                    const teamResults = results.filter(result => \r\n                      result.event === selectedEventForTeams &&\r\n                      result.participants.some(participant => {\r\n                        const student = students.find(s => \r\n                          s.chestNumber === participant.name || \r\n                          s.name === participant.name\r\n                        );\r\n                        return student && student.team === team.name;\r\n                      })\r\n                    );\r\n                    \r\n                    // If no results for this team in the selected event, skip\r\n                    if (teamResults.length === 0) return null;\r\n                  }\r\n                  \r\n                  return (\r\n                    <Tr key={team.id}>\r\n                      <Td>{team.name}</Td>\r\n                      <Td>\r\n                        <ColorPreview r={parseInt(team.color.slice(1, 3), 16)} \r\n                                     g={parseInt(team.color.slice(3, 5), 16)} \r\n                                     b={parseInt(team.color.slice(5, 7), 16)} />\r\n                        {team.color}\r\n                      </Td>\r\n                      {selectedEventForTeams && (\r\n                        <Td>\r\n                          Participated\r\n                        </Td>\r\n                      )}\r\n                    </Tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'students' && (\r\n        <FormContainer>\r\n          <FormTitle>Register Student</FormTitle>\r\n          <FormGroup>\r\n            <Label>Student Name</Label>\r\n            <Input \r\n              type=\"text\" \r\n              value={newStudent.name}\r\n              onChange={(e) => setNewStudent({...newStudent, name: e.target.value})}\r\n              placeholder=\"Enter student name\"\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label>Chest Number</Label>\r\n            <Input \r\n              type=\"text\" \r\n              value={newStudent.chestNumber}\r\n              onChange={(e) => setNewStudent({...newStudent, chestNumber: e.target.value})}\r\n              placeholder=\"Enter chest number\"\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label>Team</Label>\r\n            <Select \r\n              value={newStudent.team}\r\n              onChange={(e) => setNewStudent({...newStudent, team: e.target.value})}\r\n            >\r\n              <option value=\"\">Select a team</option>\r\n              {teams.map(team => (\r\n                <option key={team.id} value={team.name}>{team.name}</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label>Category</Label>\r\n            <Select \r\n              value={newStudent.category}\r\n              onChange={(e) => setNewStudent({...newStudent, category: e.target.value})}\r\n            >\r\n              <option value=\"\">Select a category</option>\r\n              {categories.map(category => (\r\n                <option key={category.id} value={category.name}>{category.name}</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          <Button onClick={handleCreateStudent}>Register Student</Button>\r\n          \r\n          {/* Event filter for students */}\r\n          <div style={{ marginTop: '30px' }}>\r\n            <FormGroup>\r\n              <Label>Filter Students by Event</Label>\r\n              <Select \r\n                value={selectedEventForStudents}\r\n                onChange={(e) => setSelectedEventForStudents(e.target.value)}\r\n              >\r\n                <option value=\"\">All Events</option>\r\n                {events.map(event => (\r\n                  <option key={event.id} value={event.name}>{event.name}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            \r\n            <h3>Registered Students</h3>\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <Th>Name</Th>\r\n                  <Th>Chest Number</Th>\r\n                  <Th>Team</Th>\r\n                  <Th>Category</Th>\r\n                  {selectedEventForStudents && <Th>Participated in {selectedEventForStudents}</Th>}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {students.map(student => {\r\n                  // Filter students who participated in the selected event if any\r\n                  if (selectedEventForStudents) {\r\n                    const studentResults = results.filter(result => \r\n                      result.event === selectedEventForStudents &&\r\n                      result.participants.some(participant => \r\n                        participant.name === student.chestNumber || \r\n                        participant.name === student.name\r\n                      )\r\n                    );\r\n                    \r\n                    // If no results for this student in the selected event, skip\r\n                    if (studentResults.length === 0) return null;\r\n                  }\r\n                  \r\n                  return (\r\n                    <Tr key={student.id}>\r\n                      <Td>{student.name}</Td>\r\n                      <Td>{student.chestNumber}</Td>\r\n                      <Td>{student.team}</Td>\r\n                      <Td>{student.category}</Td>\r\n                      {selectedEventForStudents && (\r\n                        <Td>\r\n                          Participated\r\n                        </Td>\r\n                      )}\r\n                    </Tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'programs' && (\r\n        <FormContainer>\r\n          <FormTitle>Define Program</FormTitle>\r\n          <FormGroup>\r\n            <Label>Program Name</Label>\r\n            <Input \r\n              type=\"text\" \r\n              value={newProgram.name}\r\n              onChange={(e) => setNewProgram({...newProgram, name: e.target.value})}\r\n              placeholder=\"Enter program name\"\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label>Program Type</Label>\r\n            <Select \r\n              value={newProgram.type}\r\n              onChange={(e) => setNewProgram({...newProgram, type: e.target.value})}\r\n            >\r\n              <option value=\"Individual\">Individual</option>\r\n              <option value=\"Group\">Group</option>\r\n              <option value=\"General\">General</option>\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          <Button onClick={handleCreateProgram}>Add Program</Button>\r\n          \r\n          {/* Event filter for programs */}\r\n          <div style={{ marginTop: '30px' }}>\r\n            <FormGroup>\r\n              <Label>Filter Programs by Event</Label>\r\n              <Select \r\n                value={selectedEventForPrograms}\r\n                onChange={(e) => setSelectedEventForPrograms(e.target.value)}\r\n              >\r\n                <option value=\"\">All Events</option>\r\n                {events.map(event => (\r\n                  <option key={event.id} value={event.name}>{event.name}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            \r\n            <h3>Existing Programs</h3>\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <Th>Name</Th>\r\n                  <Th>Type</Th>\r\n                  {selectedEventForPrograms && <Th>Used in {selectedEventForPrograms}</Th>}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {programs.map(program => {\r\n                  // Filter programs used in the selected event if any\r\n                  if (selectedEventForPrograms) {\r\n                    const programResults = results.filter(result => \r\n                      result.event === selectedEventForPrograms &&\r\n                      result.program === program.name\r\n                    );\r\n                    \r\n                    // If no results for this program in the selected event, skip\r\n                    if (programResults.length === 0) return null;\r\n                  }\r\n                  \r\n                  return (\r\n                    <Tr key={program.id}>\r\n                      <Td>{program.name}</Td>\r\n                      <Td>{program.type}</Td>\r\n                      {selectedEventForPrograms && (\r\n                        <Td>\r\n                          Used\r\n                        </Td>\r\n                      )}\r\n                    </Tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'results' && (\r\n        <FormContainer>\r\n          <FormTitle>Enter Results</FormTitle>\r\n          \r\n          <div style={{ \r\n            background: 'rgba(255,255,255,0.1)', \r\n            padding: '15px', \r\n            borderRadius: '10px', \r\n            marginBottom: '20px' \r\n          }}>\r\n            <p style={{ margin: '0 0 10px 0', color: 'gold' }}>\r\n              <strong>Tip:</strong> To use grade-specific points, include the grade in participant names\r\n            </p>\r\n            <p style={{ margin: '0 0 5px 0', fontSize: '0.9rem' }}>\r\n              Examples: \"John Doe (A)\" or \"SJ001 (B)\"\r\n            </p>\r\n            <p style={{ margin: 0, fontSize: '0.9rem', fontStyle: 'italic' }}>\r\n              Configure grade points in the \"Points\" tab\r\n            </p>\r\n          </div>\r\n          \r\n          <FormGroup>\r\n            <Label>Event</Label>\r\n            <Select \r\n              value={newResult.event}\r\n              onChange={(e) => setNewResult({...newResult, event: e.target.value})}\r\n            >\r\n              <option value=\"\">Select an event</option>\r\n              {events.map(event => (\r\n                <option key={event.id} value={event.name}>{event.name}</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label>Program</Label>\r\n            <Select \r\n              value={newResult.program}\r\n              onChange={(e) => setNewResult({...newResult, program: e.target.value})}\r\n            >\r\n              <option value=\"\">Select a program</option>\r\n              {programs.map(program => (\r\n                <option key={program.id} value={program.name}>{program.name}</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label>Category</Label>\r\n            <Select \r\n              value={newResult.category}\r\n              onChange={(e) => setNewResult({...newResult, category: e.target.value})}\r\n            >\r\n              <option value=\"\">Select a category</option>\r\n              {categories.map(category => (\r\n                <option key={category.id} value={category.name}>{category.name}</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          <h3>Participants & Positions</h3>\r\n          {newResult.participants.map((participant, index) => (\r\n            <FormGroup key={index}>\r\n              <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\r\n                <Input \r\n                  type=\"text\" \r\n                  placeholder=\"Participant name or chest number\"\r\n                  value={participant.name}\r\n                  onChange={(e) => handleParticipantChange(index, 'name', e.target.value)}\r\n                  style={{ flex: 1 }}\r\n                />\r\n                <Input \r\n                  type=\"text\" \r\n                  placeholder=\"Position (1st, 2nd, 3rd or Gold, Silver, Bronze)\"\r\n                  value={participant.position}\r\n                  onChange={(e) => handleParticipantChange(index, 'position', e.target.value)}\r\n                  style={{ flex: 1 }}\r\n                />\r\n                {newResult.participants.length > 1 && (\r\n                  <Button onClick={() => handleRemoveParticipant(index)} style={{ backgroundColor: '#ff4757' }}>\r\n                    Remove\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </FormGroup>\r\n          ))}\r\n          \r\n          <Button onClick={handleAddParticipant}>Add Participant</Button>\r\n          <Button onClick={handleSaveResult}>Save Result</Button>\r\n          \r\n          {/* Event filter for results */}\r\n          <div style={{ marginTop: '30px' }}>\r\n            <FormGroup>\r\n              <Label>Filter Results by Event</Label>\r\n              <Select \r\n                value={selectedEventForResults}\r\n                onChange={(e) => setSelectedEventForResults(e.target.value)}\r\n              >\r\n                <option value=\"\">All Events</option>\r\n                {events.map(event => (\r\n                  <option key={event.id} value={event.name}>{event.name}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            \r\n            <h3>Existing Results</h3>\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <Th>Event</Th>\r\n                  <Th>Program</Th>\r\n                  <Th>Category</Th>\r\n                  <Th>Participants</Th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {results\r\n                  .filter(result => !selectedEventForResults || result.event === selectedEventForResults)\r\n                  .map(result => (\r\n                    <Tr key={result.id}>\r\n                      <Td>{result.event}</Td>\r\n                      <Td>{result.program}</Td>\r\n                      <Td>{result.category}</Td>\r\n                      <Td>\r\n                        {result.participants.map((p, i) => (\r\n                          <div key={i}>\r\n                            {p.name} - {p.position} ({p.points} points)\r\n                          </div>\r\n                        ))}\r\n                      </Td>\r\n                    </Tr>\r\n                  ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'grades' && (\r\n        <FormContainer>\r\n          <FormTitle>Manage Grades</FormTitle>\r\n          \r\n          <div style={{ \r\n            background: 'rgba(255,255,255,0.1)', \r\n            padding: '15px', \r\n            borderRadius: '10px', \r\n            marginBottom: '20px' \r\n          }}>\r\n            <h3 style={{ marginTop: 0, color: 'gold' }}>Add New Grade with Points</h3>\r\n            <FormGroup>\r\n              <Label>Grade Letter</Label>\r\n              <Input \r\n                type=\"text\" \r\n                value={newGrade}\r\n                onChange={(e) => setNewGrade(e.target.value.toUpperCase())}\r\n                placeholder=\"Enter grade (e.g., A, B, C)\"\r\n                maxLength=\"1\"\r\n                style={{ width: '80px' }}\r\n              />\r\n            </FormGroup>\r\n            \r\n            <FormGroup>\r\n              <Label>Default Points for this Grade</Label>\r\n              <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap' }}>\r\n                <div>\r\n                  <Label>1st (Gold)</Label>\r\n                  <Input \r\n                    type=\"number\" \r\n                    value={newGradePoints.gold}\r\n                    onChange={(e) => setNewGradePoints({...newGradePoints, gold: parseInt(e.target.value) || 0})}\r\n                    style={{ width: '80px' }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label>2nd (Silver)</Label>\r\n                  <Input \r\n                    type=\"number\" \r\n                    value={newGradePoints.silver}\r\n                    onChange={(e) => setNewGradePoints({...newGradePoints, silver: parseInt(e.target.value) || 0})}\r\n                    style={{ width: '80px' }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label>3rd (Bronze)</Label>\r\n                  <Input \r\n                    type=\"number\" \r\n                    value={newGradePoints.bronze}\r\n                    onChange={(e) => setNewGradePoints({...newGradePoints, bronze: parseInt(e.target.value) || 0})}\r\n                    style={{ width: '80px' }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </FormGroup>\r\n            \r\n            <Button \r\n              onClick={() => {\r\n                if (newGrade && !availableGrades.includes(newGrade)) {\r\n                  // Add the new grade to available grades\r\n                  setAvailableGrades([...availableGrades, newGrade]);\r\n                  \r\n                  // Ask user if they want to pre-configure points for all categories\r\n                  const preConfigure = window.confirm(\r\n                    `Grade ${newGrade} added successfully!\\n\\n` +\r\n                    `Do you want to pre-configure default points (${newGradePoints.gold}/${newGradePoints.silver}/${newGradePoints.bronze}) ` +\r\n                    `for this grade across all categories?\\n\\n` +\r\n                    `You can always customize these later in the Points tab.`\r\n                  );\r\n                  \r\n                  if (preConfigure) {\r\n                    preConfigureGradePoints(newGrade, newGradePoints);\r\n                    alert(`Points pre-configured for grade ${newGrade} across all categories!`);\r\n                  }\r\n                  \r\n                  setNewGrade('');\r\n                  setNewGradePoints({ gold: 10, silver: 7, bronze: 5 });\r\n                } else if (availableGrades.includes(newGrade)) {\r\n                  alert(`Grade ${newGrade} already exists!`);\r\n                } else {\r\n                  alert('Please enter a valid grade letter.');\r\n                }\r\n              }}\r\n            >\r\n              Add Grade\r\n            </Button>\r\n          </div>\r\n          \r\n          <h3>Available Grades</h3>\r\n          <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap', marginBottom: '20px' }}>\r\n            {availableGrades.map((grade, index) => (\r\n              <div \r\n                key={index} \r\n                style={{ \r\n                  background: 'rgba(255,255,255,0.2)', \r\n                  padding: '10px 15px', \r\n                  borderRadius: '20px',\r\n                  display: 'flex',\r\n                  alignItems: 'center'\r\n                }}\r\n              >\r\n                <span>{grade}</span>\r\n                <button \r\n                  onClick={() => {\r\n                    if (availableGrades.length > 1) {\r\n                      setAvailableGrades(availableGrades.filter(g => g !== grade));\r\n                    } else {\r\n                      alert('You must have at least one grade!');\r\n                    }\r\n                  }}\r\n                  style={{ \r\n                    background: 'transparent', \r\n                    border: 'none', \r\n                    color: 'red', \r\n                    cursor: 'pointer',\r\n                    marginLeft: '10px',\r\n                    fontWeight: 'bold'\r\n                  }}\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          \r\n          <div>\r\n            <h3>Grade Point Configuration Example</h3>\r\n            <div style={{ \r\n              background: 'rgba(255,255,255,0.1)', \r\n              padding: '20px', \r\n              borderRadius: '10px', \r\n              marginBottom: '20px' \r\n            }}>\r\n              <p style={{ color: 'gold', fontWeight: 'bold' }}>Example: Configure A Grade Points</p>\r\n              <ol style={{ paddingLeft: '20px', color: 'rgba(255,255,255,0.9)' }}>\r\n                <li>Go to the \"Points\" tab</li>\r\n                <li>Select a category (e.g., \"Senior\")</li>\r\n                <li>From the \"Select Grade\" dropdown, choose \"A Grade\"</li>\r\n                <li>Set points for each position:\r\n                  <ul style={{ paddingLeft: '20px', marginTop: '5px' }}>\r\n                    <li>1st Position (Gold): 10 points</li>\r\n                    <li>2nd Position (Silver): 7 points</li>\r\n                    <li>3rd Position (Bronze): 5 points</li>\r\n                  </ul>\r\n                </li>\r\n                <li>Click \"Save Grade Points\"</li>\r\n              </ol>\r\n              <p style={{ fontStyle: 'italic', color: 'rgba(255,255,255,0.7)' }}>\r\n                Participants with names like \"John Doe (A)\" will now receive these points instead of the default values.\r\n              </p>\r\n            </div>\r\n            \r\n            <p style={{ color: 'rgba(255,255,255,0.7)' }}>\r\n              Note: Grades are used to differentiate point values for participants in the same category. \r\n              For example, you can have different point values for A grade and B grade participants in the same category.\r\n              To use grade-specific points, include the grade in parentheses at the end of participant names (e.g., \"Participant Name (A)\").\r\n            </p>\r\n          </div>\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'batch-points' && (\r\n        <FormContainer>\r\n          <FormTitle>Batch Grade Points Configuration</FormTitle>\r\n          <p style={{ color: 'rgba(255,255,255,0.7)' }}>\r\n            Configure points for a grade across all categories at once\r\n          </p>\r\n          \r\n          <FormGroup>\r\n            <Label>Select Grade</Label>\r\n            <Select \r\n              value={selectedGradeForPoints}\r\n              onChange={(e) => {\r\n                setSelectedGradeForPoints(e.target.value);\r\n                // Load existing points if they exist for any category\r\n                const existingConfig = Object.keys(gradePoints).find(key => \r\n                  key.endsWith(`-${e.target.value}`)\r\n                );\r\n                if (existingConfig && gradePoints[existingConfig]) {\r\n                  setPoints(gradePoints[existingConfig]);\r\n                }\r\n              }}\r\n            >\r\n              <option value=\"\">Select a grade</option>\r\n              {availableGrades.map((grade, index) => (\r\n                <option key={index} value={grade}>{grade} Grade</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          {selectedGradeForPoints && (\r\n            <div style={{ backgroundColor: 'rgba(255,255,255,0.1)', padding: '20px', borderRadius: '10px', marginBottom: '20px' }}>\r\n              <h3>Set Points for {selectedGradeForPoints} Grade (All Categories)</h3>\r\n              \r\n              <FormGroup>\r\n                <Label>1st Position (Gold) Points</Label>\r\n                <Input \r\n                  type=\"number\" \r\n                  value={points.gold}\r\n                  onChange={(e) => setPoints({...points, gold: parseInt(e.target.value) || 0})}\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>2nd Position (Silver) Points</Label>\r\n                <Input \r\n                  type=\"number\" \r\n                  value={points.silver}\r\n                  onChange={(e) => setPoints({...points, silver: parseInt(e.target.value) || 0})}\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>3rd Position (Bronze) Points</Label>\r\n                <Input \r\n                  type=\"number\" \r\n                  value={points.bronze}\r\n                  onChange={(e) => setPoints({...points, bronze: parseInt(e.target.value) || 0})}\r\n                />\r\n              </FormGroup>\r\n              \r\n              <Button \r\n                onClick={() => {\r\n                  if (!selectedGradeForPoints) return;\r\n                  \r\n                  const updatedGradePoints = { ...gradePoints };\r\n                  let updatedCount = 0;\r\n                  \r\n                  // Update points for this grade across all categories\r\n                  categories.forEach(category => {\r\n                    const key = `${category.name}-${selectedGradeForPoints}`;\r\n                    updatedGradePoints[key] = { ...points };\r\n                    updatedCount++;\r\n                  });\r\n                  \r\n                  setGradePoints(updatedGradePoints);\r\n                  alert(`Points updated for ${updatedCount} categories with ${selectedGradeForPoints} grade`);\r\n                }}\r\n              >\r\n                Apply to All Categories\r\n              </Button>\r\n              \r\n              <div style={{ marginTop: '20px' }}>\r\n                <h4>Current Configurations</h4>\r\n                <Table>\r\n                  <thead>\r\n                    <tr>\r\n                      <Th>Category</Th>\r\n                      <Th>Grade</Th>\r\n                      <Th>1st (Gold)</Th>\r\n                      <Th>2nd (Silver)</Th>\r\n                      <Th>3rd (Bronze)</Th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {categories.map((category, index) => {\r\n                      const key = `${category.name}-${selectedGradeForPoints}`;\r\n                      const config = gradePoints[key] || points;\r\n                      return (\r\n                        <Tr key={index}>\r\n                          <Td>{category.name}</Td>\r\n                          <Td>{selectedGradeForPoints}</Td>\r\n                          <Td>{config.gold}</Td>\r\n                          <Td>{config.silver}</Td>\r\n                          <Td>{config.bronze}</Td>\r\n                        </Tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'points' && (\r\n        <FormContainer>\r\n          <FormTitle>Configure Points</FormTitle>\r\n          \r\n          <div style={{ \r\n            background: 'rgba(255,255,255,0.1)', \r\n            padding: '15px', \r\n            borderRadius: '10px', \r\n            marginBottom: '20px' \r\n          }}>\r\n            <p style={{ margin: '0 0 10px 0', color: 'gold' }}>\r\n              <strong>Quick Setup Example:</strong> To configure A grade with 10/7/5 points:\r\n            </p>\r\n            <ol style={{ margin: '0 0 10px 20px', fontSize: '0.9rem' }}>\r\n              <li>Select a category below</li>\r\n              <li>Choose \"A Grade\" from the dropdown</li>\r\n              <li>Set Gold=10, Silver=7, Bronze=5</li>\r\n              <li>Click \"Save Grade Points\"</li>\r\n            </ol>\r\n            <p style={{ margin: 0, fontSize: '0.9rem', fontStyle: 'italic' }}>\r\n              Participants named \"John Doe (A)\" will get these points\r\n            </p>\r\n          </div>\r\n          \r\n          <FormGroup>\r\n            <Label>Configure Points By Category</Label>\r\n            <Select \r\n              value={selectedCategoryForPoints}\r\n              onChange={(e) => handleCategoryChangeForPoints(e.target.value)}\r\n            >\r\n              <option value=\"\">Select a category</option>\r\n              {categories.map(category => (\r\n                <option key={category.id} value={category.name}>{category.name}</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          {selectedCategoryForPoints && (\r\n            <div style={{ backgroundColor: 'rgba(255,255,255,0.1)', padding: '20px', borderRadius: '10px', marginBottom: '20px' }}>\r\n              <h3>Points for {selectedCategoryForPoints}</h3>\r\n              \r\n              <FormGroup>\r\n                <Label>Select Grade (Optional)</Label>\r\n                <Select \r\n                  value={selectedGradeForPoints}\r\n                  onChange={(e) => handleGradeChangeForPoints(e.target.value)}\r\n                >\r\n                  <option value=\"\">No grade (category only)</option>\r\n                  {availableGrades.map((grade, index) => (\r\n                    <option key={index} value={grade}>{grade} Grade</option>\r\n                  ))}\r\n                </Select>\r\n                <Button \r\n                  onClick={handlePrepopulateAGrade}\r\n                  style={{ \r\n                    marginLeft: '10px', \r\n                    background: 'rgba(255,215,0,0.2)',\r\n                    color: 'gold'\r\n                  }}\r\n                >\r\n                  Example: A Grade (10/7/5)\r\n                </Button>\r\n              </FormGroup>\r\n              \r\n              {selectedGradeForPoints && (\r\n                <h4>Points for {selectedCategoryForPoints} - {selectedGradeForPoints} Grade</h4>\r\n              )}\r\n              \r\n              <FormGroup>\r\n                <Label>1st Position (Gold) Points</Label>\r\n                <Input \r\n                  type=\"number\" \r\n                  value={points.gold}\r\n                  onChange={(e) => setPoints({...points, gold: parseInt(e.target.value) || 0})}\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>2nd Position (Silver) Points</Label>\r\n                <Input \r\n                  type=\"number\" \r\n                  value={points.silver}\r\n                  onChange={(e) => setPoints({...points, silver: parseInt(e.target.value) || 0})}\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>3rd Position (Bronze) Points</Label>\r\n                <Input \r\n                  type=\"number\" \r\n                  value={points.bronze}\r\n                  onChange={(e) => setPoints({...points, bronze: parseInt(e.target.value) || 0})}\r\n                />\r\n              </FormGroup>\r\n              \r\n              {selectedGradeForPoints ? (\r\n                <Button onClick={handleSaveGradePoints}>Save Grade Points</Button>\r\n              ) : (\r\n                <Button onClick={handleSaveCategoryPoints}>Save Category Points</Button>\r\n              )}\r\n              \r\n              {!selectedGradeForPoints && categoryPoints[selectedCategoryForPoints] && (\r\n                <div style={{ marginTop: '10px', color: 'gold' }}>\r\n                  <strong>Current category configuration saved</strong>\r\n                </div>\r\n              )}\r\n              \r\n              {selectedGradeForPoints && gradePoints[`${selectedCategoryForPoints}-${selectedGradeForPoints}`] && (\r\n                <div style={{ marginTop: '10px', color: 'gold' }}>\r\n                  <strong>Current grade configuration saved</strong>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          \r\n          <FormTitle>Default Points Configuration</FormTitle>\r\n          <p>These points will be used when no category-specific or grade-specific points are configured.</p>\r\n          \r\n          <FormGroup>\r\n            <Label>1st Position (Gold) Points</Label>\r\n            <Input \r\n              type=\"number\" \r\n              value={points.gold}\r\n              onChange={(e) => setPoints({...points, gold: parseInt(e.target.value) || 0})}\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label>2nd Position (Silver) Points</Label>\r\n            <Input \r\n              type=\"number\" \r\n              value={points.silver}\r\n              onChange={(e) => setPoints({...points, silver: parseInt(e.target.value) || 0})}\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label>3rd Position (Bronze) Points</Label>\r\n            <Input \r\n              type=\"number\" \r\n              value={points.bronze}\r\n              onChange={(e) => setPoints({...points, bronze: parseInt(e.target.value) || 0})}\r\n            />\r\n          </FormGroup>\r\n          \r\n          <Button onClick={() => saveToLocalStorage('points', points)}>Save Default Points Configuration</Button>\r\n          <Button onClick={handleChangePassword}>Change Admin Password</Button>\r\n          \r\n          {Object.keys(categoryPoints).length > 0 && (\r\n            <div style={{ marginTop: '30px' }}>\r\n              <h3>Category-Specific Points Configuration</h3>\r\n              <Table>\r\n                <thead>\r\n                  <tr>\r\n                    <Th>Category</Th>\r\n                    <Th>1st (Gold)</Th>\r\n                    <Th>2nd (Silver)</Th>\r\n                    <Th>3rd (Bronze)</Th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {Object.entries(categoryPoints).map(([category, pointsConfig]) => (\r\n                    <Tr key={category}>\r\n                      <Td>{category}</Td>\r\n                      <Td>{pointsConfig.gold}</Td>\r\n                      <Td>{pointsConfig.silver}</Td>\r\n                      <Td>{pointsConfig.bronze}</Td>\r\n                    </Tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          )}\r\n          \r\n          {Object.keys(gradePoints).length > 0 && (\r\n            <div style={{ marginTop: '30px' }}>\r\n              <h3>Grade-Specific Points Configuration</h3>\r\n              <Table>\r\n                <thead>\r\n                  <tr>\r\n                    <Th>Category</Th>\r\n                    <Th>Grade</Th>\r\n                    <Th>1st (Gold)</Th>\r\n                    <Th>2nd (Silver)</Th>\r\n                    <Th>3rd (Bronze)</Th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {Object.entries(gradePoints).map(([key, pointsConfig]) => {\r\n                    const [category, grade] = key.split('-');\r\n                    return (\r\n                      <Tr key={key}>\r\n                        <Td>{category}</Td>\r\n                        <Td>{grade}</Td>\r\n                        <Td>{pointsConfig.gold}</Td>\r\n                        <Td>{pointsConfig.silver}</Td>\r\n                        <Td>{pointsConfig.bronze}</Td>\r\n                      </Tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          )}\r\n        </FormContainer>\r\n      )}\r\n    </DashboardContainer>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}