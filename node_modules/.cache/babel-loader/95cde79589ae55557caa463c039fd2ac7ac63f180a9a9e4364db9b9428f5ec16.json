{"ast":null,"code":"import _objectSpread from\"C:/Users/SMIC_STUDIO/Desktop/MEHFIL 25 APP/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _taggedTemplateLiteral from\"C:/Users/SMIC_STUDIO/Desktop/MEHFIL 25 APP/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0,_templateObject1,_templateObject10,_templateObject11,_templateObject12,_templateObject13,_templateObject14,_templateObject15,_templateObject16;import React,{useState,useEffect}from'react';import styled from'styled-components';import{useNavigate}from'react-router-dom';import{loadFromLocalStorage,saveToLocalStorage,calculateTeamStandings}from'../utils/dataStorage';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const DashboardContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding: 20px;\\n  color: white;\\n  min-height: 100vh;\\n\"])));const Header=styled.h1(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  text-align: center;\\n  font-size: 2rem;\\n  margin-bottom: 30px;\\n  color: gold;\\n\"])));const TabContainer=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: flex;\\n  border-bottom: 2px solid rgba(255,255,255,0.2);\\n  margin-bottom: 30px;\\n  flex-wrap: wrap;\\n\"])));const Tab=styled.button(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  padding: 15px 30px;\\n  background: \",\";\\n  color: \",\";\\n  border: none;\\n  cursor: pointer;\\n  font-size: 1.1rem;\\n  font-weight: bold;\\n\\n  &:hover {\\n    background: rgba(255,255,255,0.1);\\n  }\\n  \\n  @media (max-width: 768px) {\\n    padding: 10px 15px;\\n    font-size: 0.9rem;\\n  }\\n\"])),props=>props.active?'rgba(255,255,255,0.2)':'transparent',props=>props.active?'gold':'white');const FormContainer=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  background: rgba(255,255,255,0.1);\\n  border-radius: 15px;\\n  padding: 30px;\\n  backdrop-filter: blur(10px);\\n  margin-bottom: 30px;\\n\"])));const FormTitle=styled.h2(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  margin-top: 0;\\n  color: gold;\\n  border-bottom: 1px solid rgba(255,255,255,0.2);\\n  padding-bottom: 10px;\\n\"])));const FormGroup=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  margin-bottom: 20px;\\n\"])));const Label=styled.label(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  display: block;\\n  margin-bottom: 8px;\\n  font-weight: bold;\\n\"])));const Input=styled.input(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  padding: 12px;\\n  border-radius: 8px;\\n  border: none;\\n  background: rgba(255,255,255,0.1);\\n  color: white;\\n  font-size: 1rem;\\n\\n  &:focus {\\n    outline: 2px solid gold;\\n  }\\n\"])));const Select=styled.select(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  padding: 12px;\\n  border-radius: 8px;\\n  border: none;\\n  background: rgba(255,255,255,0.1);\\n  color: white;\\n  font-size: 1rem;\\n\\n  &:focus {\\n    outline: 2px solid gold;\\n  }\\n\"])));const Button=styled.button(_templateObject1||(_templateObject1=_taggedTemplateLiteral([\"\\n  padding: 12px 25px;\\n  background: gold;\\n  color: #333;\\n  border: none;\\n  border-radius: 8px;\\n  cursor: pointer;\\n  font-weight: bold;\\n  font-size: 1rem;\\n  transition: all 0.3s ease;\\n  margin-right: 10px;\\n  margin-bottom: 10px;\\n\\n  &:hover {\\n    background: #ffd700;\\n    transform: translateY(-2px);\\n  }\\n\"])));const Table=styled.table(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  border-collapse: collapse;\\n  background: rgba(255,255,255,0.1);\\n  border-radius: 10px;\\n  overflow: hidden;\\n\"])));const Th=styled.th(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  background: rgba(0,0,0,0.2);\\n  padding: 15px;\\n  text-align: left;\\n\"])));const Td=styled.td(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n  padding: 15px;\\n  border-bottom: 1px solid rgba(255,255,255,0.1);\\n\"])));const Tr=styled.tr(_templateObject13||(_templateObject13=_taggedTemplateLiteral([\"\\n  &:hover {\\n    background: rgba(255,255,255,0.05);\\n  }\\n\"])));const ColorPreview=styled.div(_templateObject14||(_templateObject14=_taggedTemplateLiteral([\"\\n  width: 30px;\\n  height: 30px;\\n  border-radius: 50%;\\n  background: \",\";\\n  display: inline-block;\\n  margin-right: 10px;\\n\"])),props=>\"rgb(\".concat(props.r,\", \").concat(props.g,\", \").concat(props.b,\")\"));const RGBInputContainer=styled.div(_templateObject15||(_templateObject15=_taggedTemplateLiteral([\"\\n  display: flex;\\n  gap: 10px;\\n  flex-wrap: wrap;\\n\"])));const RGBInput=styled.input(_templateObject16||(_templateObject16=_taggedTemplateLiteral([\"\\n  width: 80px;\\n  padding: 8px;\\n  border-radius: 5px;\\n  border: none;\\n  background: rgba(255,255,255,0.1);\\n  color: white;\\n  text-align: center;\\n\"])));const AdminDashboard=()=>{const navigate=useNavigate();const[activeTab,setActiveTab]=useState('events');const[events,setEvents]=useState([]);const[teams,setTeams]=useState([]);const[categories,setCategories]=useState([]);const[students,setStudents]=useState([]);const[programs,setPrograms]=useState([]);const[results,setResults]=useState([]);const[points,setPoints]=useState({gold:10,silver:7,bronze:5});// Category-specific points configuration\nconst[categoryPoints,setCategoryPoints]=useState({});// Grade-specific points configuration\nconst[gradePoints,setGradePoints]=useState({});// Available grades configuration\nconst[availableGrades,setAvailableGrades]=useState(['A','B','C','D']);// New grade points configuration\nconst[newGradePoints,setNewGradePoints]=useState({gold:10,silver:7,bronze:5});// Team managers configuration\nconst[teamManagers,setTeamManagers]=useState([]);// Selected event for management\nconst[selectedEvent,setSelectedEvent]=useState('');// Form states\nconst[newEvent,setNewEvent]=useState({name:'',categories:[],color:{r:106,g:17,b:203}});const[newTeam,setNewTeam]=useState({name:'',color:'#FF5733'});const[newCategory,setNewCategory]=useState({name:'',order:1});const[newStudent,setNewStudent]=useState({name:'',chestNumber:'',team:'',category:''});const[newProgram,setNewProgram]=useState({name:'',type:'Individual'});const[newResult,setNewResult]=useState({event:'',program:'',category:'',participants:[{name:'',position:''}]});const[newTeamManager,setNewTeamManager]=useState({username:'',password:'',team:''});const[editingTeamManager,setEditingTeamManager]=useState(null);const[adminPassword,setAdminPassword]=useState('admin123');const[selectedCategoryForPoints,setSelectedCategoryForPoints]=useState('');const[selectedGradeForPoints,setSelectedGradeForPoints]=useState('');const[newGrade,setNewGrade]=useState('');// Event filtering states\nconst[selectedEventForTeams,setSelectedEventForTeams]=useState('');const[selectedEventForStudents,setSelectedEventForStudents]=useState('');const[selectedEventForPrograms,setSelectedEventForPrograms]=useState('');const[selectedEventForResults,setSelectedEventForResults]=useState('');// Load data from localStorage on component mount\nuseEffect(()=>{const savedEvents=loadFromLocalStorage('events',[]);const savedTeams=loadFromLocalStorage('teams',[]);const savedCategories=loadFromLocalStorage('categories',[]);const savedStudents=loadFromLocalStorage('students',[]);const savedPrograms=loadFromLocalStorage('programs',[]);const savedResults=loadFromLocalStorage('results',[]);const savedPoints=loadFromLocalStorage('points',{gold:10,silver:7,bronze:5});const savedCategoryPoints=loadFromLocalStorage('categoryPoints',{});const savedGradePoints=loadFromLocalStorage('gradePoints',{});const savedPassword=loadFromLocalStorage('adminPassword','admin123');const savedAvailableGrades=loadFromLocalStorage('availableGrades',['A','B','C','D']);const savedTeamManagers=loadFromLocalStorage('teamManagers',[]);// Load event filtering states\nconst savedSelectedEventForTeams=loadFromLocalStorage('selectedEventForTeams','');const savedSelectedEventForStudents=loadFromLocalStorage('selectedEventForStudents','');const savedSelectedEventForPrograms=loadFromLocalStorage('selectedEventForPrograms','');const savedSelectedEventForResults=loadFromLocalStorage('selectedEventForResults','');setEvents(savedEvents);setTeams(savedTeams);setCategories(savedCategories);setStudents(savedStudents);setPrograms(savedPrograms);setResults(savedResults);setPoints(savedPoints);setCategoryPoints(savedCategoryPoints);setGradePoints(savedGradePoints);setAdminPassword(savedPassword);setAvailableGrades(savedAvailableGrades);setTeamManagers(savedTeamManagers);// Set event filtering states\nsetSelectedEventForTeams(savedSelectedEventForTeams);setSelectedEventForStudents(savedSelectedEventForStudents);setSelectedEventForPrograms(savedSelectedEventForPrograms);setSelectedEventForResults(savedSelectedEventForResults);// Initialize form select options\nif(savedEvents.length>0){setNewResult(prev=>_objectSpread(_objectSpread({},prev),{},{event:savedEvents[0].name}));setSelectedEvent(savedEvents[0].name);}if(savedPrograms.length>0){setNewResult(prev=>_objectSpread(_objectSpread({},prev),{},{program:savedPrograms[0].name}));}if(savedCategories.length>0){setNewResult(prev=>_objectSpread(_objectSpread({},prev),{},{category:savedCategories[0].name}));setSelectedCategoryForPoints(savedCategories[0].name);}if(savedTeams.length>0){setNewTeamManager(prev=>_objectSpread(_objectSpread({},prev),{},{team:savedTeams[0].name}));}},[]);// Handle logout\nconst handleLogout=()=>{localStorage.removeItem('isAdminLoggedIn');navigate('/');};// Handle event selection\nconst handleEventSelection=eventName=>{setSelectedEvent(eventName);// Update forms that depend on event selection\nsetNewTeam(_objectSpread(_objectSpread({},newTeam),{},{event:eventName}));setNewCategory(_objectSpread(_objectSpread({},newCategory),{},{event:eventName}));setNewStudent(_objectSpread(_objectSpread({},newStudent),{},{event:eventName}));setNewProgram(_objectSpread(_objectSpread({},newProgram),{},{event:eventName}));setNewResult(_objectSpread(_objectSpread({},newResult),{},{event:eventName}));setNewTeamManager(_objectSpread(_objectSpread({},newTeamManager),{},{event:eventName}));};// Team manager CRUD operations\nconst handleCreateTeamManager=()=>{if(newTeamManager.username.trim()===''||newTeamManager.password.trim()===''||newTeamManager.team.trim()===''){alert('Please fill in all fields');return;}// Check if username already exists\nif(teamManagers.some(manager=>manager.username===newTeamManager.username)){alert('A team manager with this username already exists');return;}const teamManager={id:teamManagers.length+1,username:newTeamManager.username,password:newTeamManager.password,// In a real app, this should be hashed\nteam:newTeamManager.team};const updatedTeamManagers=[...teamManagers,teamManager];setTeamManagers(updatedTeamManagers);saveToLocalStorage('teamManagers',updatedTeamManagers);// Reset form\nsetNewTeamManager({username:'',password:'',team:newTeamManager.team});};const handleEditTeamManager=manager=>{setEditingTeamManager(manager);setNewTeamManager({username:manager.username,password:manager.password,team:manager.team});};const handleUpdateTeamManager=()=>{if(newTeamManager.username.trim()===''||newTeamManager.password.trim()===''||newTeamManager.team.trim()===''){alert('Please fill in all fields');return;}// Check if username already exists (excluding the current manager being edited)\nif(teamManagers.some(manager=>manager.username===newTeamManager.username&&manager.id!==editingTeamManager.id)){alert('A team manager with this username already exists');return;}const updatedTeamManagers=teamManagers.map(manager=>manager.id===editingTeamManager.id?_objectSpread(_objectSpread({},manager),newTeamManager):manager);setTeamManagers(updatedTeamManagers);saveToLocalStorage('teamManagers',updatedTeamManagers);// Reset form and editing state\nsetEditingTeamManager(null);setNewTeamManager({username:'',password:'',team:newTeamManager.team});};const handleDeleteTeamManager=managerId=>{if(window.confirm('Are you sure you want to delete this team manager?')){const updatedTeamManagers=teamManagers.filter(manager=>manager.id!==managerId);setTeamManagers(updatedTeamManagers);saveToLocalStorage('teamManagers',updatedTeamManagers);// Clear form if we were editing this manager\nif(editingTeamManager&&editingTeamManager.id===managerId){setEditingTeamManager(null);setNewTeamManager({username:'',password:'',team:newTeamManager.team});}}};const handleCancelEdit=()=>{setEditingTeamManager(null);setNewTeamManager({username:'',password:'',team:newTeamManager.team});};// Function to pre-configure points for a new grade across all categories\nconst preConfigureGradePoints=(grade,pointsConfig)=>{const updatedGradePoints=_objectSpread({},gradePoints);// For each category, create a default grade point configuration\ncategories.forEach(category=>{const key=\"\".concat(category.name,\"-\").concat(grade);updatedGradePoints[key]=_objectSpread({},pointsConfig);});setGradePoints(updatedGradePoints);};// Update team standings when results or points change\nuseEffect(()=>{const savedTeams=loadFromLocalStorage('teams',[]);const updatedTeams=calculateTeamStandings(savedTeams,results,points,categoryPoints,gradePoints);setTeams(updatedTeams);},[results,points,categoryPoints,gradePoints]);// Save data to localStorage whenever state changes\nuseEffect(()=>{saveToLocalStorage('events',events);},[events]);useEffect(()=>{saveToLocalStorage('teams',teams);},[teams]);useEffect(()=>{saveToLocalStorage('categories',categories);},[categories]);useEffect(()=>{saveToLocalStorage('students',students);},[students]);useEffect(()=>{saveToLocalStorage('programs',programs);},[programs]);useEffect(()=>{saveToLocalStorage('results',results);},[results]);useEffect(()=>{saveToLocalStorage('points',points);},[points]);useEffect(()=>{saveToLocalStorage('categoryPoints',categoryPoints);},[categoryPoints]);useEffect(()=>{saveToLocalStorage('gradePoints',gradePoints);},[gradePoints]);useEffect(()=>{saveToLocalStorage('adminPassword',adminPassword);},[adminPassword]);useEffect(()=>{saveToLocalStorage('availableGrades',availableGrades);},[availableGrades]);useEffect(()=>{saveToLocalStorage('teamManagers',teamManagers);},[teamManagers]);// Save event filtering states to localStorage\nuseEffect(()=>{saveToLocalStorage('selectedEventForTeams',selectedEventForTeams);},[selectedEventForTeams]);useEffect(()=>{saveToLocalStorage('selectedEventForStudents',selectedEventForStudents);},[selectedEventForStudents]);useEffect(()=>{saveToLocalStorage('selectedEventForPrograms',selectedEventForPrograms);},[selectedEventForPrograms]);useEffect(()=>{saveToLocalStorage('selectedEventForResults',selectedEventForResults);},[selectedEventForResults]);const handleCreateEvent=()=>{if(newEvent.name.trim()==='')return;const event={id:events.length+1,name:newEvent.name,categories:categories.map(cat=>cat.name),color:newEvent.color};setEvents([...events,event]);setNewEvent({name:'',categories:[],color:{r:106,g:17,b:203}});};const handleCreateTeam=()=>{if(newTeam.name.trim()==='')return;const team={id:teams.length+1,name:newTeam.name,color:newTeam.color};setTeams([...teams,team]);setNewTeam({name:'',color:'#FF5733'});};const handleCreateCategory=()=>{if(newCategory.name.trim()==='')return;const category={id:categories.length+1,name:newCategory.name,order:newCategory.order};setCategories([...categories,category]);setNewCategory({name:'',order:categories.length+2});};const handleCreateStudent=()=>{if(newStudent.name.trim()===''||newStudent.chestNumber.trim()==='')return;const student={id:students.length+1,name:newStudent.name,chestNumber:newStudent.chestNumber,team:newStudent.team,category:newStudent.category,photo:null};setStudents([...students,student]);setNewStudent({name:'',chestNumber:'',team:'',category:''});};const handleCreateProgram=()=>{if(newProgram.name.trim()==='')return;const program={id:programs.length+1,name:newProgram.name,type:newProgram.type};setPrograms([...programs,program]);setNewProgram({name:'',type:'Individual'});};const handleAddParticipant=()=>{setNewResult(_objectSpread(_objectSpread({},newResult),{},{participants:[...newResult.participants,{name:'',position:''}]}));};const handleParticipantChange=(index,field,value)=>{const updatedParticipants=[...newResult.participants];updatedParticipants[index][field]=value;setNewResult(_objectSpread(_objectSpread({},newResult),{},{participants:updatedParticipants}));};const handleRemoveParticipant=index=>{if(newResult.participants.length<=1)return;const updatedParticipants=[...newResult.participants];updatedParticipants.splice(index,1);setNewResult(_objectSpread(_objectSpread({},newResult),{},{participants:updatedParticipants}));};const handleSaveResult=()=>{// Calculate points based on position, category, and grade\nconst participantsWithPoints=newResult.participants.map(participant=>{let pointValue=0;// Extract grade from participant name if it exists (e.g., \"John Doe (A)\" or \"SJ001 (B)\")\nlet grade='';let participantName=participant.name;// Updated regex to handle more grades (A, B, C, D)\nconst gradeMatch=participant.name.match(/\\(([A-D])\\)$/);if(gradeMatch){grade=gradeMatch[1];participantName=participant.name.replace(/\\s*\\([A-D]\\)$/,'');}// Use grade-specific points if available\nlet pointConfig=points;// default\n// Use the category from the current result being saved, not the selected category for points configuration\nif(grade&&newResult.category){const gradeKey=\"\".concat(newResult.category,\"-\").concat(grade);if(gradePoints[gradeKey]){pointConfig=gradePoints[gradeKey];}else if(categoryPoints[newResult.category]){// Fall back to category-specific points\npointConfig=categoryPoints[newResult.category];}}else if(categoryPoints[newResult.category]){// Use category-specific points if no grade specified\npointConfig=categoryPoints[newResult.category];}switch(participant.position.toLowerCase()){case'1':case'first':case'gold':pointValue=pointConfig.gold;break;case'2':case'second':case'silver':pointValue=pointConfig.silver;break;case'3':case'third':case'bronze':pointValue=pointConfig.bronze;break;default:pointValue=0;}return _objectSpread(_objectSpread({},participant),{},{points:pointValue});});const result={id:results.length+1,event:newResult.event,program:newResult.program,category:newResult.category,participants:participantsWithPoints,timestamp:new Date().toISOString()};setResults([...results,result]);// Reset form\nsetNewResult({event:newResult.event,program:newResult.program,category:newResult.category,participants:[{name:'',position:''}]});};const handleChangePassword=()=>{// In a real app, you would validate the current password first\nconst newPassword=prompt('Enter new password:');if(newPassword&&newPassword.trim()!==''){setAdminPassword(newPassword.trim());alert('Password updated successfully!');}};const handleSaveCategoryPoints=()=>{if(!selectedCategoryForPoints)return;setCategoryPoints(_objectSpread(_objectSpread({},categoryPoints),{},{[selectedCategoryForPoints]:_objectSpread({},points)}));alert(\"Points configuration saved for category: \".concat(selectedCategoryForPoints));};const handleCategoryChangeForPoints=categoryName=>{setSelectedCategoryForPoints(categoryName);// Load existing points for this category if they exist\nif(categoryPoints[categoryName]){setPoints(categoryPoints[categoryName]);}else{// Reset to default points if no custom points for this category\nsetPoints({gold:10,silver:7,bronze:5});}};// Handle grade selection for points configuration\nconst handleGradeChangeForPoints=grade=>{setSelectedGradeForPoints(grade);// Create a key for category-grade combination\nconst key=\"\".concat(selectedCategoryForPoints,\"-\").concat(grade);// Load existing points for this category-grade combination if they exist\nif(gradePoints[key]){setPoints(gradePoints[key]);}else{// Check if there are category-specific points\nif(categoryPoints[selectedCategoryForPoints]){setPoints(categoryPoints[selectedCategoryForPoints]);}else{// Reset to default points\nsetPoints({gold:10,silver:7,bronze:5});}}};// Pre-populate A grade points example\nconst handlePrepopulateAGrade=()=>{if(!selectedCategoryForPoints){alert('Please select a category first');return;}setSelectedGradeForPoints('A');setPoints({gold:10,silver:7,bronze:5});};// Save grade-specific points\nconst handleSaveGradePoints=()=>{if(!selectedCategoryForPoints||!selectedGradeForPoints)return;const key=\"\".concat(selectedCategoryForPoints,\"-\").concat(selectedGradeForPoints);setGradePoints(_objectSpread(_objectSpread({},gradePoints),{},{[key]:_objectSpread({},points)}));alert(\"Points configuration saved for category: \".concat(selectedCategoryForPoints,\", grade: \").concat(selectedGradeForPoints));};return/*#__PURE__*/_jsxs(DashboardContainer,{children:[/*#__PURE__*/_jsx(Header,{children:\"Admin Dashboard\"}),/*#__PURE__*/_jsxs(TabContainer,{children:[/*#__PURE__*/_jsx(Tab,{active:activeTab==='switcher',onClick:()=>setActiveTab('switcher'),children:\"Role Switcher\"}),/*#__PURE__*/_jsx(Tab,{active:activeTab==='events',onClick:()=>setActiveTab('events'),children:\"Events\"}),/*#__PURE__*/_jsx(Tab,{active:activeTab==='categories',onClick:()=>setActiveTab('categories'),children:\"Categories\"}),/*#__PURE__*/_jsx(Tab,{active:activeTab==='teams',onClick:()=>setActiveTab('teams'),children:\"Teams\"}),/*#__PURE__*/_jsx(Tab,{active:activeTab==='students',onClick:()=>setActiveTab('students'),children:\"Students\"}),/*#__PURE__*/_jsx(Tab,{active:activeTab==='programs',onClick:()=>setActiveTab('programs'),children:\"Programs\"}),/*#__PURE__*/_jsx(Tab,{active:activeTab==='results',onClick:()=>setActiveTab('results'),children:\"Results\"}),/*#__PURE__*/_jsx(Tab,{active:activeTab==='managers',onClick:()=>setActiveTab('managers'),children:\"Team Managers\"}),/*#__PURE__*/_jsx(Tab,{active:activeTab==='grades',onClick:()=>setActiveTab('grades'),children:\"Grades\"}),/*#__PURE__*/_jsx(Tab,{active:activeTab==='batch-points',onClick:()=>setActiveTab('batch-points'),children:\"Batch Points\"}),/*#__PURE__*/_jsx(Tab,{active:activeTab==='points',onClick:()=>setActiveTab('points'),children:\"Points\"})]}),activeTab==='switcher'&&/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(FormTitle,{children:\"Switch Between Roles\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'20px',flexWrap:'wrap',justifyContent:'center'},children:[/*#__PURE__*/_jsx(Button,{onClick:()=>navigate('/'),style:{background:'rgba(255,255,255,0.2)',color:'white'},children:\"Public View\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>{},style:{background:'gold',color:'#333'},children:\"Admin Dashboard\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>navigate('/team-manager-login'),style:{background:'rgba(255,255,255,0.2)',color:'white'},children:\"Team Manager\"}),/*#__PURE__*/_jsx(Button,{onClick:handleLogout,style:{background:'#ff4757',color:'white'},children:\"Logout\"})]})]}),activeTab==='events'&&/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(FormTitle,{children:\"Create New Event\"}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Event Name\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",value:newEvent.name,onChange:e=>setNewEvent(_objectSpread(_objectSpread({},newEvent),{},{name:e.target.value})),placeholder:\"Enter event name\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Event Color (RGB)\"}),/*#__PURE__*/_jsxs(RGBInputContainer,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{children:\"R\"}),/*#__PURE__*/_jsx(RGBInput,{type:\"number\",min:\"0\",max:\"255\",value:newEvent.color.r,onChange:e=>setNewEvent(_objectSpread(_objectSpread({},newEvent),{},{color:_objectSpread(_objectSpread({},newEvent.color),{},{r:parseInt(e.target.value)||0})}))})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{children:\"G\"}),/*#__PURE__*/_jsx(RGBInput,{type:\"number\",min:\"0\",max:\"255\",value:newEvent.color.g,onChange:e=>setNewEvent(_objectSpread(_objectSpread({},newEvent),{},{color:_objectSpread(_objectSpread({},newEvent.color),{},{g:parseInt(e.target.value)||0})}))})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{children:\"B\"}),/*#__PURE__*/_jsx(RGBInput,{type:\"number\",min:\"0\",max:\"255\",value:newEvent.color.b,onChange:e=>setNewEvent(_objectSpread(_objectSpread({},newEvent),{},{color:_objectSpread(_objectSpread({},newEvent.color),{},{b:parseInt(e.target.value)||0})}))})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{children:\"Preview\"}),/*#__PURE__*/_jsx(ColorPreview,{r:newEvent.color.r,g:newEvent.color.g,b:newEvent.color.b})]})]})]}),/*#__PURE__*/_jsx(Button,{onClick:handleCreateEvent,children:\"Create Event\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Existing Events\"}),/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(Th,{children:\"Name\"}),/*#__PURE__*/_jsx(Th,{children:\"Categories\"}),/*#__PURE__*/_jsx(Th,{children:\"Color\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:events.map(event=>/*#__PURE__*/_jsxs(Tr,{children:[/*#__PURE__*/_jsx(Td,{children:event.name}),/*#__PURE__*/_jsx(Td,{children:event.categories.join(', ')}),/*#__PURE__*/_jsxs(Td,{children:[/*#__PURE__*/_jsx(ColorPreview,{r:event.color.r,g:event.color.g,b:event.color.b}),\"RGB(\",event.color.r,\", \",event.color.g,\", \",event.color.b,\")\"]})]},event.id))})]})]}),activeTab==='categories'&&/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(FormTitle,{children:\"Manage Categories\"}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Select Event First\"}),/*#__PURE__*/_jsxs(Select,{value:selectedEvent,onChange:e=>handleEventSelection(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select an event\"}),events.map(event=>/*#__PURE__*/_jsx(\"option\",{value:event.name,children:event.name},event.id))]})]}),selectedEvent?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Category Name\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",value:newCategory.name,onChange:e=>setNewCategory(_objectSpread(_objectSpread({},newCategory),{},{name:e.target.value})),placeholder:\"Enter category name\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Display Order\"}),/*#__PURE__*/_jsx(Input,{type:\"number\",value:newCategory.order,onChange:e=>setNewCategory(_objectSpread(_objectSpread({},newCategory),{},{order:parseInt(e.target.value)||1})),placeholder:\"Enter display order\"})]}),/*#__PURE__*/_jsx(Button,{onClick:handleCreateCategory,children:\"Add Category\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Existing Categories\"}),/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(Th,{children:\"Name\"}),/*#__PURE__*/_jsx(Th,{children:\"Order\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:categories.map(category=>/*#__PURE__*/_jsxs(Tr,{children:[/*#__PURE__*/_jsx(Td,{children:category.name}),/*#__PURE__*/_jsx(Td,{children:category.order})]},category.id))})]})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Please select an event first to manage categories.\"})]}),activeTab==='teams'&&/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(FormTitle,{children:\"Create New Team\"}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Select Event First\"}),/*#__PURE__*/_jsxs(Select,{value:selectedEvent,onChange:e=>handleEventSelection(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select an event\"}),events.map(event=>/*#__PURE__*/_jsx(\"option\",{value:event.name,children:event.name},event.id))]})]}),selectedEvent?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Team Name\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",value:newTeam.name,onChange:e=>setNewTeam(_objectSpread(_objectSpread({},newTeam),{},{name:e.target.value})),placeholder:\"Enter team name\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Team Color\"}),/*#__PURE__*/_jsx(Input,{type:\"color\",value:newTeam.color,onChange:e=>setNewTeam(_objectSpread(_objectSpread({},newTeam),{},{color:e.target.value}))})]}),/*#__PURE__*/_jsx(Button,{onClick:handleCreateTeam,children:\"Create Team\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'30px'},children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Filter Teams by Event\"}),/*#__PURE__*/_jsxs(Select,{value:selectedEventForTeams,onChange:e=>setSelectedEventForTeams(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Events\"}),events.map(event=>/*#__PURE__*/_jsx(\"option\",{value:event.name,children:event.name},event.id))]})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Existing Teams\"}),/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(Th,{children:\"Name\"}),/*#__PURE__*/_jsx(Th,{children:\"Color\"}),selectedEventForTeams&&/*#__PURE__*/_jsxs(Th,{children:[\"Participated in \",selectedEventForTeams]})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:teams.map(team=>{// Filter teams that participated in the selected event if any\nif(selectedEventForTeams){const teamResults=results.filter(result=>result.event===selectedEventForTeams&&result.participants.some(participant=>{const student=students.find(s=>s.chestNumber===participant.name||s.name===participant.name);return student&&student.team===team.name;}));// If no results for this team in the selected event, skip\nif(teamResults.length===0)return null;}return/*#__PURE__*/_jsxs(Tr,{children:[/*#__PURE__*/_jsx(Td,{children:team.name}),/*#__PURE__*/_jsxs(Td,{children:[/*#__PURE__*/_jsx(ColorPreview,{r:parseInt(team.color.slice(1,3),16),g:parseInt(team.color.slice(3,5),16),b:parseInt(team.color.slice(5,7),16)}),team.color]}),selectedEventForTeams&&/*#__PURE__*/_jsx(Td,{children:\"Participated\"})]},team.id);})})]})]})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Please select an event first to manage teams.\"})]}),activeTab==='students'&&/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(FormTitle,{children:\"Register Student\"}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Select Event First\"}),/*#__PURE__*/_jsxs(Select,{value:selectedEvent,onChange:e=>handleEventSelection(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select an event\"}),events.map(event=>/*#__PURE__*/_jsx(\"option\",{value:event.name,children:event.name},event.id))]})]}),selectedEvent?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Student Name\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",value:newStudent.name,onChange:e=>setNewStudent(_objectSpread(_objectSpread({},newStudent),{},{name:e.target.value})),placeholder:\"Enter student name\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Chest Number\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",value:newStudent.chestNumber,onChange:e=>setNewStudent(_objectSpread(_objectSpread({},newStudent),{},{chestNumber:e.target.value})),placeholder:\"Enter chest number\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Team\"}),/*#__PURE__*/_jsxs(Select,{value:newStudent.team,onChange:e=>setNewStudent(_objectSpread(_objectSpread({},newStudent),{},{team:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a team\"}),teams.map(team=>/*#__PURE__*/_jsx(\"option\",{value:team.name,children:team.name},team.id))]})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Category\"}),/*#__PURE__*/_jsxs(Select,{value:newStudent.category,onChange:e=>setNewStudent(_objectSpread(_objectSpread({},newStudent),{},{category:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a category\"}),categories.map(category=>/*#__PURE__*/_jsx(\"option\",{value:category.name,children:category.name},category.id))]})]}),/*#__PURE__*/_jsx(Button,{onClick:handleCreateStudent,children:\"Register Student\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'30px'},children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Filter Students by Event\"}),/*#__PURE__*/_jsxs(Select,{value:selectedEventForStudents,onChange:e=>setSelectedEventForStudents(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Events\"}),events.map(event=>/*#__PURE__*/_jsx(\"option\",{value:event.name,children:event.name},event.id))]})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Registered Students\"}),/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(Th,{children:\"Name\"}),/*#__PURE__*/_jsx(Th,{children:\"Chest Number\"}),/*#__PURE__*/_jsx(Th,{children:\"Team\"}),/*#__PURE__*/_jsx(Th,{children:\"Category\"}),selectedEventForStudents&&/*#__PURE__*/_jsxs(Th,{children:[\"Participated in \",selectedEventForStudents]})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:students.map(student=>{// Filter students who participated in the selected event if any\nif(selectedEventForStudents){const studentResults=results.filter(result=>result.event===selectedEventForStudents&&result.participants.some(participant=>participant.name===student.chestNumber||participant.name===student.name));// If no results for this student in the selected event, skip\nif(studentResults.length===0)return null;}return/*#__PURE__*/_jsxs(Tr,{children:[/*#__PURE__*/_jsx(Td,{children:student.name}),/*#__PURE__*/_jsx(Td,{children:student.chestNumber}),/*#__PURE__*/_jsx(Td,{children:student.team}),/*#__PURE__*/_jsx(Td,{children:student.category}),selectedEventForStudents&&/*#__PURE__*/_jsx(Td,{children:\"Participated\"})]},student.id);})})]})]})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Please select an event first to manage students.\"})]}),activeTab==='programs'&&/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(FormTitle,{children:\"Define Program\"}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Select Event First\"}),/*#__PURE__*/_jsxs(Select,{value:selectedEvent,onChange:e=>handleEventSelection(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select an event\"}),events.map(event=>/*#__PURE__*/_jsx(\"option\",{value:event.name,children:event.name},event.id))]})]}),selectedEvent?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Program Name\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",value:newProgram.name,onChange:e=>setNewProgram(_objectSpread(_objectSpread({},newProgram),{},{name:e.target.value})),placeholder:\"Enter program name\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Program Type\"}),/*#__PURE__*/_jsxs(Select,{value:newProgram.type,onChange:e=>setNewProgram(_objectSpread(_objectSpread({},newProgram),{},{type:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"Individual\",children:\"Individual\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Group\",children:\"Group\"}),/*#__PURE__*/_jsx(\"option\",{value:\"General\",children:\"General\"})]})]}),/*#__PURE__*/_jsx(Button,{onClick:handleCreateProgram,children:\"Add Program\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'30px'},children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Filter Programs by Event\"}),/*#__PURE__*/_jsxs(Select,{value:selectedEventForPrograms,onChange:e=>setSelectedEventForPrograms(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Events\"}),events.map(event=>/*#__PURE__*/_jsx(\"option\",{value:event.name,children:event.name},event.id))]})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Existing Programs\"}),/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(Th,{children:\"Name\"}),/*#__PURE__*/_jsx(Th,{children:\"Type\"}),selectedEventForPrograms&&/*#__PURE__*/_jsxs(Th,{children:[\"Used in \",selectedEventForPrograms]})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:programs.map(program=>{// Filter programs used in the selected event if any\nif(selectedEventForPrograms){const programResults=results.filter(result=>result.event===selectedEventForPrograms&&result.program===program.name);// If no results for this program in the selected event, skip\nif(programResults.length===0)return null;}return/*#__PURE__*/_jsxs(Tr,{children:[/*#__PURE__*/_jsx(Td,{children:program.name}),/*#__PURE__*/_jsx(Td,{children:program.type}),selectedEventForPrograms&&/*#__PURE__*/_jsx(Td,{children:\"Used\"})]},program.id);})})]})]})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Please select an event first to manage programs.\"})]}),activeTab==='results'&&/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(FormTitle,{children:\"Enter Results\"}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'rgba(255,255,255,0.1)',padding:'15px',borderRadius:'10px',marginBottom:'20px'},children:[/*#__PURE__*/_jsxs(\"p\",{style:{margin:'0 0 10px 0',color:'gold'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Tip:\"}),\" To use grade-specific points, include the grade in participant names\"]}),/*#__PURE__*/_jsx(\"p\",{style:{margin:'0 0 5px 0',fontSize:'0.9rem'},children:\"Examples: \\\"John Doe (A)\\\" or \\\"SJ001 (B)\\\"\"}),/*#__PURE__*/_jsx(\"p\",{style:{margin:0,fontSize:'0.9rem',fontStyle:'italic'},children:\"Configure grade points in the \\\"Points\\\" tab\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Event\"}),/*#__PURE__*/_jsxs(Select,{value:newResult.event,onChange:e=>setNewResult(_objectSpread(_objectSpread({},newResult),{},{event:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select an event\"}),events.map(event=>/*#__PURE__*/_jsx(\"option\",{value:event.name,children:event.name},event.id))]})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Program\"}),/*#__PURE__*/_jsxs(Select,{value:newResult.program,onChange:e=>setNewResult(_objectSpread(_objectSpread({},newResult),{},{program:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a program\"}),programs.map(program=>/*#__PURE__*/_jsx(\"option\",{value:program.name,children:program.name},program.id))]})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Category\"}),/*#__PURE__*/_jsxs(Select,{value:newResult.category,onChange:e=>setNewResult(_objectSpread(_objectSpread({},newResult),{},{category:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a category\"}),categories.map(category=>/*#__PURE__*/_jsx(\"option\",{value:category.name,children:category.name},category.id))]})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Participants & Positions\"}),newResult.participants.map((participant,index)=>/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'10px',alignItems:'center'},children:[/*#__PURE__*/_jsx(Input,{type:\"text\",placeholder:\"Participant name or chest number\",value:participant.name,onChange:e=>handleParticipantChange(index,'name',e.target.value),style:{flex:1}}),/*#__PURE__*/_jsx(Input,{type:\"text\",placeholder:\"Position (1st, 2nd, 3rd or Gold, Silver, Bronze)\",value:participant.position,onChange:e=>handleParticipantChange(index,'position',e.target.value),style:{flex:1}}),newResult.participants.length>1&&/*#__PURE__*/_jsx(Button,{onClick:()=>handleRemoveParticipant(index),style:{backgroundColor:'#ff4757'},children:\"Remove\"})]})},index)),/*#__PURE__*/_jsx(Button,{onClick:handleAddParticipant,children:\"Add Participant\"}),/*#__PURE__*/_jsx(Button,{onClick:handleSaveResult,children:\"Save Result\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'30px'},children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Filter Results by Event\"}),/*#__PURE__*/_jsxs(Select,{value:selectedEventForResults,onChange:e=>setSelectedEventForResults(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Events\"}),events.map(event=>/*#__PURE__*/_jsx(\"option\",{value:event.name,children:event.name},event.id))]})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Existing Results\"}),/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(Th,{children:\"Event\"}),/*#__PURE__*/_jsx(Th,{children:\"Program\"}),/*#__PURE__*/_jsx(Th,{children:\"Category\"}),/*#__PURE__*/_jsx(Th,{children:\"Participants\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:results.filter(result=>!selectedEventForResults||result.event===selectedEventForResults).map(result=>/*#__PURE__*/_jsxs(Tr,{children:[/*#__PURE__*/_jsx(Td,{children:result.event}),/*#__PURE__*/_jsx(Td,{children:result.program}),/*#__PURE__*/_jsx(Td,{children:result.category}),/*#__PURE__*/_jsx(Td,{children:result.participants.map((p,i)=>/*#__PURE__*/_jsxs(\"div\",{children:[p.name,\" - \",p.position,\" (\",p.points,\" points)\"]},i))})]},result.id))})]})]})]}),activeTab==='managers'&&/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(FormTitle,{children:editingTeamManager?'Edit Team Manager':'Create Team Manager'}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Select Event First\"}),/*#__PURE__*/_jsxs(Select,{value:selectedEvent,onChange:e=>handleEventSelection(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select an event\"}),events.map(event=>/*#__PURE__*/_jsx(\"option\",{value:event.name,children:event.name},event.id))]})]}),selectedEvent?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Username\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",value:newTeamManager.username,onChange:e=>setNewTeamManager(_objectSpread(_objectSpread({},newTeamManager),{},{username:e.target.value})),placeholder:\"Enter username\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Input,{type:\"password\",value:newTeamManager.password,onChange:e=>setNewTeamManager(_objectSpread(_objectSpread({},newTeamManager),{},{password:e.target.value})),placeholder:\"Enter password\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Assigned Team\"}),/*#__PURE__*/_jsxs(Select,{value:newTeamManager.team,onChange:e=>setNewTeamManager(_objectSpread(_objectSpread({},newTeamManager),{},{team:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a team\"}),teams.map(team=>/*#__PURE__*/_jsx(\"option\",{value:team.name,children:team.name},team.id))]})]}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',gap:'10px',flexWrap:'wrap'},children:editingTeamManager?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleUpdateTeamManager,children:\"Update Team Manager\"}),/*#__PURE__*/_jsx(Button,{onClick:handleCancelEdit,style:{background:'#ff4757'},children:\"Cancel\"})]}):/*#__PURE__*/_jsx(Button,{onClick:handleCreateTeamManager,children:\"Create Team Manager\"})}),/*#__PURE__*/_jsx(\"h3\",{style:{marginTop:'30px'},children:\"Existing Team Managers\"}),teamManagers.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No team managers configured yet.\"}):/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(Th,{children:\"Username\"}),/*#__PURE__*/_jsx(Th,{children:\"Assigned Team\"}),/*#__PURE__*/_jsx(Th,{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:teamManagers.map(manager=>/*#__PURE__*/_jsxs(Tr,{children:[/*#__PURE__*/_jsx(Td,{children:manager.username}),/*#__PURE__*/_jsx(Td,{children:manager.team}),/*#__PURE__*/_jsxs(Td,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>handleEditTeamManager(manager),style:{padding:'5px 10px',marginRight:'5px'},children:\"Edit\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>handleDeleteTeamManager(manager.id),style:{padding:'5px 10px',background:'#ff4757'},children:\"Delete\"})]})]},manager.id))})]})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Please select an event first to manage team managers.\"})]}),activeTab==='grades'&&/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(FormTitle,{children:\"Manage Grades\"}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'rgba(255,255,255,0.1)',padding:'15px',borderRadius:'10px',marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{marginTop:0,color:'gold'},children:\"Add New Grade with Points\"}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Grade Letter\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",value:newGrade,onChange:e=>setNewGrade(e.target.value.toUpperCase()),placeholder:\"Enter grade (e.g., A, B, C)\",maxLength:\"1\",style:{width:'80px'}})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Default Points for this Grade\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'10px',flexWrap:'wrap'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{children:\"1st (Gold)\"}),/*#__PURE__*/_jsx(Input,{type:\"number\",value:newGradePoints.gold,onChange:e=>setNewGradePoints(_objectSpread(_objectSpread({},newGradePoints),{},{gold:parseInt(e.target.value)||0})),style:{width:'80px'}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{children:\"2nd (Silver)\"}),/*#__PURE__*/_jsx(Input,{type:\"number\",value:newGradePoints.silver,onChange:e=>setNewGradePoints(_objectSpread(_objectSpread({},newGradePoints),{},{silver:parseInt(e.target.value)||0})),style:{width:'80px'}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{children:\"3rd (Bronze)\"}),/*#__PURE__*/_jsx(Input,{type:\"number\",value:newGradePoints.bronze,onChange:e=>setNewGradePoints(_objectSpread(_objectSpread({},newGradePoints),{},{bronze:parseInt(e.target.value)||0})),style:{width:'80px'}})]})]})]}),/*#__PURE__*/_jsx(Button,{onClick:()=>{if(newGrade&&!availableGrades.includes(newGrade)){// Add the new grade to available grades\nsetAvailableGrades([...availableGrades,newGrade]);// Ask user if they want to pre-configure points for all categories\nconst preConfigure=window.confirm(\"Grade \".concat(newGrade,\" added successfully!\\n\\n\")+\"Do you want to pre-configure default points (\".concat(newGradePoints.gold,\"/\").concat(newGradePoints.silver,\"/\").concat(newGradePoints.bronze,\") \")+\"for this grade across all categories?\\n\\n\"+\"You can always customize these later in the Points tab.\");if(preConfigure){preConfigureGradePoints(newGrade,newGradePoints);alert(\"Points pre-configured for grade \".concat(newGrade,\" across all categories!\"));}setNewGrade('');setNewGradePoints({gold:10,silver:7,bronze:5});}else if(availableGrades.includes(newGrade)){alert(\"Grade \".concat(newGrade,\" already exists!\"));}else{alert('Please enter a valid grade letter.');}},children:\"Add Grade\"})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Available Grades\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',gap:'10px',flexWrap:'wrap',marginBottom:'20px'},children:availableGrades.map((grade,index)=>/*#__PURE__*/_jsxs(\"div\",{style:{background:'rgba(255,255,255,0.2)',padding:'10px 15px',borderRadius:'20px',display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"span\",{children:grade}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{if(availableGrades.length>1){setAvailableGrades(availableGrades.filter(g=>g!==grade));}else{alert('You must have at least one grade!');}},style:{background:'transparent',border:'none',color:'red',cursor:'pointer',marginLeft:'10px',fontWeight:'bold'},children:\"\\xD7\"})]},index))}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Grade Point Configuration Example\"}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'rgba(255,255,255,0.1)',padding:'20px',borderRadius:'10px',marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"p\",{style:{color:'gold',fontWeight:'bold'},children:\"Example: Configure A Grade Points\"}),/*#__PURE__*/_jsxs(\"ol\",{style:{paddingLeft:'20px',color:'rgba(255,255,255,0.9)'},children:[/*#__PURE__*/_jsx(\"li\",{children:\"Go to the \\\"Points\\\" tab\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Select a category (e.g., \\\"Senior\\\")\"}),/*#__PURE__*/_jsx(\"li\",{children:\"From the \\\"Select Grade\\\" dropdown, choose \\\"A Grade\\\"\"}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Set points for each position:\",/*#__PURE__*/_jsxs(\"ul\",{style:{paddingLeft:'20px',marginTop:'5px'},children:[/*#__PURE__*/_jsx(\"li\",{children:\"1st Position (Gold): 10 points\"}),/*#__PURE__*/_jsx(\"li\",{children:\"2nd Position (Silver): 7 points\"}),/*#__PURE__*/_jsx(\"li\",{children:\"3rd Position (Bronze): 5 points\"})]})]}),/*#__PURE__*/_jsx(\"li\",{children:\"Click \\\"Save Grade Points\\\"\"})]}),/*#__PURE__*/_jsx(\"p\",{style:{fontStyle:'italic',color:'rgba(255,255,255,0.7)'},children:\"Participants with names like \\\"John Doe (A)\\\" will now receive these points instead of the default values.\"})]}),/*#__PURE__*/_jsx(\"p\",{style:{color:'rgba(255,255,255,0.7)'},children:\"Note: Grades are used to differentiate point values for participants in the same category. For example, you can have different point values for A grade and B grade participants in the same category. To use grade-specific points, include the grade in parentheses at the end of participant names (e.g., \\\"Participant Name (A)\\\").\"})]})]}),activeTab==='batch-points'&&/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(FormTitle,{children:\"Batch Grade Points Configuration\"}),/*#__PURE__*/_jsx(\"p\",{style:{color:'rgba(255,255,255,0.7)'},children:\"Configure points for a grade across all categories at once\"}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Select Grade\"}),/*#__PURE__*/_jsxs(Select,{value:selectedGradeForPoints,onChange:e=>{setSelectedGradeForPoints(e.target.value);// Load existing points if they exist for any category\nconst existingConfig=Object.keys(gradePoints).find(key=>key.endsWith(\"-\".concat(e.target.value)));if(existingConfig&&gradePoints[existingConfig]){setPoints(gradePoints[existingConfig]);}},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a grade\"}),availableGrades.map((grade,index)=>/*#__PURE__*/_jsxs(\"option\",{value:grade,children:[grade,\" Grade\"]},index))]})]}),selectedGradeForPoints&&/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'rgba(255,255,255,0.1)',padding:'20px',borderRadius:'10px',marginBottom:'20px'},children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Set Points for \",selectedGradeForPoints,\" Grade (All Categories)\"]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"1st Position (Gold) Points\"}),/*#__PURE__*/_jsx(Input,{type:\"number\",value:points.gold,onChange:e=>setPoints(_objectSpread(_objectSpread({},points),{},{gold:parseInt(e.target.value)||0}))})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"2nd Position (Silver) Points\"}),/*#__PURE__*/_jsx(Input,{type:\"number\",value:points.silver,onChange:e=>setPoints(_objectSpread(_objectSpread({},points),{},{silver:parseInt(e.target.value)||0}))})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"3rd Position (Bronze) Points\"}),/*#__PURE__*/_jsx(Input,{type:\"number\",value:points.bronze,onChange:e=>setPoints(_objectSpread(_objectSpread({},points),{},{bronze:parseInt(e.target.value)||0}))})]}),/*#__PURE__*/_jsx(Button,{onClick:()=>{if(!selectedGradeForPoints)return;const updatedGradePoints=_objectSpread({},gradePoints);let updatedCount=0;// Update points for this grade across all categories\ncategories.forEach(category=>{const key=\"\".concat(category.name,\"-\").concat(selectedGradeForPoints);updatedGradePoints[key]=_objectSpread({},points);updatedCount++;});setGradePoints(updatedGradePoints);alert(\"Points updated for \".concat(updatedCount,\" categories with \").concat(selectedGradeForPoints,\" grade\"));},children:\"Apply to All Categories\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'20px'},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Current Configurations\"}),/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(Th,{children:\"Category\"}),/*#__PURE__*/_jsx(Th,{children:\"Grade\"}),/*#__PURE__*/_jsx(Th,{children:\"1st (Gold)\"}),/*#__PURE__*/_jsx(Th,{children:\"2nd (Silver)\"}),/*#__PURE__*/_jsx(Th,{children:\"3rd (Bronze)\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:categories.map((category,index)=>{const key=\"\".concat(category.name,\"-\").concat(selectedGradeForPoints);const config=gradePoints[key]||points;return/*#__PURE__*/_jsxs(Tr,{children:[/*#__PURE__*/_jsx(Td,{children:category.name}),/*#__PURE__*/_jsx(Td,{children:selectedGradeForPoints}),/*#__PURE__*/_jsx(Td,{children:config.gold}),/*#__PURE__*/_jsx(Td,{children:config.silver}),/*#__PURE__*/_jsx(Td,{children:config.bronze})]},index);})})]})]})]})]}),activeTab==='points'&&/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(FormTitle,{children:\"Configure Points\"}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'rgba(255,255,255,0.1)',padding:'15px',borderRadius:'10px',marginBottom:'20px'},children:[/*#__PURE__*/_jsxs(\"p\",{style:{margin:'0 0 10px 0',color:'gold'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Quick Setup Example:\"}),\" To configure A grade with 10/7/5 points:\"]}),/*#__PURE__*/_jsxs(\"ol\",{style:{margin:'0 0 10px 20px',fontSize:'0.9rem'},children:[/*#__PURE__*/_jsx(\"li\",{children:\"Select a category below\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Choose \\\"A Grade\\\" from the dropdown\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Set Gold=10, Silver=7, Bronze=5\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Click \\\"Save Grade Points\\\"\"})]}),/*#__PURE__*/_jsx(\"p\",{style:{margin:0,fontSize:'0.9rem',fontStyle:'italic'},children:\"Participants named \\\"John Doe (A)\\\" will get these points\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Configure Points By Category\"}),/*#__PURE__*/_jsxs(Select,{value:selectedCategoryForPoints,onChange:e=>handleCategoryChangeForPoints(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a category\"}),categories.map(category=>/*#__PURE__*/_jsx(\"option\",{value:category.name,children:category.name},category.id))]})]}),selectedCategoryForPoints&&/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'rgba(255,255,255,0.1)',padding:'20px',borderRadius:'10px',marginBottom:'20px'},children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Points for \",selectedCategoryForPoints]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"Select Grade (Optional)\"}),/*#__PURE__*/_jsxs(Select,{value:selectedGradeForPoints,onChange:e=>handleGradeChangeForPoints(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"No grade (category only)\"}),availableGrades.map((grade,index)=>/*#__PURE__*/_jsxs(\"option\",{value:grade,children:[grade,\" Grade\"]},index))]}),/*#__PURE__*/_jsx(Button,{onClick:handlePrepopulateAGrade,style:{marginLeft:'10px',background:'rgba(255,215,0,0.2)',color:'gold'},children:\"Example: A Grade (10/7/5)\"})]}),selectedGradeForPoints&&/*#__PURE__*/_jsxs(\"h4\",{children:[\"Points for \",selectedCategoryForPoints,\" - \",selectedGradeForPoints,\" Grade\"]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"1st Position (Gold) Points\"}),/*#__PURE__*/_jsx(Input,{type:\"number\",value:points.gold,onChange:e=>setPoints(_objectSpread(_objectSpread({},points),{},{gold:parseInt(e.target.value)||0}))})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"2nd Position (Silver) Points\"}),/*#__PURE__*/_jsx(Input,{type:\"number\",value:points.silver,onChange:e=>setPoints(_objectSpread(_objectSpread({},points),{},{silver:parseInt(e.target.value)||0}))})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"3rd Position (Bronze) Points\"}),/*#__PURE__*/_jsx(Input,{type:\"number\",value:points.bronze,onChange:e=>setPoints(_objectSpread(_objectSpread({},points),{},{bronze:parseInt(e.target.value)||0}))})]}),selectedGradeForPoints?/*#__PURE__*/_jsx(Button,{onClick:handleSaveGradePoints,children:\"Save Grade Points\"}):/*#__PURE__*/_jsx(Button,{onClick:handleSaveCategoryPoints,children:\"Save Category Points\"}),!selectedGradeForPoints&&categoryPoints[selectedCategoryForPoints]&&/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'10px',color:'gold'},children:/*#__PURE__*/_jsx(\"strong\",{children:\"Current category configuration saved\"})}),selectedGradeForPoints&&gradePoints[\"\".concat(selectedCategoryForPoints,\"-\").concat(selectedGradeForPoints)]&&/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'10px',color:'gold'},children:/*#__PURE__*/_jsx(\"strong\",{children:\"Current grade configuration saved\"})})]}),/*#__PURE__*/_jsx(FormTitle,{children:\"Default Points Configuration\"}),/*#__PURE__*/_jsx(\"p\",{children:\"These points will be used when no category-specific or grade-specific points are configured.\"}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"1st Position (Gold) Points\"}),/*#__PURE__*/_jsx(Input,{type:\"number\",value:points.gold,onChange:e=>setPoints(_objectSpread(_objectSpread({},points),{},{gold:parseInt(e.target.value)||0}))})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"2nd Position (Silver) Points\"}),/*#__PURE__*/_jsx(Input,{type:\"number\",value:points.silver,onChange:e=>setPoints(_objectSpread(_objectSpread({},points),{},{silver:parseInt(e.target.value)||0}))})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"3rd Position (Bronze) Points\"}),/*#__PURE__*/_jsx(Input,{type:\"number\",value:points.bronze,onChange:e=>setPoints(_objectSpread(_objectSpread({},points),{},{bronze:parseInt(e.target.value)||0}))})]}),/*#__PURE__*/_jsx(Button,{onClick:()=>saveToLocalStorage('points',points),children:\"Save Default Points Configuration\"}),/*#__PURE__*/_jsx(Button,{onClick:handleChangePassword,children:\"Change Admin Password\"}),Object.keys(categoryPoints).length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'30px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Category-Specific Points Configuration\"}),/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(Th,{children:\"Category\"}),/*#__PURE__*/_jsx(Th,{children:\"1st (Gold)\"}),/*#__PURE__*/_jsx(Th,{children:\"2nd (Silver)\"}),/*#__PURE__*/_jsx(Th,{children:\"3rd (Bronze)\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:Object.entries(categoryPoints).map(_ref=>{let[category,pointsConfig]=_ref;return/*#__PURE__*/_jsxs(Tr,{children:[/*#__PURE__*/_jsx(Td,{children:category}),/*#__PURE__*/_jsx(Td,{children:pointsConfig.gold}),/*#__PURE__*/_jsx(Td,{children:pointsConfig.silver}),/*#__PURE__*/_jsx(Td,{children:pointsConfig.bronze})]},category);})})]})]}),Object.keys(gradePoints).length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'30px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Grade-Specific Points Configuration\"}),/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(Th,{children:\"Category\"}),/*#__PURE__*/_jsx(Th,{children:\"Grade\"}),/*#__PURE__*/_jsx(Th,{children:\"1st (Gold)\"}),/*#__PURE__*/_jsx(Th,{children:\"2nd (Silver)\"}),/*#__PURE__*/_jsx(Th,{children:\"3rd (Bronze)\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:Object.entries(gradePoints).map(_ref2=>{let[key,pointsConfig]=_ref2;const[category,grade]=key.split('-');return/*#__PURE__*/_jsxs(Tr,{children:[/*#__PURE__*/_jsx(Td,{children:category}),/*#__PURE__*/_jsx(Td,{children:grade}),/*#__PURE__*/_jsx(Td,{children:pointsConfig.gold}),/*#__PURE__*/_jsx(Td,{children:pointsConfig.silver}),/*#__PURE__*/_jsx(Td,{children:pointsConfig.bronze})]},key);})})]})]})]})]});};export default AdminDashboard;","map":{"version":3,"names":["React","useState","useEffect","styled","useNavigate","loadFromLocalStorage","saveToLocalStorage","calculateTeamStandings","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DashboardContainer","div","_templateObject","_taggedTemplateLiteral","Header","h1","_templateObject2","TabContainer","_templateObject3","Tab","button","_templateObject4","props","active","FormContainer","_templateObject5","FormTitle","h2","_templateObject6","FormGroup","_templateObject7","Label","label","_templateObject8","Input","input","_templateObject9","Select","select","_templateObject0","Button","_templateObject1","Table","table","_templateObject10","Th","th","_templateObject11","Td","td","_templateObject12","Tr","tr","_templateObject13","ColorPreview","_templateObject14","concat","r","g","b","RGBInputContainer","_templateObject15","RGBInput","_templateObject16","AdminDashboard","navigate","activeTab","setActiveTab","events","setEvents","teams","setTeams","categories","setCategories","students","setStudents","programs","setPrograms","results","setResults","points","setPoints","gold","silver","bronze","categoryPoints","setCategoryPoints","gradePoints","setGradePoints","availableGrades","setAvailableGrades","newGradePoints","setNewGradePoints","teamManagers","setTeamManagers","selectedEvent","setSelectedEvent","newEvent","setNewEvent","name","color","newTeam","setNewTeam","newCategory","setNewCategory","order","newStudent","setNewStudent","chestNumber","team","category","newProgram","setNewProgram","type","newResult","setNewResult","event","program","participants","position","newTeamManager","setNewTeamManager","username","password","editingTeamManager","setEditingTeamManager","adminPassword","setAdminPassword","selectedCategoryForPoints","setSelectedCategoryForPoints","selectedGradeForPoints","setSelectedGradeForPoints","newGrade","setNewGrade","selectedEventForTeams","setSelectedEventForTeams","selectedEventForStudents","setSelectedEventForStudents","selectedEventForPrograms","setSelectedEventForPrograms","selectedEventForResults","setSelectedEventForResults","savedEvents","savedTeams","savedCategories","savedStudents","savedPrograms","savedResults","savedPoints","savedCategoryPoints","savedGradePoints","savedPassword","savedAvailableGrades","savedTeamManagers","savedSelectedEventForTeams","savedSelectedEventForStudents","savedSelectedEventForPrograms","savedSelectedEventForResults","length","prev","_objectSpread","handleLogout","localStorage","removeItem","handleEventSelection","eventName","handleCreateTeamManager","trim","alert","some","manager","teamManager","id","updatedTeamManagers","handleEditTeamManager","handleUpdateTeamManager","map","handleDeleteTeamManager","managerId","window","confirm","filter","handleCancelEdit","preConfigureGradePoints","grade","pointsConfig","updatedGradePoints","forEach","key","updatedTeams","handleCreateEvent","cat","handleCreateTeam","handleCreateCategory","handleCreateStudent","student","photo","handleCreateProgram","handleAddParticipant","handleParticipantChange","index","field","value","updatedParticipants","handleRemoveParticipant","splice","handleSaveResult","participantsWithPoints","participant","pointValue","participantName","gradeMatch","match","replace","pointConfig","gradeKey","toLowerCase","result","timestamp","Date","toISOString","handleChangePassword","newPassword","prompt","handleSaveCategoryPoints","handleCategoryChangeForPoints","categoryName","handleGradeChangeForPoints","handlePrepopulateAGrade","handleSaveGradePoints","children","onClick","style","display","gap","flexWrap","justifyContent","background","onChange","e","target","placeholder","min","max","parseInt","join","marginTop","teamResults","find","s","slice","studentResults","programResults","padding","borderRadius","marginBottom","margin","fontSize","fontStyle","alignItems","flex","backgroundColor","p","i","marginRight","toUpperCase","maxLength","width","includes","preConfigure","border","cursor","marginLeft","fontWeight","paddingLeft","existingConfig","Object","keys","endsWith","updatedCount","config","entries","_ref","_ref2","split"],"sources":["C:/Users/SMIC_STUDIO/Desktop/MEHFIL 25 APP/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { loadFromLocalStorage, saveToLocalStorage, calculateTeamStandings } from '../utils/dataStorage';\r\n\r\nconst DashboardContainer = styled.div`\r\n  padding: 20px;\r\n  color: white;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst Header = styled.h1`\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  margin-bottom: 30px;\r\n  color: gold;\r\n`;\r\n\r\nconst TabContainer = styled.div`\r\n  display: flex;\r\n  border-bottom: 2px solid rgba(255,255,255,0.2);\r\n  margin-bottom: 30px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Tab = styled.button`\r\n  padding: 15px 30px;\r\n  background: ${props => props.active ? 'rgba(255,255,255,0.2)' : 'transparent'};\r\n  color: ${props => props.active ? 'gold' : 'white'};\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.1rem;\r\n  font-weight: bold;\r\n\r\n  &:hover {\r\n    background: rgba(255,255,255,0.1);\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    padding: 10px 15px;\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n  background: rgba(255,255,255,0.1);\r\n  border-radius: 15px;\r\n  padding: 30px;\r\n  backdrop-filter: blur(10px);\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst FormTitle = styled.h2`\r\n  margin-top: 0;\r\n  color: gold;\r\n  border-bottom: 1px solid rgba(255,255,255,0.2);\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst FormGroup = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  border: none;\r\n  background: rgba(255,255,255,0.1);\r\n  color: white;\r\n  font-size: 1rem;\r\n\r\n  &:focus {\r\n    outline: 2px solid gold;\r\n  }\r\n`;\r\n\r\nconst Select = styled.select`\r\n  width: 100%;\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  border: none;\r\n  background: rgba(255,255,255,0.1);\r\n  color: white;\r\n  font-size: 1rem;\r\n\r\n  &:focus {\r\n    outline: 2px solid gold;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 12px 25px;\r\n  background: gold;\r\n  color: #333;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n  margin-right: 10px;\r\n  margin-bottom: 10px;\r\n\r\n  &:hover {\r\n    background: #ffd700;\r\n    transform: translateY(-2px);\r\n  }\r\n`;\r\n\r\nconst Table = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  background: rgba(255,255,255,0.1);\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Th = styled.th`\r\n  background: rgba(0,0,0,0.2);\r\n  padding: 15px;\r\n  text-align: left;\r\n`;\r\n\r\nconst Td = styled.td`\r\n  padding: 15px;\r\n  border-bottom: 1px solid rgba(255,255,255,0.1);\r\n`;\r\n\r\nconst Tr = styled.tr`\r\n  &:hover {\r\n    background: rgba(255,255,255,0.05);\r\n  }\r\n`;\r\n\r\nconst ColorPreview = styled.div`\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  background: ${props => `rgb(${props.r}, ${props.g}, ${props.b})`};\r\n  display: inline-block;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst RGBInputContainer = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst RGBInput = styled.input`\r\n  width: 80px;\r\n  padding: 8px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  background: rgba(255,255,255,0.1);\r\n  color: white;\r\n  text-align: center;\r\n`;\r\n\r\nconst AdminDashboard = () => {\r\n  const navigate = useNavigate();\r\n  const [activeTab, setActiveTab] = useState('events');\r\n  const [events, setEvents] = useState([]);\r\n  const [teams, setTeams] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [students, setStudents] = useState([]);\r\n  const [programs, setPrograms] = useState([]);\r\n  const [results, setResults] = useState([]);\r\n  const [points, setPoints] = useState({\r\n    gold: 10,\r\n    silver: 7,\r\n    bronze: 5\r\n  });\r\n  // Category-specific points configuration\r\n  const [categoryPoints, setCategoryPoints] = useState({});\r\n  // Grade-specific points configuration\r\n  const [gradePoints, setGradePoints] = useState({});\r\n  // Available grades configuration\r\n  const [availableGrades, setAvailableGrades] = useState(['A', 'B', 'C', 'D']);\r\n  // New grade points configuration\r\n  const [newGradePoints, setNewGradePoints] = useState({\r\n    gold: 10,\r\n    silver: 7,\r\n    bronze: 5\r\n  });\r\n  // Team managers configuration\r\n  const [teamManagers, setTeamManagers] = useState([]);\r\n  // Selected event for management\r\n  const [selectedEvent, setSelectedEvent] = useState('');\r\n  \r\n  // Form states\r\n  const [newEvent, setNewEvent] = useState({ name: '', categories: [], color: { r: 106, g: 17, b: 203 } });\r\n  const [newTeam, setNewTeam] = useState({ name: '', color: '#FF5733' });\r\n  const [newCategory, setNewCategory] = useState({ name: '', order: 1 });\r\n  const [newStudent, setNewStudent] = useState({ name: '', chestNumber: '', team: '', category: '' });\r\n  const [newProgram, setNewProgram] = useState({ name: '', type: 'Individual' });\r\n  const [newResult, setNewResult] = useState({ \r\n    event: '', \r\n    program: '', \r\n    category: '', \r\n    participants: [{ name: '', position: '' }] \r\n  });\r\n  const [newTeamManager, setNewTeamManager] = useState({ \r\n    username: '', \r\n    password: '', \r\n    team: '' \r\n  });\r\n  const [editingTeamManager, setEditingTeamManager] = useState(null);\r\n  const [adminPassword, setAdminPassword] = useState('admin123');\r\n  const [selectedCategoryForPoints, setSelectedCategoryForPoints] = useState('');\r\n  const [selectedGradeForPoints, setSelectedGradeForPoints] = useState('');\r\n  const [newGrade, setNewGrade] = useState('');\r\n  \r\n  // Event filtering states\r\n  const [selectedEventForTeams, setSelectedEventForTeams] = useState('');\r\n  const [selectedEventForStudents, setSelectedEventForStudents] = useState('');\r\n  const [selectedEventForPrograms, setSelectedEventForPrograms] = useState('');\r\n  const [selectedEventForResults, setSelectedEventForResults] = useState('');\r\n\r\n  // Load data from localStorage on component mount\r\n  useEffect(() => {\r\n    const savedEvents = loadFromLocalStorage('events', []);\r\n    const savedTeams = loadFromLocalStorage('teams', []);\r\n    const savedCategories = loadFromLocalStorage('categories', []);\r\n    const savedStudents = loadFromLocalStorage('students', []);\r\n    const savedPrograms = loadFromLocalStorage('programs', []);\r\n    const savedResults = loadFromLocalStorage('results', []);\r\n    const savedPoints = loadFromLocalStorage('points', { gold: 10, silver: 7, bronze: 5 });\r\n    const savedCategoryPoints = loadFromLocalStorage('categoryPoints', {});\r\n    const savedGradePoints = loadFromLocalStorage('gradePoints', {});\r\n    const savedPassword = loadFromLocalStorage('adminPassword', 'admin123');\r\n    const savedAvailableGrades = loadFromLocalStorage('availableGrades', ['A', 'B', 'C', 'D']);\r\n    const savedTeamManagers = loadFromLocalStorage('teamManagers', []);\r\n    \r\n    // Load event filtering states\r\n    const savedSelectedEventForTeams = loadFromLocalStorage('selectedEventForTeams', '');\r\n    const savedSelectedEventForStudents = loadFromLocalStorage('selectedEventForStudents', '');\r\n    const savedSelectedEventForPrograms = loadFromLocalStorage('selectedEventForPrograms', '');\r\n    const savedSelectedEventForResults = loadFromLocalStorage('selectedEventForResults', '');\r\n    \r\n    setEvents(savedEvents);\r\n    setTeams(savedTeams);\r\n    setCategories(savedCategories);\r\n    setStudents(savedStudents);\r\n    setPrograms(savedPrograms);\r\n    setResults(savedResults);\r\n    setPoints(savedPoints);\r\n    setCategoryPoints(savedCategoryPoints);\r\n    setGradePoints(savedGradePoints);\r\n    setAdminPassword(savedPassword);\r\n    setAvailableGrades(savedAvailableGrades);\r\n    setTeamManagers(savedTeamManagers);\r\n    \r\n    // Set event filtering states\r\n    setSelectedEventForTeams(savedSelectedEventForTeams);\r\n    setSelectedEventForStudents(savedSelectedEventForStudents);\r\n    setSelectedEventForPrograms(savedSelectedEventForPrograms);\r\n    setSelectedEventForResults(savedSelectedEventForResults);\r\n    \r\n    // Initialize form select options\r\n    if (savedEvents.length > 0) {\r\n      setNewResult(prev => ({ ...prev, event: savedEvents[0].name }));\r\n      setSelectedEvent(savedEvents[0].name);\r\n    }\r\n    if (savedPrograms.length > 0) {\r\n      setNewResult(prev => ({ ...prev, program: savedPrograms[0].name }));\r\n    }\r\n    if (savedCategories.length > 0) {\r\n      setNewResult(prev => ({ ...prev, category: savedCategories[0].name }));\r\n      setSelectedCategoryForPoints(savedCategories[0].name);\r\n    }\r\n    if (savedTeams.length > 0) {\r\n      setNewTeamManager(prev => ({ ...prev, team: savedTeams[0].name }));\r\n    }\r\n  }, []);\r\n\r\n  // Handle logout\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('isAdminLoggedIn');\r\n    navigate('/');\r\n  };\r\n\r\n  // Handle event selection\r\n  const handleEventSelection = (eventName) => {\r\n    setSelectedEvent(eventName);\r\n    \r\n    // Update forms that depend on event selection\r\n    setNewTeam({ ...newTeam, event: eventName });\r\n    setNewCategory({ ...newCategory, event: eventName });\r\n    setNewStudent({ ...newStudent, event: eventName });\r\n    setNewProgram({ ...newProgram, event: eventName });\r\n    setNewResult({ ...newResult, event: eventName });\r\n    setNewTeamManager({ ...newTeamManager, event: eventName });\r\n  };\r\n\r\n  // Team manager CRUD operations\r\n  const handleCreateTeamManager = () => {\r\n    if (newTeamManager.username.trim() === '' || newTeamManager.password.trim() === '' || newTeamManager.team.trim() === '') {\r\n      alert('Please fill in all fields');\r\n      return;\r\n    }\r\n    \r\n    // Check if username already exists\r\n    if (teamManagers.some(manager => manager.username === newTeamManager.username)) {\r\n      alert('A team manager with this username already exists');\r\n      return;\r\n    }\r\n    \r\n    const teamManager = {\r\n      id: teamManagers.length + 1,\r\n      username: newTeamManager.username,\r\n      password: newTeamManager.password, // In a real app, this should be hashed\r\n      team: newTeamManager.team\r\n    };\r\n    \r\n    const updatedTeamManagers = [...teamManagers, teamManager];\r\n    setTeamManagers(updatedTeamManagers);\r\n    saveToLocalStorage('teamManagers', updatedTeamManagers);\r\n    \r\n    // Reset form\r\n    setNewTeamManager({ username: '', password: '', team: newTeamManager.team });\r\n  };\r\n\r\n  const handleEditTeamManager = (manager) => {\r\n    setEditingTeamManager(manager);\r\n    setNewTeamManager({\r\n      username: manager.username,\r\n      password: manager.password,\r\n      team: manager.team\r\n    });\r\n  };\r\n\r\n  const handleUpdateTeamManager = () => {\r\n    if (newTeamManager.username.trim() === '' || newTeamManager.password.trim() === '' || newTeamManager.team.trim() === '') {\r\n      alert('Please fill in all fields');\r\n      return;\r\n    }\r\n    \r\n    // Check if username already exists (excluding the current manager being edited)\r\n    if (teamManagers.some(manager => \r\n        manager.username === newTeamManager.username && \r\n        manager.id !== editingTeamManager.id)) {\r\n      alert('A team manager with this username already exists');\r\n      return;\r\n    }\r\n    \r\n    const updatedTeamManagers = teamManagers.map(manager => \r\n      manager.id === editingTeamManager.id \r\n        ? { ...manager, ...newTeamManager }\r\n        : manager\r\n    );\r\n    \r\n    setTeamManagers(updatedTeamManagers);\r\n    saveToLocalStorage('teamManagers', updatedTeamManagers);\r\n    \r\n    // Reset form and editing state\r\n    setEditingTeamManager(null);\r\n    setNewTeamManager({ username: '', password: '', team: newTeamManager.team });\r\n  };\r\n\r\n  const handleDeleteTeamManager = (managerId) => {\r\n    if (window.confirm('Are you sure you want to delete this team manager?')) {\r\n      const updatedTeamManagers = teamManagers.filter(manager => manager.id !== managerId);\r\n      setTeamManagers(updatedTeamManagers);\r\n      saveToLocalStorage('teamManagers', updatedTeamManagers);\r\n      \r\n      // Clear form if we were editing this manager\r\n      if (editingTeamManager && editingTeamManager.id === managerId) {\r\n        setEditingTeamManager(null);\r\n        setNewTeamManager({ username: '', password: '', team: newTeamManager.team });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditingTeamManager(null);\r\n    setNewTeamManager({ username: '', password: '', team: newTeamManager.team });\r\n  };\r\n\r\n  // Function to pre-configure points for a new grade across all categories\r\n  const preConfigureGradePoints = (grade, pointsConfig) => {\r\n    const updatedGradePoints = { ...gradePoints };\r\n    \r\n    // For each category, create a default grade point configuration\r\n    categories.forEach(category => {\r\n      const key = `${category.name}-${grade}`;\r\n      updatedGradePoints[key] = { ...pointsConfig };\r\n    });\r\n    \r\n    setGradePoints(updatedGradePoints);\r\n  };\r\n\r\n  // Update team standings when results or points change\r\n  useEffect(() => {\r\n    const savedTeams = loadFromLocalStorage('teams', []);\r\n    const updatedTeams = calculateTeamStandings(savedTeams, results, points, categoryPoints, gradePoints);\r\n    setTeams(updatedTeams);\r\n  }, [results, points, categoryPoints, gradePoints]);\r\n\r\n  // Save data to localStorage whenever state changes\r\n  useEffect(() => {\r\n    saveToLocalStorage('events', events);\r\n  }, [events]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('teams', teams);\r\n  }, [teams]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('categories', categories);\r\n  }, [categories]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('students', students);\r\n  }, [students]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('programs', programs);\r\n  }, [programs]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('results', results);\r\n  }, [results]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('points', points);\r\n  }, [points]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('categoryPoints', categoryPoints);\r\n  }, [categoryPoints]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('gradePoints', gradePoints);\r\n  }, [gradePoints]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('adminPassword', adminPassword);\r\n  }, [adminPassword]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('availableGrades', availableGrades);\r\n  }, [availableGrades]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('teamManagers', teamManagers);\r\n  }, [teamManagers]);\r\n\r\n  // Save event filtering states to localStorage\r\n  useEffect(() => {\r\n    saveToLocalStorage('selectedEventForTeams', selectedEventForTeams);\r\n  }, [selectedEventForTeams]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('selectedEventForStudents', selectedEventForStudents);\r\n  }, [selectedEventForStudents]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('selectedEventForPrograms', selectedEventForPrograms);\r\n  }, [selectedEventForPrograms]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('selectedEventForResults', selectedEventForResults);\r\n  }, [selectedEventForResults]);\r\n\r\n  const handleCreateEvent = () => {\r\n    if (newEvent.name.trim() === '') return;\r\n    const event = {\r\n      id: events.length + 1,\r\n      name: newEvent.name,\r\n      categories: categories.map(cat => cat.name),\r\n      color: newEvent.color\r\n    };\r\n    setEvents([...events, event]);\r\n    setNewEvent({ name: '', categories: [], color: { r: 106, g: 17, b: 203 } });\r\n  };\r\n\r\n  const handleCreateTeam = () => {\r\n    if (newTeam.name.trim() === '') return;\r\n    const team = {\r\n      id: teams.length + 1,\r\n      name: newTeam.name,\r\n      color: newTeam.color\r\n    };\r\n    setTeams([...teams, team]);\r\n    setNewTeam({ name: '', color: '#FF5733' });\r\n  };\r\n\r\n  const handleCreateCategory = () => {\r\n    if (newCategory.name.trim() === '') return;\r\n    const category = {\r\n      id: categories.length + 1,\r\n      name: newCategory.name,\r\n      order: newCategory.order\r\n    };\r\n    setCategories([...categories, category]);\r\n    setNewCategory({ name: '', order: categories.length + 2 });\r\n  };\r\n\r\n  const handleCreateStudent = () => {\r\n    if (newStudent.name.trim() === '' || newStudent.chestNumber.trim() === '') return;\r\n    const student = {\r\n      id: students.length + 1,\r\n      name: newStudent.name,\r\n      chestNumber: newStudent.chestNumber,\r\n      team: newStudent.team,\r\n      category: newStudent.category,\r\n      photo: null\r\n    };\r\n    setStudents([...students, student]);\r\n    setNewStudent({ name: '', chestNumber: '', team: '', category: '' });\r\n  };\r\n\r\n  const handleCreateProgram = () => {\r\n    if (newProgram.name.trim() === '') return;\r\n    const program = {\r\n      id: programs.length + 1,\r\n      name: newProgram.name,\r\n      type: newProgram.type\r\n    };\r\n    setPrograms([...programs, program]);\r\n    setNewProgram({ name: '', type: 'Individual' });\r\n  };\r\n\r\n  const handleAddParticipant = () => {\r\n    setNewResult({\r\n      ...newResult,\r\n      participants: [...newResult.participants, { name: '', position: '' }]\r\n    });\r\n  };\r\n\r\n  const handleParticipantChange = (index, field, value) => {\r\n    const updatedParticipants = [...newResult.participants];\r\n    updatedParticipants[index][field] = value;\r\n    setNewResult({\r\n      ...newResult,\r\n      participants: updatedParticipants\r\n    });\r\n  };\r\n\r\n  const handleRemoveParticipant = (index) => {\r\n    if (newResult.participants.length <= 1) return;\r\n    const updatedParticipants = [...newResult.participants];\r\n    updatedParticipants.splice(index, 1);\r\n    setNewResult({\r\n      ...newResult,\r\n      participants: updatedParticipants\r\n    });\r\n  };\r\n\r\n  const handleSaveResult = () => {\r\n    // Calculate points based on position, category, and grade\r\n    const participantsWithPoints = newResult.participants.map(participant => {\r\n      let pointValue = 0;\r\n      \r\n      // Extract grade from participant name if it exists (e.g., \"John Doe (A)\" or \"SJ001 (B)\")\r\n      let grade = '';\r\n      let participantName = participant.name;\r\n      \r\n      // Updated regex to handle more grades (A, B, C, D)\r\n      const gradeMatch = participant.name.match(/\\(([A-D])\\)$/);\r\n      if (gradeMatch) {\r\n        grade = gradeMatch[1];\r\n        participantName = participant.name.replace(/\\s*\\([A-D]\\)$/, '');\r\n      }\r\n      \r\n      // Use grade-specific points if available\r\n      let pointConfig = points; // default\r\n      \r\n      // Use the category from the current result being saved, not the selected category for points configuration\r\n      if (grade && newResult.category) {\r\n        const gradeKey = `${newResult.category}-${grade}`;\r\n        if (gradePoints[gradeKey]) {\r\n          pointConfig = gradePoints[gradeKey];\r\n        } else if (categoryPoints[newResult.category]) {\r\n          // Fall back to category-specific points\r\n          pointConfig = categoryPoints[newResult.category];\r\n        }\r\n      } else if (categoryPoints[newResult.category]) {\r\n        // Use category-specific points if no grade specified\r\n        pointConfig = categoryPoints[newResult.category];\r\n      }\r\n      \r\n      switch (participant.position.toLowerCase()) {\r\n        case '1':\r\n        case 'first':\r\n        case 'gold':\r\n          pointValue = pointConfig.gold;\r\n          break;\r\n        case '2':\r\n        case 'second':\r\n        case 'silver':\r\n          pointValue = pointConfig.silver;\r\n          break;\r\n        case '3':\r\n        case 'third':\r\n        case 'bronze':\r\n          pointValue = pointConfig.bronze;\r\n          break;\r\n        default:\r\n          pointValue = 0;\r\n      }\r\n      \r\n      return {\r\n        ...participant,\r\n        points: pointValue\r\n      };\r\n    });\r\n    \r\n    const result = {\r\n      id: results.length + 1,\r\n      event: newResult.event,\r\n      program: newResult.program,\r\n      category: newResult.category,\r\n      participants: participantsWithPoints,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    \r\n    setResults([...results, result]);\r\n    \r\n    // Reset form\r\n    setNewResult({ \r\n      event: newResult.event, \r\n      program: newResult.program, \r\n      category: newResult.category, \r\n      participants: [{ name: '', position: '' }] \r\n    });\r\n  };\r\n\r\n  const handleChangePassword = () => {\r\n    // In a real app, you would validate the current password first\r\n    const newPassword = prompt('Enter new password:');\r\n    if (newPassword && newPassword.trim() !== '') {\r\n      setAdminPassword(newPassword.trim());\r\n      alert('Password updated successfully!');\r\n    }\r\n  };\r\n\r\n  const handleSaveCategoryPoints = () => {\r\n    if (!selectedCategoryForPoints) return;\r\n    \r\n    setCategoryPoints({\r\n      ...categoryPoints,\r\n      [selectedCategoryForPoints]: { ...points }\r\n    });\r\n    \r\n    alert(`Points configuration saved for category: ${selectedCategoryForPoints}`);\r\n  };\r\n\r\n  const handleCategoryChangeForPoints = (categoryName) => {\r\n    setSelectedCategoryForPoints(categoryName);\r\n    \r\n    // Load existing points for this category if they exist\r\n    if (categoryPoints[categoryName]) {\r\n      setPoints(categoryPoints[categoryName]);\r\n    } else {\r\n      // Reset to default points if no custom points for this category\r\n      setPoints({ gold: 10, silver: 7, bronze: 5 });\r\n    }\r\n  };\r\n\r\n  // Handle grade selection for points configuration\r\n  const handleGradeChangeForPoints = (grade) => {\r\n    setSelectedGradeForPoints(grade);\r\n    \r\n    // Create a key for category-grade combination\r\n    const key = `${selectedCategoryForPoints}-${grade}`;\r\n    \r\n    // Load existing points for this category-grade combination if they exist\r\n    if (gradePoints[key]) {\r\n      setPoints(gradePoints[key]);\r\n    } else {\r\n      // Check if there are category-specific points\r\n      if (categoryPoints[selectedCategoryForPoints]) {\r\n        setPoints(categoryPoints[selectedCategoryForPoints]);\r\n      } else {\r\n        // Reset to default points\r\n        setPoints({ gold: 10, silver: 7, bronze: 5 });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Pre-populate A grade points example\r\n  const handlePrepopulateAGrade = () => {\r\n    if (!selectedCategoryForPoints) {\r\n      alert('Please select a category first');\r\n      return;\r\n    }\r\n    \r\n    setSelectedGradeForPoints('A');\r\n    setPoints({ gold: 10, silver: 7, bronze: 5 });\r\n  };\r\n\r\n  // Save grade-specific points\r\n  const handleSaveGradePoints = () => {\r\n    if (!selectedCategoryForPoints || !selectedGradeForPoints) return;\r\n    \r\n    const key = `${selectedCategoryForPoints}-${selectedGradeForPoints}`;\r\n    \r\n    setGradePoints({\r\n      ...gradePoints,\r\n      [key]: { ...points }\r\n    });\r\n    \r\n    alert(`Points configuration saved for category: ${selectedCategoryForPoints}, grade: ${selectedGradeForPoints}`);\r\n  };\r\n\r\n  return (\r\n    <DashboardContainer>\r\n      <Header>Admin Dashboard</Header>\r\n      \r\n      <TabContainer>\r\n        <Tab active={activeTab === 'switcher'} onClick={() => setActiveTab('switcher')}>Role Switcher</Tab>\r\n        <Tab active={activeTab === 'events'} onClick={() => setActiveTab('events')}>Events</Tab>\r\n        <Tab active={activeTab === 'categories'} onClick={() => setActiveTab('categories')}>Categories</Tab>\r\n        <Tab active={activeTab === 'teams'} onClick={() => setActiveTab('teams')}>Teams</Tab>\r\n        <Tab active={activeTab === 'students'} onClick={() => setActiveTab('students')}>Students</Tab>\r\n        <Tab active={activeTab === 'programs'} onClick={() => setActiveTab('programs')}>Programs</Tab>\r\n        <Tab active={activeTab === 'results'} onClick={() => setActiveTab('results')}>Results</Tab>\r\n        <Tab active={activeTab === 'managers'} onClick={() => setActiveTab('managers')}>Team Managers</Tab>\r\n        <Tab active={activeTab === 'grades'} onClick={() => setActiveTab('grades')}>Grades</Tab>\r\n        <Tab active={activeTab === 'batch-points'} onClick={() => setActiveTab('batch-points')}>Batch Points</Tab>\r\n        <Tab active={activeTab === 'points'} onClick={() => setActiveTab('points')}>Points</Tab>\r\n      </TabContainer>\r\n      \r\n      {activeTab === 'switcher' && (\r\n        <FormContainer>\r\n          <FormTitle>Switch Between Roles</FormTitle>\r\n          <div style={{ display: 'flex', gap: '20px', flexWrap: 'wrap', justifyContent: 'center' }}>\r\n            <Button \r\n              onClick={() => navigate('/')}\r\n              style={{ background: 'rgba(255,255,255,0.2)', color: 'white' }}\r\n            >\r\n              Public View\r\n            </Button>\r\n            <Button \r\n              onClick={() => {}}\r\n              style={{ background: 'gold', color: '#333' }}\r\n            >\r\n              Admin Dashboard\r\n            </Button>\r\n            <Button \r\n              onClick={() => navigate('/team-manager-login')}\r\n              style={{ background: 'rgba(255,255,255,0.2)', color: 'white' }}\r\n            >\r\n              Team Manager\r\n            </Button>\r\n            <Button \r\n              onClick={handleLogout}\r\n              style={{ background: '#ff4757', color: 'white' }}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </div>\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'events' && (\r\n        <FormContainer>\r\n          <FormTitle>Create New Event</FormTitle>\r\n          <FormGroup>\r\n            <Label>Event Name</Label>\r\n            <Input \r\n              type=\"text\" \r\n              value={newEvent.name}\r\n              onChange={(e) => setNewEvent({...newEvent, name: e.target.value})}\r\n              placeholder=\"Enter event name\"\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label>Event Color (RGB)</Label>\r\n            <RGBInputContainer>\r\n              <div>\r\n                <Label>R</Label>\r\n                <RGBInput \r\n                  type=\"number\" \r\n                  min=\"0\" \r\n                  max=\"255\" \r\n                  value={newEvent.color.r}\r\n                  onChange={(e) => setNewEvent({\r\n                    ...newEvent, \r\n                    color: {...newEvent.color, r: parseInt(e.target.value) || 0}\r\n                  })}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label>G</Label>\r\n                <RGBInput \r\n                  type=\"number\" \r\n                  min=\"0\" \r\n                  max=\"255\" \r\n                  value={newEvent.color.g}\r\n                  onChange={(e) => setNewEvent({\r\n                    ...newEvent, \r\n                    color: {...newEvent.color, g: parseInt(e.target.value) || 0}\r\n                  })}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label>B</Label>\r\n                <RGBInput \r\n                  type=\"number\" \r\n                  min=\"0\" \r\n                  max=\"255\" \r\n                  value={newEvent.color.b}\r\n                  onChange={(e) => setNewEvent({\r\n                    ...newEvent, \r\n                    color: {...newEvent.color, b: parseInt(e.target.value) || 0}\r\n                  })}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label>Preview</Label>\r\n                <ColorPreview r={newEvent.color.r} g={newEvent.color.g} b={newEvent.color.b} />\r\n              </div>\r\n            </RGBInputContainer>\r\n          </FormGroup>\r\n          \r\n          <Button onClick={handleCreateEvent}>Create Event</Button>\r\n          \r\n          <h3>Existing Events</h3>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <Th>Name</Th>\r\n                <Th>Categories</Th>\r\n                <Th>Color</Th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {events.map(event => (\r\n                <Tr key={event.id}>\r\n                  <Td>{event.name}</Td>\r\n                  <Td>{event.categories.join(', ')}</Td>\r\n                  <Td>\r\n                    <ColorPreview r={event.color.r} g={event.color.g} b={event.color.b} />\r\n                    RGB({event.color.r}, {event.color.g}, {event.color.b})\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'categories' && (\r\n        <FormContainer>\r\n          <FormTitle>Manage Categories</FormTitle>\r\n          \r\n          <FormGroup>\r\n            <Label>Select Event First</Label>\r\n            <Select \r\n              value={selectedEvent}\r\n              onChange={(e) => handleEventSelection(e.target.value)}\r\n            >\r\n              <option value=\"\">Select an event</option>\r\n              {events.map(event => (\r\n                <option key={event.id} value={event.name}>{event.name}</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          {selectedEvent ? (\r\n            <>\r\n              <FormGroup>\r\n                <Label>Category Name</Label>\r\n                <Input \r\n                  type=\"text\" \r\n                  value={newCategory.name}\r\n                  onChange={(e) => setNewCategory({...newCategory, name: e.target.value})}\r\n                  placeholder=\"Enter category name\"\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>Display Order</Label>\r\n                <Input \r\n                  type=\"number\" \r\n                  value={newCategory.order}\r\n                  onChange={(e) => setNewCategory({...newCategory, order: parseInt(e.target.value) || 1})}\r\n                  placeholder=\"Enter display order\"\r\n                />\r\n              </FormGroup>\r\n              \r\n              <Button onClick={handleCreateCategory}>Add Category</Button>\r\n              \r\n              <h3>Existing Categories</h3>\r\n              <Table>\r\n                <thead>\r\n                  <tr>\r\n                    <Th>Name</Th>\r\n                    <Th>Order</Th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {categories.map(category => (\r\n                    <Tr key={category.id}>\r\n                      <Td>{category.name}</Td>\r\n                      <Td>{category.order}</Td>\r\n                    </Tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </>\r\n          ) : (\r\n            <p>Please select an event first to manage categories.</p>\r\n          )}\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'teams' && (\r\n        <FormContainer>\r\n          <FormTitle>Create New Team</FormTitle>\r\n          \r\n          <FormGroup>\r\n            <Label>Select Event First</Label>\r\n            <Select \r\n              value={selectedEvent}\r\n              onChange={(e) => handleEventSelection(e.target.value)}\r\n            >\r\n              <option value=\"\">Select an event</option>\r\n              {events.map(event => (\r\n                <option key={event.id} value={event.name}>{event.name}</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          {selectedEvent ? (\r\n            <>\r\n              <FormGroup>\r\n                <Label>Team Name</Label>\r\n                <Input \r\n                  type=\"text\" \r\n                  value={newTeam.name}\r\n                  onChange={(e) => setNewTeam({...newTeam, name: e.target.value})}\r\n                  placeholder=\"Enter team name\"\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>Team Color</Label>\r\n                <Input \r\n                  type=\"color\" \r\n                  value={newTeam.color}\r\n                  onChange={(e) => setNewTeam({...newTeam, color: e.target.value})}\r\n                />\r\n              </FormGroup>\r\n              \r\n              <Button onClick={handleCreateTeam}>Create Team</Button>\r\n              \r\n              {/* Event filter for teams */}\r\n              <div style={{ marginTop: '30px' }}>\r\n                <FormGroup>\r\n                  <Label>Filter Teams by Event</Label>\r\n                  <Select \r\n                    value={selectedEventForTeams}\r\n                    onChange={(e) => setSelectedEventForTeams(e.target.value)}\r\n                  >\r\n                    <option value=\"\">All Events</option>\r\n                    {events.map(event => (\r\n                      <option key={event.id} value={event.name}>{event.name}</option>\r\n                    ))}\r\n                  </Select>\r\n                </FormGroup>\r\n                \r\n                <h3>Existing Teams</h3>\r\n                <Table>\r\n                  <thead>\r\n                    <tr>\r\n                      <Th>Name</Th>\r\n                      <Th>Color</Th>\r\n                      {selectedEventForTeams && <Th>Participated in {selectedEventForTeams}</Th>}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {teams.map(team => {\r\n                      // Filter teams that participated in the selected event if any\r\n                      if (selectedEventForTeams) {\r\n                        const teamResults = results.filter(result => \r\n                          result.event === selectedEventForTeams &&\r\n                          result.participants.some(participant => {\r\n                            const student = students.find(s => \r\n                              s.chestNumber === participant.name || \r\n                              s.name === participant.name\r\n                            );\r\n                            return student && student.team === team.name;\r\n                          })\r\n                        );\r\n                        \r\n                        // If no results for this team in the selected event, skip\r\n                        if (teamResults.length === 0) return null;\r\n                      }\r\n                      \r\n                      return (\r\n                        <Tr key={team.id}>\r\n                          <Td>{team.name}</Td>\r\n                          <Td>\r\n                            <ColorPreview r={parseInt(team.color.slice(1, 3), 16)} \r\n                                         g={parseInt(team.color.slice(3, 5), 16)} \r\n                                         b={parseInt(team.color.slice(5, 7), 16)} />\r\n                            {team.color}\r\n                          </Td>\r\n                          {selectedEventForTeams && (\r\n                            <Td>\r\n                              Participated\r\n                            </Td>\r\n                          )}\r\n                        </Tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <p>Please select an event first to manage teams.</p>\r\n          )}\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'students' && (\r\n        <FormContainer>\r\n          <FormTitle>Register Student</FormTitle>\r\n          \r\n          <FormGroup>\r\n            <Label>Select Event First</Label>\r\n            <Select \r\n              value={selectedEvent}\r\n              onChange={(e) => handleEventSelection(e.target.value)}\r\n            >\r\n              <option value=\"\">Select an event</option>\r\n              {events.map(event => (\r\n                <option key={event.id} value={event.name}>{event.name}</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          {selectedEvent ? (\r\n            <>\r\n              <FormGroup>\r\n                <Label>Student Name</Label>\r\n                <Input \r\n                  type=\"text\" \r\n                  value={newStudent.name}\r\n                  onChange={(e) => setNewStudent({...newStudent, name: e.target.value})}\r\n                  placeholder=\"Enter student name\"\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>Chest Number</Label>\r\n                <Input \r\n                  type=\"text\" \r\n                  value={newStudent.chestNumber}\r\n                  onChange={(e) => setNewStudent({...newStudent, chestNumber: e.target.value})}\r\n                  placeholder=\"Enter chest number\"\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>Team</Label>\r\n                <Select \r\n                  value={newStudent.team}\r\n                  onChange={(e) => setNewStudent({...newStudent, team: e.target.value})}\r\n                >\r\n                  <option value=\"\">Select a team</option>\r\n                  {teams.map(team => (\r\n                    <option key={team.id} value={team.name}>{team.name}</option>\r\n                  ))}\r\n                </Select>\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>Category</Label>\r\n                <Select \r\n                  value={newStudent.category}\r\n                  onChange={(e) => setNewStudent({...newStudent, category: e.target.value})}\r\n                >\r\n                  <option value=\"\">Select a category</option>\r\n                  {categories.map(category => (\r\n                    <option key={category.id} value={category.name}>{category.name}</option>\r\n                  ))}\r\n                </Select>\r\n              </FormGroup>\r\n              \r\n              <Button onClick={handleCreateStudent}>Register Student</Button>\r\n              \r\n              {/* Event filter for students */}\r\n              <div style={{ marginTop: '30px' }}>\r\n                <FormGroup>\r\n                  <Label>Filter Students by Event</Label>\r\n                  <Select \r\n                    value={selectedEventForStudents}\r\n                    onChange={(e) => setSelectedEventForStudents(e.target.value)}\r\n                  >\r\n                    <option value=\"\">All Events</option>\r\n                    {events.map(event => (\r\n                      <option key={event.id} value={event.name}>{event.name}</option>\r\n                    ))}\r\n                  </Select>\r\n                </FormGroup>\r\n                \r\n                <h3>Registered Students</h3>\r\n                <Table>\r\n                  <thead>\r\n                    <tr>\r\n                      <Th>Name</Th>\r\n                      <Th>Chest Number</Th>\r\n                      <Th>Team</Th>\r\n                      <Th>Category</Th>\r\n                      {selectedEventForStudents && <Th>Participated in {selectedEventForStudents}</Th>}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {students.map(student => {\r\n                      // Filter students who participated in the selected event if any\r\n                      if (selectedEventForStudents) {\r\n                        const studentResults = results.filter(result => \r\n                          result.event === selectedEventForStudents &&\r\n                          result.participants.some(participant => \r\n                            participant.name === student.chestNumber || \r\n                            participant.name === student.name\r\n                          )\r\n                        );\r\n                        \r\n                        // If no results for this student in the selected event, skip\r\n                        if (studentResults.length === 0) return null;\r\n                      }\r\n                      \r\n                      return (\r\n                        <Tr key={student.id}>\r\n                          <Td>{student.name}</Td>\r\n                          <Td>{student.chestNumber}</Td>\r\n                          <Td>{student.team}</Td>\r\n                          <Td>{student.category}</Td>\r\n                          {selectedEventForStudents && (\r\n                            <Td>\r\n                              Participated\r\n                            </Td>\r\n                          )}\r\n                        </Tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <p>Please select an event first to manage students.</p>\r\n          )}\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'programs' && (\r\n        <FormContainer>\r\n          <FormTitle>Define Program</FormTitle>\r\n          \r\n          <FormGroup>\r\n            <Label>Select Event First</Label>\r\n            <Select \r\n              value={selectedEvent}\r\n              onChange={(e) => handleEventSelection(e.target.value)}\r\n            >\r\n              <option value=\"\">Select an event</option>\r\n              {events.map(event => (\r\n                <option key={event.id} value={event.name}>{event.name}</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          {selectedEvent ? (\r\n            <>\r\n              <FormGroup>\r\n                <Label>Program Name</Label>\r\n                <Input \r\n                  type=\"text\" \r\n                  value={newProgram.name}\r\n                  onChange={(e) => setNewProgram({...newProgram, name: e.target.value})}\r\n                  placeholder=\"Enter program name\"\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>Program Type</Label>\r\n                <Select \r\n                  value={newProgram.type}\r\n                  onChange={(e) => setNewProgram({...newProgram, type: e.target.value})}\r\n                >\r\n                  <option value=\"Individual\">Individual</option>\r\n                  <option value=\"Group\">Group</option>\r\n                  <option value=\"General\">General</option>\r\n                </Select>\r\n              </FormGroup>\r\n              \r\n              <Button onClick={handleCreateProgram}>Add Program</Button>\r\n              \r\n              {/* Event filter for programs */}\r\n              <div style={{ marginTop: '30px' }}>\r\n                <FormGroup>\r\n                  <Label>Filter Programs by Event</Label>\r\n                  <Select \r\n                    value={selectedEventForPrograms}\r\n                    onChange={(e) => setSelectedEventForPrograms(e.target.value)}\r\n                  >\r\n                    <option value=\"\">All Events</option>\r\n                    {events.map(event => (\r\n                      <option key={event.id} value={event.name}>{event.name}</option>\r\n                    ))}\r\n                  </Select>\r\n                </FormGroup>\r\n                \r\n                <h3>Existing Programs</h3>\r\n                <Table>\r\n                  <thead>\r\n                    <tr>\r\n                      <Th>Name</Th>\r\n                      <Th>Type</Th>\r\n                      {selectedEventForPrograms && <Th>Used in {selectedEventForPrograms}</Th>}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {programs.map(program => {\r\n                      // Filter programs used in the selected event if any\r\n                      if (selectedEventForPrograms) {\r\n                        const programResults = results.filter(result => \r\n                          result.event === selectedEventForPrograms &&\r\n                          result.program === program.name\r\n                        );\r\n                        \r\n                        // If no results for this program in the selected event, skip\r\n                        if (programResults.length === 0) return null;\r\n                      }\r\n                      \r\n                      return (\r\n                        <Tr key={program.id}>\r\n                          <Td>{program.name}</Td>\r\n                          <Td>{program.type}</Td>\r\n                          {selectedEventForPrograms && (\r\n                            <Td>\r\n                              Used\r\n                            </Td>\r\n                          )}\r\n                        </Tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <p>Please select an event first to manage programs.</p>\r\n          )}\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'results' && (\r\n        <FormContainer>\r\n          <FormTitle>Enter Results</FormTitle>\r\n          \r\n          <div style={{ \r\n            background: 'rgba(255,255,255,0.1)', \r\n            padding: '15px', \r\n            borderRadius: '10px', \r\n            marginBottom: '20px' \r\n          }}>\r\n            <p style={{ margin: '0 0 10px 0', color: 'gold' }}>\r\n              <strong>Tip:</strong> To use grade-specific points, include the grade in participant names\r\n            </p>\r\n            <p style={{ margin: '0 0 5px 0', fontSize: '0.9rem' }}>\r\n              Examples: \"John Doe (A)\" or \"SJ001 (B)\"\r\n            </p>\r\n            <p style={{ margin: 0, fontSize: '0.9rem', fontStyle: 'italic' }}>\r\n              Configure grade points in the \"Points\" tab\r\n            </p>\r\n          </div>\r\n          \r\n          <FormGroup>\r\n            <Label>Event</Label>\r\n            <Select \r\n              value={newResult.event}\r\n              onChange={(e) => setNewResult({...newResult, event: e.target.value})}\r\n            >\r\n              <option value=\"\">Select an event</option>\r\n              {events.map(event => (\r\n                <option key={event.id} value={event.name}>{event.name}</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label>Program</Label>\r\n            <Select \r\n              value={newResult.program}\r\n              onChange={(e) => setNewResult({...newResult, program: e.target.value})}\r\n            >\r\n              <option value=\"\">Select a program</option>\r\n              {programs.map(program => (\r\n                <option key={program.id} value={program.name}>{program.name}</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label>Category</Label>\r\n            <Select \r\n              value={newResult.category}\r\n              onChange={(e) => setNewResult({...newResult, category: e.target.value})}\r\n            >\r\n              <option value=\"\">Select a category</option>\r\n              {categories.map(category => (\r\n                <option key={category.id} value={category.name}>{category.name}</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          <h3>Participants & Positions</h3>\r\n          {newResult.participants.map((participant, index) => (\r\n            <FormGroup key={index}>\r\n              <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\r\n                <Input \r\n                  type=\"text\" \r\n                  placeholder=\"Participant name or chest number\"\r\n                  value={participant.name}\r\n                  onChange={(e) => handleParticipantChange(index, 'name', e.target.value)}\r\n                  style={{ flex: 1 }}\r\n                />\r\n                <Input \r\n                  type=\"text\" \r\n                  placeholder=\"Position (1st, 2nd, 3rd or Gold, Silver, Bronze)\"\r\n                  value={participant.position}\r\n                  onChange={(e) => handleParticipantChange(index, 'position', e.target.value)}\r\n                  style={{ flex: 1 }}\r\n                />\r\n                {newResult.participants.length > 1 && (\r\n                  <Button onClick={() => handleRemoveParticipant(index)} style={{ backgroundColor: '#ff4757' }}>\r\n                    Remove\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </FormGroup>\r\n          ))}\r\n          \r\n          <Button onClick={handleAddParticipant}>Add Participant</Button>\r\n          <Button onClick={handleSaveResult}>Save Result</Button>\r\n          \r\n          {/* Event filter for results */}\r\n          <div style={{ marginTop: '30px' }}>\r\n            <FormGroup>\r\n              <Label>Filter Results by Event</Label>\r\n              <Select \r\n                value={selectedEventForResults}\r\n                onChange={(e) => setSelectedEventForResults(e.target.value)}\r\n              >\r\n                <option value=\"\">All Events</option>\r\n                {events.map(event => (\r\n                  <option key={event.id} value={event.name}>{event.name}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            \r\n            <h3>Existing Results</h3>\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <Th>Event</Th>\r\n                  <Th>Program</Th>\r\n                  <Th>Category</Th>\r\n                  <Th>Participants</Th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {results\r\n                  .filter(result => !selectedEventForResults || result.event === selectedEventForResults)\r\n                  .map(result => (\r\n                    <Tr key={result.id}>\r\n                      <Td>{result.event}</Td>\r\n                      <Td>{result.program}</Td>\r\n                      <Td>{result.category}</Td>\r\n                      <Td>\r\n                        {result.participants.map((p, i) => (\r\n                          <div key={i}>\r\n                            {p.name} - {p.position} ({p.points} points)\r\n                          </div>\r\n                        ))}\r\n                      </Td>\r\n                    </Tr>\r\n                  ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'managers' && (\r\n        <FormContainer>\r\n          <FormTitle>{editingTeamManager ? 'Edit Team Manager' : 'Create Team Manager'}</FormTitle>\r\n          \r\n          <FormGroup>\r\n            <Label>Select Event First</Label>\r\n            <Select \r\n              value={selectedEvent}\r\n              onChange={(e) => handleEventSelection(e.target.value)}\r\n            >\r\n              <option value=\"\">Select an event</option>\r\n              {events.map(event => (\r\n                <option key={event.id} value={event.name}>{event.name}</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          {selectedEvent ? (\r\n            <>\r\n              <FormGroup>\r\n                <Label>Username</Label>\r\n                <Input \r\n                  type=\"text\" \r\n                  value={newTeamManager.username}\r\n                  onChange={(e) => setNewTeamManager({...newTeamManager, username: e.target.value})}\r\n                  placeholder=\"Enter username\"\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>Password</Label>\r\n                <Input \r\n                  type=\"password\" \r\n                  value={newTeamManager.password}\r\n                  onChange={(e) => setNewTeamManager({...newTeamManager, password: e.target.value})}\r\n                  placeholder=\"Enter password\"\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>Assigned Team</Label>\r\n                <Select \r\n                  value={newTeamManager.team}\r\n                  onChange={(e) => setNewTeamManager({...newTeamManager, team: e.target.value})}\r\n                >\r\n                  <option value=\"\">Select a team</option>\r\n                  {teams.map(team => (\r\n                    <option key={team.id} value={team.name}>{team.name}</option>\r\n                  ))}\r\n                </Select>\r\n              </FormGroup>\r\n              \r\n              <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap' }}>\r\n                {editingTeamManager ? (\r\n                  <>\r\n                    <Button onClick={handleUpdateTeamManager}>Update Team Manager</Button>\r\n                    <Button \r\n                      onClick={handleCancelEdit}\r\n                      style={{ background: '#ff4757' }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <Button onClick={handleCreateTeamManager}>Create Team Manager</Button>\r\n                )}\r\n              </div>\r\n              \r\n              <h3 style={{ marginTop: '30px' }}>Existing Team Managers</h3>\r\n              {teamManagers.length === 0 ? (\r\n                <p>No team managers configured yet.</p>\r\n              ) : (\r\n                <Table>\r\n                  <thead>\r\n                    <tr>\r\n                      <Th>Username</Th>\r\n                      <Th>Assigned Team</Th>\r\n                      <Th>Actions</Th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {teamManagers.map(manager => (\r\n                      <Tr key={manager.id}>\r\n                        <Td>{manager.username}</Td>\r\n                        <Td>{manager.team}</Td>\r\n                        <Td>\r\n                          <Button \r\n                            onClick={() => handleEditTeamManager(manager)}\r\n                            style={{ padding: '5px 10px', marginRight: '5px' }}\r\n                          >\r\n                            Edit\r\n                          </Button>\r\n                          <Button \r\n                            onClick={() => handleDeleteTeamManager(manager.id)}\r\n                            style={{ padding: '5px 10px', background: '#ff4757' }}\r\n                          >\r\n                            Delete\r\n                          </Button>\r\n                        </Td>\r\n                      </Tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <p>Please select an event first to manage team managers.</p>\r\n          )}\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'grades' && (\r\n        <FormContainer>\r\n          <FormTitle>Manage Grades</FormTitle>\r\n          \r\n          <div style={{ \r\n            background: 'rgba(255,255,255,0.1)', \r\n            padding: '15px', \r\n            borderRadius: '10px', \r\n            marginBottom: '20px' \r\n          }}>\r\n            <h3 style={{ marginTop: 0, color: 'gold' }}>Add New Grade with Points</h3>\r\n            <FormGroup>\r\n              <Label>Grade Letter</Label>\r\n              <Input \r\n                type=\"text\" \r\n                value={newGrade}\r\n                onChange={(e) => setNewGrade(e.target.value.toUpperCase())}\r\n                placeholder=\"Enter grade (e.g., A, B, C)\"\r\n                maxLength=\"1\"\r\n                style={{ width: '80px' }}\r\n              />\r\n            </FormGroup>\r\n            \r\n            <FormGroup>\r\n              <Label>Default Points for this Grade</Label>\r\n              <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap' }}>\r\n                <div>\r\n                  <Label>1st (Gold)</Label>\r\n                  <Input \r\n                    type=\"number\" \r\n                    value={newGradePoints.gold}\r\n                    onChange={(e) => setNewGradePoints({...newGradePoints, gold: parseInt(e.target.value) || 0})}\r\n                    style={{ width: '80px' }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label>2nd (Silver)</Label>\r\n                  <Input \r\n                    type=\"number\" \r\n                    value={newGradePoints.silver}\r\n                    onChange={(e) => setNewGradePoints({...newGradePoints, silver: parseInt(e.target.value) || 0})}\r\n                    style={{ width: '80px' }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label>3rd (Bronze)</Label>\r\n                  <Input \r\n                    type=\"number\" \r\n                    value={newGradePoints.bronze}\r\n                    onChange={(e) => setNewGradePoints({...newGradePoints, bronze: parseInt(e.target.value) || 0})}\r\n                    style={{ width: '80px' }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </FormGroup>\r\n            \r\n            <Button \r\n              onClick={() => {\r\n                if (newGrade && !availableGrades.includes(newGrade)) {\r\n                  // Add the new grade to available grades\r\n                  setAvailableGrades([...availableGrades, newGrade]);\r\n                  \r\n                  // Ask user if they want to pre-configure points for all categories\r\n                  const preConfigure = window.confirm(\r\n                    `Grade ${newGrade} added successfully!\\n\\n` +\r\n                    `Do you want to pre-configure default points (${newGradePoints.gold}/${newGradePoints.silver}/${newGradePoints.bronze}) ` +\r\n                    `for this grade across all categories?\\n\\n` +\r\n                    `You can always customize these later in the Points tab.`\r\n                  );\r\n                  \r\n                  if (preConfigure) {\r\n                    preConfigureGradePoints(newGrade, newGradePoints);\r\n                    alert(`Points pre-configured for grade ${newGrade} across all categories!`);\r\n                  }\r\n                  \r\n                  setNewGrade('');\r\n                  setNewGradePoints({ gold: 10, silver: 7, bronze: 5 });\r\n                } else if (availableGrades.includes(newGrade)) {\r\n                  alert(`Grade ${newGrade} already exists!`);\r\n                } else {\r\n                  alert('Please enter a valid grade letter.');\r\n                }\r\n              }}\r\n            >\r\n              Add Grade\r\n            </Button>\r\n          </div>\r\n          \r\n          <h3>Available Grades</h3>\r\n          <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap', marginBottom: '20px' }}>\r\n            {availableGrades.map((grade, index) => (\r\n              <div \r\n                key={index} \r\n                style={{ \r\n                  background: 'rgba(255,255,255,0.2)', \r\n                  padding: '10px 15px', \r\n                  borderRadius: '20px',\r\n                  display: 'flex',\r\n                  alignItems: 'center'\r\n                }}\r\n              >\r\n                <span>{grade}</span>\r\n                <button \r\n                  onClick={() => {\r\n                    if (availableGrades.length > 1) {\r\n                      setAvailableGrades(availableGrades.filter(g => g !== grade));\r\n                    } else {\r\n                      alert('You must have at least one grade!');\r\n                    }\r\n                  }}\r\n                  style={{ \r\n                    background: 'transparent', \r\n                    border: 'none', \r\n                    color: 'red', \r\n                    cursor: 'pointer',\r\n                    marginLeft: '10px',\r\n                    fontWeight: 'bold'\r\n                  }}\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          \r\n          <div>\r\n            <h3>Grade Point Configuration Example</h3>\r\n            <div style={{ \r\n              background: 'rgba(255,255,255,0.1)', \r\n              padding: '20px', \r\n              borderRadius: '10px', \r\n              marginBottom: '20px' \r\n            }}>\r\n              <p style={{ color: 'gold', fontWeight: 'bold' }}>Example: Configure A Grade Points</p>\r\n              <ol style={{ paddingLeft: '20px', color: 'rgba(255,255,255,0.9)' }}>\r\n                <li>Go to the \"Points\" tab</li>\r\n                <li>Select a category (e.g., \"Senior\")</li>\r\n                <li>From the \"Select Grade\" dropdown, choose \"A Grade\"</li>\r\n                <li>Set points for each position:\r\n                  <ul style={{ paddingLeft: '20px', marginTop: '5px' }}>\r\n                    <li>1st Position (Gold): 10 points</li>\r\n                    <li>2nd Position (Silver): 7 points</li>\r\n                    <li>3rd Position (Bronze): 5 points</li>\r\n                  </ul>\r\n                </li>\r\n                <li>Click \"Save Grade Points\"</li>\r\n              </ol>\r\n              <p style={{ fontStyle: 'italic', color: 'rgba(255,255,255,0.7)' }}>\r\n                Participants with names like \"John Doe (A)\" will now receive these points instead of the default values.\r\n              </p>\r\n            </div>\r\n            \r\n            <p style={{ color: 'rgba(255,255,255,0.7)' }}>\r\n              Note: Grades are used to differentiate point values for participants in the same category. \r\n              For example, you can have different point values for A grade and B grade participants in the same category.\r\n              To use grade-specific points, include the grade in parentheses at the end of participant names (e.g., \"Participant Name (A)\").\r\n            </p>\r\n          </div>\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'batch-points' && (\r\n        <FormContainer>\r\n          <FormTitle>Batch Grade Points Configuration</FormTitle>\r\n          <p style={{ color: 'rgba(255,255,255,0.7)' }}>\r\n            Configure points for a grade across all categories at once\r\n          </p>\r\n          \r\n          <FormGroup>\r\n            <Label>Select Grade</Label>\r\n            <Select \r\n              value={selectedGradeForPoints}\r\n              onChange={(e) => {\r\n                setSelectedGradeForPoints(e.target.value);\r\n                // Load existing points if they exist for any category\r\n                const existingConfig = Object.keys(gradePoints).find(key => \r\n                  key.endsWith(`-${e.target.value}`)\r\n                );\r\n                if (existingConfig && gradePoints[existingConfig]) {\r\n                  setPoints(gradePoints[existingConfig]);\r\n                }\r\n              }}\r\n            >\r\n              <option value=\"\">Select a grade</option>\r\n              {availableGrades.map((grade, index) => (\r\n                <option key={index} value={grade}>{grade} Grade</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          {selectedGradeForPoints && (\r\n            <div style={{ backgroundColor: 'rgba(255,255,255,0.1)', padding: '20px', borderRadius: '10px', marginBottom: '20px' }}>\r\n              <h3>Set Points for {selectedGradeForPoints} Grade (All Categories)</h3>\r\n              \r\n              <FormGroup>\r\n                <Label>1st Position (Gold) Points</Label>\r\n                <Input \r\n                  type=\"number\" \r\n                  value={points.gold}\r\n                  onChange={(e) => setPoints({...points, gold: parseInt(e.target.value) || 0})}\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>2nd Position (Silver) Points</Label>\r\n                <Input \r\n                  type=\"number\" \r\n                  value={points.silver}\r\n                  onChange={(e) => setPoints({...points, silver: parseInt(e.target.value) || 0})}\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>3rd Position (Bronze) Points</Label>\r\n                <Input \r\n                  type=\"number\" \r\n                  value={points.bronze}\r\n                  onChange={(e) => setPoints({...points, bronze: parseInt(e.target.value) || 0})}\r\n                />\r\n              </FormGroup>\r\n              \r\n              <Button \r\n                onClick={() => {\r\n                  if (!selectedGradeForPoints) return;\r\n                  \r\n                  const updatedGradePoints = { ...gradePoints };\r\n                  let updatedCount = 0;\r\n                  \r\n                  // Update points for this grade across all categories\r\n                  categories.forEach(category => {\r\n                    const key = `${category.name}-${selectedGradeForPoints}`;\r\n                    updatedGradePoints[key] = { ...points };\r\n                    updatedCount++;\r\n                  });\r\n                  \r\n                  setGradePoints(updatedGradePoints);\r\n                  alert(`Points updated for ${updatedCount} categories with ${selectedGradeForPoints} grade`);\r\n                }}\r\n              >\r\n                Apply to All Categories\r\n              </Button>\r\n              \r\n              <div style={{ marginTop: '20px' }}>\r\n                <h4>Current Configurations</h4>\r\n                <Table>\r\n                  <thead>\r\n                    <tr>\r\n                      <Th>Category</Th>\r\n                      <Th>Grade</Th>\r\n                      <Th>1st (Gold)</Th>\r\n                      <Th>2nd (Silver)</Th>\r\n                      <Th>3rd (Bronze)</Th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {categories.map((category, index) => {\r\n                      const key = `${category.name}-${selectedGradeForPoints}`;\r\n                      const config = gradePoints[key] || points;\r\n                      return (\r\n                        <Tr key={index}>\r\n                          <Td>{category.name}</Td>\r\n                          <Td>{selectedGradeForPoints}</Td>\r\n                          <Td>{config.gold}</Td>\r\n                          <Td>{config.silver}</Td>\r\n                          <Td>{config.bronze}</Td>\r\n                        </Tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'points' && (\r\n        <FormContainer>\r\n          <FormTitle>Configure Points</FormTitle>\r\n          \r\n          <div style={{ \r\n            background: 'rgba(255,255,255,0.1)', \r\n            padding: '15px', \r\n            borderRadius: '10px', \r\n            marginBottom: '20px' \r\n          }}>\r\n            <p style={{ margin: '0 0 10px 0', color: 'gold' }}>\r\n              <strong>Quick Setup Example:</strong> To configure A grade with 10/7/5 points:\r\n            </p>\r\n            <ol style={{ margin: '0 0 10px 20px', fontSize: '0.9rem' }}>\r\n              <li>Select a category below</li>\r\n              <li>Choose \"A Grade\" from the dropdown</li>\r\n              <li>Set Gold=10, Silver=7, Bronze=5</li>\r\n              <li>Click \"Save Grade Points\"</li>\r\n            </ol>\r\n            <p style={{ margin: 0, fontSize: '0.9rem', fontStyle: 'italic' }}>\r\n              Participants named \"John Doe (A)\" will get these points\r\n            </p>\r\n          </div>\r\n          \r\n          <FormGroup>\r\n            <Label>Configure Points By Category</Label>\r\n            <Select \r\n              value={selectedCategoryForPoints}\r\n              onChange={(e) => handleCategoryChangeForPoints(e.target.value)}\r\n            >\r\n              <option value=\"\">Select a category</option>\r\n              {categories.map(category => (\r\n                <option key={category.id} value={category.name}>{category.name}</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          {selectedCategoryForPoints && (\r\n            <div style={{ backgroundColor: 'rgba(255,255,255,0.1)', padding: '20px', borderRadius: '10px', marginBottom: '20px' }}>\r\n              <h3>Points for {selectedCategoryForPoints}</h3>\r\n              \r\n              <FormGroup>\r\n                <Label>Select Grade (Optional)</Label>\r\n                <Select \r\n                  value={selectedGradeForPoints}\r\n                  onChange={(e) => handleGradeChangeForPoints(e.target.value)}\r\n                >\r\n                  <option value=\"\">No grade (category only)</option>\r\n                  {availableGrades.map((grade, index) => (\r\n                    <option key={index} value={grade}>{grade} Grade</option>\r\n                  ))}\r\n                </Select>\r\n                <Button \r\n                  onClick={handlePrepopulateAGrade}\r\n                  style={{ \r\n                    marginLeft: '10px', \r\n                    background: 'rgba(255,215,0,0.2)',\r\n                    color: 'gold'\r\n                  }}\r\n                >\r\n                  Example: A Grade (10/7/5)\r\n                </Button>\r\n              </FormGroup>\r\n              \r\n              {selectedGradeForPoints && (\r\n                <h4>Points for {selectedCategoryForPoints} - {selectedGradeForPoints} Grade</h4>\r\n              )}\r\n              \r\n              <FormGroup>\r\n                <Label>1st Position (Gold) Points</Label>\r\n                <Input \r\n                  type=\"number\" \r\n                  value={points.gold}\r\n                  onChange={(e) => setPoints({...points, gold: parseInt(e.target.value) || 0})}\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>2nd Position (Silver) Points</Label>\r\n                <Input \r\n                  type=\"number\" \r\n                  value={points.silver}\r\n                  onChange={(e) => setPoints({...points, silver: parseInt(e.target.value) || 0})}\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>3rd Position (Bronze) Points</Label>\r\n                <Input \r\n                  type=\"number\" \r\n                  value={points.bronze}\r\n                  onChange={(e) => setPoints({...points, bronze: parseInt(e.target.value) || 0})}\r\n                />\r\n              </FormGroup>\r\n              \r\n              {selectedGradeForPoints ? (\r\n                <Button onClick={handleSaveGradePoints}>Save Grade Points</Button>\r\n              ) : (\r\n                <Button onClick={handleSaveCategoryPoints}>Save Category Points</Button>\r\n              )}\r\n              \r\n              {!selectedGradeForPoints && categoryPoints[selectedCategoryForPoints] && (\r\n                <div style={{ marginTop: '10px', color: 'gold' }}>\r\n                  <strong>Current category configuration saved</strong>\r\n                </div>\r\n              )}\r\n              \r\n              {selectedGradeForPoints && gradePoints[`${selectedCategoryForPoints}-${selectedGradeForPoints}`] && (\r\n                <div style={{ marginTop: '10px', color: 'gold' }}>\r\n                  <strong>Current grade configuration saved</strong>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          \r\n          <FormTitle>Default Points Configuration</FormTitle>\r\n          <p>These points will be used when no category-specific or grade-specific points are configured.</p>\r\n          \r\n          <FormGroup>\r\n            <Label>1st Position (Gold) Points</Label>\r\n            <Input \r\n              type=\"number\" \r\n              value={points.gold}\r\n              onChange={(e) => setPoints({...points, gold: parseInt(e.target.value) || 0})}\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label>2nd Position (Silver) Points</Label>\r\n            <Input \r\n              type=\"number\" \r\n              value={points.silver}\r\n              onChange={(e) => setPoints({...points, silver: parseInt(e.target.value) || 0})}\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label>3rd Position (Bronze) Points</Label>\r\n            <Input \r\n              type=\"number\" \r\n              value={points.bronze}\r\n              onChange={(e) => setPoints({...points, bronze: parseInt(e.target.value) || 0})}\r\n            />\r\n          </FormGroup>\r\n          \r\n          <Button onClick={() => saveToLocalStorage('points', points)}>Save Default Points Configuration</Button>\r\n          <Button onClick={handleChangePassword}>Change Admin Password</Button>\r\n          \r\n          {Object.keys(categoryPoints).length > 0 && (\r\n            <div style={{ marginTop: '30px' }}>\r\n              <h3>Category-Specific Points Configuration</h3>\r\n              <Table>\r\n                <thead>\r\n                  <tr>\r\n                    <Th>Category</Th>\r\n                    <Th>1st (Gold)</Th>\r\n                    <Th>2nd (Silver)</Th>\r\n                    <Th>3rd (Bronze)</Th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {Object.entries(categoryPoints).map(([category, pointsConfig]) => (\r\n                    <Tr key={category}>\r\n                      <Td>{category}</Td>\r\n                      <Td>{pointsConfig.gold}</Td>\r\n                      <Td>{pointsConfig.silver}</Td>\r\n                      <Td>{pointsConfig.bronze}</Td>\r\n                    </Tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          )}\r\n          \r\n          {Object.keys(gradePoints).length > 0 && (\r\n            <div style={{ marginTop: '30px' }}>\r\n              <h3>Grade-Specific Points Configuration</h3>\r\n              <Table>\r\n                <thead>\r\n                  <tr>\r\n                    <Th>Category</Th>\r\n                    <Th>Grade</Th>\r\n                    <Th>1st (Gold)</Th>\r\n                    <Th>2nd (Silver)</Th>\r\n                    <Th>3rd (Bronze)</Th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {Object.entries(gradePoints).map(([key, pointsConfig]) => {\r\n                    const [category, grade] = key.split('-');\r\n                    return (\r\n                      <Tr key={key}>\r\n                        <Td>{category}</Td>\r\n                        <Td>{grade}</Td>\r\n                        <Td>{pointsConfig.gold}</Td>\r\n                        <Td>{pointsConfig.silver}</Td>\r\n                        <Td>{pointsConfig.bronze}</Td>\r\n                      </Tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          )}\r\n        </FormContainer>\r\n      )}\r\n    </DashboardContainer>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}