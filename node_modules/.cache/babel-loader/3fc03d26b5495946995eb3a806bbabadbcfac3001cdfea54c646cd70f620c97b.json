{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SMIC_STUDIO\\\\Desktop\\\\MEHFIL 25 APP\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { loadFromLocalStorage, saveToLocalStorage, calculateTeamStandings } from '../utils/dataStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardContainer = styled.div`\n  padding: 20px;\n  color: white;\n  min-height: 100vh;\n`;\n_c = DashboardContainer;\nconst Header = styled.h1`\n  text-align: center;\n  font-size: 2rem;\n  margin-bottom: 30px;\n  color: gold;\n`;\n_c2 = Header;\nconst TabContainer = styled.div`\n  display: flex;\n  border-bottom: 2px solid rgba(255,255,255,0.2);\n  margin-bottom: 30px;\n  flex-wrap: wrap;\n`;\n_c3 = TabContainer;\nconst Tab = styled.button`\n  padding: 15px 30px;\n  background: ${props => props.active ? 'rgba(255,255,255,0.2)' : 'transparent'};\n  color: ${props => props.active ? 'gold' : 'white'};\n  border: none;\n  cursor: pointer;\n  font-size: 1.1rem;\n  font-weight: bold;\n\n  &:hover {\n    background: rgba(255,255,255,0.1);\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 15px;\n    font-size: 0.9rem;\n  }\n`;\n_c4 = Tab;\nconst FormContainer = styled.div`\n  background: rgba(255,255,255,0.1);\n  border-radius: 15px;\n  padding: 30px;\n  backdrop-filter: blur(10px);\n  margin-bottom: 30px;\n`;\n_c5 = FormContainer;\nconst FormTitle = styled.h2`\n  margin-top: 0;\n  color: gold;\n  border-bottom: 1px solid rgba(255,255,255,0.2);\n  padding-bottom: 10px;\n`;\n_c6 = FormTitle;\nconst FormGroup = styled.div`\n  margin-bottom: 20px;\n`;\n_c7 = FormGroup;\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  font-weight: bold;\n`;\n_c8 = Label;\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px;\n  border-radius: 8px;\n  border: none;\n  background: rgba(255,255,255,0.1);\n  color: white;\n  font-size: 1rem;\n\n  &:focus {\n    outline: 2px solid gold;\n  }\n`;\n_c9 = Input;\nconst Select = styled.select`\n  width: 100%;\n  padding: 12px;\n  border-radius: 8px;\n  border: none;\n  background: rgba(255,255,255,0.1);\n  color: white;\n  font-size: 1rem;\n\n  &:focus {\n    outline: 2px solid gold;\n  }\n`;\n_c0 = Select;\nconst Button = styled.button`\n  padding: 12px 25px;\n  background: gold;\n  color: #333;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-weight: bold;\n  font-size: 1rem;\n  transition: all 0.3s ease;\n  margin-right: 10px;\n  margin-bottom: 10px;\n\n  &:hover {\n    background: #ffd700;\n    transform: translateY(-2px);\n  }\n`;\n_c1 = Button;\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  background: rgba(255,255,255,0.1);\n  border-radius: 10px;\n  overflow: hidden;\n`;\n_c10 = Table;\nconst Th = styled.th`\n  background: rgba(0,0,0,0.2);\n  padding: 15px;\n  text-align: left;\n`;\n_c11 = Th;\nconst Td = styled.td`\n  padding: 15px;\n  border-bottom: 1px solid rgba(255,255,255,0.1);\n`;\n_c12 = Td;\nconst Tr = styled.tr`\n  &:hover {\n    background: rgba(255,255,255,0.05);\n  }\n`;\n_c13 = Tr;\nconst ColorPreview = styled.div`\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background: ${props => `rgb(${props.r}, ${props.g}, ${props.b})`};\n  display: inline-block;\n  margin-right: 10px;\n`;\n_c14 = ColorPreview;\nconst RGBInputContainer = styled.div`\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n`;\n_c15 = RGBInputContainer;\nconst RGBInput = styled.input`\n  width: 80px;\n  padding: 8px;\n  border-radius: 5px;\n  border: none;\n  background: rgba(255,255,255,0.1);\n  color: white;\n  text-align: center;\n`;\n_c16 = RGBInput;\nconst AdminDashboard = () => {\n  _s();\n  var _newTeam$teamLeader, _newTeam$teamLeader2, _newTeam$assistantLea, _newTeam$assistantLea2, _newTeam$manager, _newTeam$manager2, _events$find, _categoryPoints$selec, _categoryPoints$selec2, _categoryPoints$selec3, _gradePoints$selected, _gradePoints$selected2, _gradePoints$selected3;\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState('events');\n  const [events, setEvents] = useState([]);\n  const [teams, setTeams] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [programs, setPrograms] = useState([]);\n  const [results, setResults] = useState([]);\n  const [points, setPoints] = useState({\n    gold: 3,\n    silver: 2,\n    bronze: 1\n  });\n  // Category-specific points configuration\n  const [categoryPoints, setCategoryPoints] = useState({});\n  // Grade-specific points configuration\n  const [gradePoints, setGradePoints] = useState({});\n  // Available grades configuration\n  const [availableGrades, setAvailableGrades] = useState(['A', 'B', 'C', 'D']);\n  // New grade points configuration\n  const [newGradePoints, setNewGradePoints] = useState({\n    gold: 3,\n    silver: 2,\n    bronze: 1\n  });\n  // Team managers configuration\n  const [teamManagers, setTeamManagers] = useState([]);\n  // Selected event for management\n  const [selectedEvent, setSelectedEvent] = useState('');\n\n  // Form states\n  const [newEvent, setNewEvent] = useState({\n    name: '',\n    categories: [],\n    color: {\n      r: 106,\n      g: 17,\n      b: 203\n    }\n  });\n  const [newTeam, setNewTeam] = useState({\n    name: '',\n    event: '',\n    color: '#FF5733',\n    teamLeader: {\n      name: '',\n      photo: null\n    },\n    assistantLeader: {\n      name: '',\n      photo: null\n    },\n    manager: {\n      name: '',\n      photo: null\n    }\n  });\n  const [newCategory, setNewCategory] = useState({\n    name: '',\n    order: 1\n  });\n  const [newStudent, setNewStudent] = useState({\n    name: '',\n    chestNumber: '',\n    event: '',\n    team: '',\n    category: '',\n    photo: null\n  });\n  const [newProgram, setNewProgram] = useState({\n    name: '',\n    event: '',\n    type: 'Individual'\n  });\n  const [newResult, setNewResult] = useState({\n    event: '',\n    program: '',\n    category: '',\n    participants: [{\n      name: '',\n      position: ''\n    }]\n  });\n  const [newTeamManager, setNewTeamManager] = useState({\n    username: '',\n    password: '',\n    event: '',\n    team: ''\n  });\n  const [editingTeamManager, setEditingTeamManager] = useState(null);\n  const [adminPassword, setAdminPassword] = useState('admin123');\n  const [selectedCategoryForPoints, setSelectedCategoryForPoints] = useState('');\n  const [selectedGradeForPoints, setSelectedGradeForPoints] = useState('');\n  const [selectedCategoriesForBatch, setSelectedCategoriesForBatch] = useState([]);\n  const [newGrade, setNewGrade] = '';\n\n  // Event filtering states\n  const [selectedEventForTeams, setSelectedEventForTeams] = useState('');\n  const [selectedEventForStudents, setSelectedEventForStudents] = useState('');\n  const [selectedEventForPrograms, setSelectedEventForPrograms] = useState('');\n  const [selectedEventForResults, setSelectedEventForResults] = useState('');\n\n  // Function to pre-configure points for a new grade across all categories\n  const preConfigureGradePoints = (grade, pointsConfig) => {\n    const updatedGradePoints = {\n      ...gradePoints\n    };\n\n    // For each selected category, create a default grade point configuration\n    selectedCategoriesForBatch.forEach(categoryName => {\n      const key = `${categoryName}-${grade}`;\n      updatedGradePoints[key] = {\n        ...pointsConfig\n      };\n    });\n    setGradePoints(updatedGradePoints);\n  };\n\n  // Function to reset all points to the new system\n  const resetAllPointsToNewSystem = () => {\n    if (window.confirm('Are you sure you want to reset all points to the new system? This will clear all existing custom point configurations.')) {\n      // Reset default points\n      const newDefaultPoints = {\n        gold: 3,\n        silver: 2,\n        bronze: 1\n      };\n      setPoints(newDefaultPoints);\n      saveToLocalStorage('points', newDefaultPoints);\n\n      // Clear category points\n      setCategoryPoints({});\n      saveToLocalStorage('categoryPoints', {});\n\n      // Clear grade points\n      setGradePoints({});\n      saveToLocalStorage('gradePoints', {});\n\n      // Reset new grade points to default\n      const newGradePointsConfig = {\n        gold: 3,\n        silver: 2,\n        bronze: 1\n      };\n      setNewGradePoints(newGradePointsConfig);\n      alert('All points have been reset to the new system.');\n    }\n  };\n\n  // Add a function to refresh data from localStorage\n  const refreshData = () => {\n    console.log('Refreshing data from localStorage');\n    try {\n      const savedEvents = loadFromLocalStorage('events', []);\n      const savedTeams = loadFromLocalStorage('teams', []);\n      const savedCategories = loadFromLocalStorage('categories', []);\n      const savedStudents = loadFromLocalStorage('students', []);\n      const savedPrograms = loadFromLocalStorage('programs', []);\n      const savedResults = loadFromLocalStorage('results', []);\n      const savedPoints = loadFromLocalStorage('points', {\n        gold: 3,\n        silver: 2,\n        bronze: 1\n      });\n      const savedCategoryPoints = loadFromLocalStorage('categoryPoints', {});\n      const savedGradePoints = loadFromLocalStorage('gradePoints', {});\n      const savedTeamManagers = loadFromLocalStorage('teamManagers', []);\n      setEvents(savedEvents || []);\n      setTeams(savedTeams || []);\n      setCategories(savedCategories || []);\n      setStudents(savedStudents || []);\n      setPrograms(savedPrograms || []);\n      setResults(savedResults || []);\n      setPoints(savedPoints);\n      setCategoryPoints(savedCategoryPoints || {});\n      setGradePoints(savedGradePoints || {});\n      setTeamManagers(savedTeamManagers || []);\n      console.log('Admin data refreshed');\n    } catch (error) {\n      console.error('Error refreshing data:', error);\n    }\n  };\n\n  // Load data from localStorage on component mount\n  useEffect(() => {\n    const savedEvents = loadFromLocalStorage('events', []);\n    const savedTeams = loadFromLocalStorage('teams', []);\n    const savedCategories = loadFromLocalStorage('categories', []);\n    const savedStudents = loadFromLocalStorage('students', []);\n    const savedPrograms = loadFromLocalStorage('programs', []);\n    const savedResults = loadFromLocalStorage('results', []);\n    const savedPoints = loadFromLocalStorage('points', {\n      gold: 3,\n      silver: 2,\n      bronze: 1\n    });\n    const savedCategoryPoints = loadFromLocalStorage('categoryPoints', {});\n    const savedGradePoints = loadFromLocalStorage('gradePoints', {});\n    const savedPassword = loadFromLocalStorage('adminPassword', 'admin123');\n    const savedAvailableGrades = loadFromLocalStorage('availableGrades', ['A', 'B', 'C', 'D']);\n    const savedTeamManagers = loadFromLocalStorage('teamManagers', []);\n\n    // Load event filtering states\n    const savedSelectedEventForTeams = loadFromLocalStorage('selectedEventForTeams', '');\n    const savedSelectedEventForStudents = loadFromLocalStorage('selectedEventForStudents', '');\n    const savedSelectedEventForPrograms = loadFromLocalStorage('selectedEventForPrograms', '');\n    const savedSelectedEventForResults = loadFromLocalStorage('selectedEventForResults', '');\n    console.log('Admin dashboard loaded data:', {\n      events: savedEvents,\n      teams: savedTeams,\n      categories: savedCategories,\n      students: savedStudents,\n      programs: savedPrograms,\n      results: savedResults,\n      points: savedPoints,\n      categoryPoints: savedCategoryPoints,\n      gradePoints: savedGradePoints,\n      teamManagers: savedTeamManagers\n    });\n    setEvents(savedEvents || []);\n    setTeams(savedTeams || []);\n    setCategories(savedCategories || []);\n    setStudents(savedStudents || []);\n    setPrograms(savedPrograms || []);\n    setResults(savedResults || []);\n    setPoints(savedPoints);\n    setCategoryPoints(savedCategoryPoints || {});\n    setGradePoints(savedGradePoints || {});\n    setAdminPassword(savedPassword);\n    setAvailableGrades(savedAvailableGrades || ['A', 'B', 'C', 'D']);\n    setTeamManagers(savedTeamManagers || []);\n\n    // Set event filtering states\n    setSelectedEventForTeams(savedSelectedEventForTeams || '');\n    setSelectedEventForStudents(savedSelectedEventForStudents || '');\n    setSelectedEventForPrograms(savedSelectedEventForPrograms || '');\n    setSelectedEventForResults(savedSelectedEventForResults || '');\n\n    // Initialize form select options\n    if (savedEvents && savedEvents.length > 0) {\n      setNewResult(prev => ({\n        ...prev,\n        event: savedEvents[0].name\n      }));\n      setSelectedEvent(savedEvents[0].name);\n    }\n    if (savedPrograms && savedPrograms.length > 0) {\n      setNewResult(prev => ({\n        ...prev,\n        program: savedPrograms[0].name\n      }));\n    }\n    if (savedCategories && savedCategories.length > 0) {\n      setNewResult(prev => ({\n        ...prev,\n        category: savedCategories[0].name\n      }));\n      setSelectedCategoryForPoints(savedCategories[0].name);\n      // Initialize selected categories for batch\n      setSelectedCategoriesForBatch(savedCategories.map(cat => cat.name));\n    }\n    if (savedTeams && savedTeams.length > 0) {\n      setNewTeamManager(prev => ({\n        ...prev,\n        team: savedTeams[0].name\n      }));\n    }\n  }, []);\n\n  // Initialize selected categories for batch when categories change\n  useEffect(() => {\n    if (categories.length > 0 && selectedCategoriesForBatch.length === 0) {\n      // Initially select all categories\n      setSelectedCategoriesForBatch(categories.map(cat => cat.name));\n    }\n  }, [categories, selectedCategoriesForBatch.length]);\n\n  // Handle logout\n  const handleLogout = () => {\n    localStorage.removeItem('isAdminLoggedIn');\n    navigate('/');\n  };\n\n  // Handle event selection\n  const handleEventSelection = eventName => {\n    setSelectedEvent(eventName);\n\n    // Update forms that depend on event selection\n    setNewTeam({\n      ...newTeam,\n      event: eventName\n    });\n    setNewCategory({\n      ...newCategory,\n      event: eventName\n    });\n    setNewStudent({\n      ...newStudent,\n      event: eventName\n    });\n    setNewProgram({\n      ...newProgram,\n      event: eventName\n    });\n    setNewResult({\n      ...newResult,\n      event: eventName\n    });\n    setNewTeamManager({\n      ...newTeamManager,\n      event: eventName\n    });\n  };\n\n  // Team manager CRUD operations\n  const handleCreateTeamManager = () => {\n    if (newTeamManager.username.trim() === '' || newTeamManager.password.trim() === '' || newTeamManager.team.trim() === '') {\n      alert('Please fill in all fields');\n      return;\n    }\n\n    // Check if username already exists\n    if (teamManagers.some(manager => manager.username === newTeamManager.username)) {\n      alert('Username already exists');\n      return;\n    }\n    const updatedTeamManagers = [...teamManagers, newTeamManager];\n    setTeamManagers(updatedTeamManagers);\n    saveToLocalStorage('teamManagers', updatedTeamManagers);\n    setNewTeamManager({\n      username: '',\n      password: '',\n      team: ''\n    });\n  };\n  const handleUpdateTeamManager = () => {\n    if (!editingTeamManager) return;\n    const updatedTeamManagers = teamManagers.map(manager => manager.username === editingTeamManager.username ? newTeamManager : manager);\n    setTeamManagers(updatedTeamManagers);\n    saveToLocalStorage('teamManagers', updatedTeamManagers);\n    setEditingTeamManager(null);\n    setNewTeamManager({\n      username: '',\n      password: '',\n      team: ''\n    });\n  };\n  const handleDeleteTeamManager = username => {\n    if (window.confirm('Are you sure you want to delete this team manager?')) {\n      const updatedTeamManagers = teamManagers.filter(manager => manager.username !== username);\n      setTeamManagers(updatedTeamManagers);\n      saveToLocalStorage('teamManagers', updatedTeamManagers);\n    }\n  };\n\n  // Handle photo upload for students\n  const handlePhotoUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = event => {\n        setNewStudent({\n          ...newStudent,\n          photo: event.target.result\n        });\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DashboardContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'events',\n        onClick: () => setActiveTab('events'),\n        children: \"Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'teams',\n        onClick: () => setActiveTab('teams'),\n        children: \"Teams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'students',\n        onClick: () => setActiveTab('students'),\n        children: \"Students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'programs',\n        onClick: () => setActiveTab('programs'),\n        children: \"Programs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'results',\n        onClick: () => setActiveTab('results'),\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'points',\n        onClick: () => setActiveTab('points'),\n        children: \"Points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'teamManagers',\n        onClick: () => setActiveTab('teamManagers'),\n        children: \"Team Managers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this), activeTab === 'events' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Add New Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: newEvent.name,\n            onChange: e => setNewEvent({\n              ...newEvent,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ColorPreview, {\n            r: newEvent.color.r,\n            g: newEvent.color.g,\n            b: newEvent.color.b\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RGBInputContainer, {\n            children: [/*#__PURE__*/_jsxDEV(RGBInput, {\n              type: \"number\",\n              value: newEvent.color.r,\n              onChange: e => setNewEvent({\n                ...newEvent,\n                color: {\n                  ...newEvent.color,\n                  r: parseInt(e.target.value)\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RGBInput, {\n              type: \"number\",\n              value: newEvent.color.g,\n              onChange: e => setNewEvent({\n                ...newEvent,\n                color: {\n                  ...newEvent.color,\n                  g: parseInt(e.target.value)\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RGBInput, {\n              type: \"number\",\n              value: newEvent.color.b,\n              onChange: e => setNewEvent({\n                ...newEvent,\n                color: {\n                  ...newEvent.color,\n                  b: parseInt(e.target.value)\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Event Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Add categories for this event:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '10px',\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              value: newCategory.name,\n              onChange: e => setNewCategory({\n                ...newCategory,\n                name: e.target.value\n              }),\n              placeholder: \"Enter category name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                if (newCategory.name.trim() !== '') {\n                  const updatedCategories = [...newEvent.categories, newCategory.name.trim()];\n                  setNewEvent({\n                    ...newEvent,\n                    categories: updatedCategories\n                  });\n                  setNewCategory({\n                    name: '',\n                    order: 1\n                  });\n                }\n              },\n              children: \"Add Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this), newEvent.categories.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Current Categories:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: '10px'\n              },\n              children: newEvent.categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  background: 'rgba(255,215,0,0.2)',\n                  padding: '5px 10px',\n                  borderRadius: '15px',\n                  display: 'flex',\n                  alignItems: 'center'\n                },\n                children: [category, /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    const updatedCategories = newEvent.categories.filter((_, i) => i !== index);\n                    setNewEvent({\n                      ...newEvent,\n                      categories: updatedCategories\n                    });\n                  },\n                  style: {\n                    background: 'none',\n                    border: 'none',\n                    color: 'white',\n                    marginLeft: '5px',\n                    cursor: 'pointer'\n                  },\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setEvents([...events, newEvent]);\n            saveToLocalStorage('events', [...events, newEvent]);\n            setNewEvent({\n              name: '',\n              categories: [],\n              color: {\n                r: 106,\n                g: 17,\n                b: 203\n              }\n            });\n          },\n          children: \"Add Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Categories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: events.map((event, index) => /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: event.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: event.categories.map((category, catIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  display: 'inline-block',\n                  background: 'rgba(255,215,0,0.2)',\n                  padding: '2px 8px',\n                  borderRadius: '10px',\n                  marginRight: '5px',\n                  marginBottom: '3px'\n                },\n                children: category\n              }, catIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: /*#__PURE__*/_jsxDEV(ColorPreview, {\n                r: event.color.r,\n                g: event.color.g,\n                b: event.color.b\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  setSelectedEvent(index);\n                  setNewEvent(event);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  const updatedEvents = events.filter((_, i) => i !== index);\n                  setEvents(updatedEvents);\n                  saveToLocalStorage('events', updatedEvents);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 9\n    }, this), activeTab === 'teams' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Add New Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newTeam.event,\n            onChange: e => setNewTeam({\n              ...newTeam,\n              event: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 17\n            }, this), events.map((event, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: event.name,\n              children: event.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: newTeam.name,\n            onChange: e => setNewTeam({\n              ...newTeam,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"color\",\n            value: newTeam.color,\n            onChange: e => setNewTeam({\n              ...newTeam,\n              color: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Team Leader Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: ((_newTeam$teamLeader = newTeam.teamLeader) === null || _newTeam$teamLeader === void 0 ? void 0 : _newTeam$teamLeader.name) || '',\n            onChange: e => setNewTeam({\n              ...newTeam,\n              teamLeader: {\n                ...newTeam.teamLeader,\n                name: e.target.value\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            children: \"Team Leader Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: e => {\n              const file = e.target.files[0];\n              if (file) {\n                const reader = new FileReader();\n                reader.onload = event => {\n                  setNewTeam({\n                    ...newTeam,\n                    teamLeader: {\n                      ...newTeam.teamLeader,\n                      photo: event.target.result\n                    }\n                  });\n                };\n                reader.readAsDataURL(file);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 15\n          }, this), ((_newTeam$teamLeader2 = newTeam.teamLeader) === null || _newTeam$teamLeader2 === void 0 ? void 0 : _newTeam$teamLeader2.photo) && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: newTeam.teamLeader.photo,\n              alt: \"Team Leader Preview\",\n              style: {\n                maxWidth: '100px',\n                maxHeight: '100px',\n                borderRadius: '50%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Assistant Leader Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: ((_newTeam$assistantLea = newTeam.assistantLeader) === null || _newTeam$assistantLea === void 0 ? void 0 : _newTeam$assistantLea.name) || '',\n            onChange: e => setNewTeam({\n              ...newTeam,\n              assistantLeader: {\n                ...newTeam.assistantLeader,\n                name: e.target.value\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            children: \"Assistant Leader Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: e => {\n              const file = e.target.files[0];\n              if (file) {\n                const reader = new FileReader();\n                reader.onload = event => {\n                  setNewTeam({\n                    ...newTeam,\n                    assistantLeader: {\n                      ...newTeam.assistantLeader,\n                      photo: event.target.result\n                    }\n                  });\n                };\n                reader.readAsDataURL(file);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 15\n          }, this), ((_newTeam$assistantLea2 = newTeam.assistantLeader) === null || _newTeam$assistantLea2 === void 0 ? void 0 : _newTeam$assistantLea2.photo) && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: newTeam.assistantLeader.photo,\n              alt: \"Assistant Leader Preview\",\n              style: {\n                maxWidth: '100px',\n                maxHeight: '100px',\n                borderRadius: '50%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 696,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Manager Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: ((_newTeam$manager = newTeam.manager) === null || _newTeam$manager === void 0 ? void 0 : _newTeam$manager.name) || '',\n            onChange: e => setNewTeam({\n              ...newTeam,\n              manager: {\n                ...newTeam.manager,\n                name: e.target.value\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            children: \"Manager Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 715,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: e => {\n              const file = e.target.files[0];\n              if (file) {\n                const reader = new FileReader();\n                reader.onload = event => {\n                  setNewTeam({\n                    ...newTeam,\n                    manager: {\n                      ...newTeam.manager,\n                      photo: event.target.result\n                    }\n                  });\n                };\n                reader.readAsDataURL(file);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 15\n          }, this), ((_newTeam$manager2 = newTeam.manager) === null || _newTeam$manager2 === void 0 ? void 0 : _newTeam$manager2.photo) && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: newTeam.manager.photo,\n              alt: \"Manager Preview\",\n              style: {\n                maxWidth: '100px',\n                maxHeight: '100px',\n                borderRadius: '50%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            if (!newTeam.event) {\n              alert('Please select an event before adding a team');\n              return;\n            }\n            if (!newTeam.name.trim()) {\n              alert('Please enter a team name');\n              return;\n            }\n            setTeams([...teams, newTeam]);\n            saveToLocalStorage('teams', [...teams, newTeam]);\n            setNewTeam({\n              name: '',\n              event: '',\n              color: '#FF5733',\n              teamLeader: {\n                name: '',\n                photo: null\n              },\n              assistantLeader: {\n                name: '',\n                photo: null\n              },\n              manager: {\n                name: '',\n                photo: null\n              }\n            });\n          },\n          disabled: !newTeam.event,\n          children: \"Add Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: \"Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 772,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 774,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Team Leader\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Assistant Leader\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Manager\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 778,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: teams.map((team, index) => {\n            var _team$teamLeader, _team$assistantLeader, _team$manager;\n            return /*#__PURE__*/_jsxDEV(Tr, {\n              children: [/*#__PURE__*/_jsxDEV(Td, {\n                children: team.event || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 784,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: team.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 785,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: /*#__PURE__*/_jsxDEV(ColorPreview, {\n                  r: parseInt(team.color.slice(1, 3), 16),\n                  g: parseInt(team.color.slice(3, 5), 16),\n                  b: parseInt(team.color.slice(5, 7), 16)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 786,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 786,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: ((_team$teamLeader = team.teamLeader) === null || _team$teamLeader === void 0 ? void 0 : _team$teamLeader.name) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: team.teamLeader.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 790,\n                    columnNumber: 25\n                  }, this), team.teamLeader.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: team.teamLeader.photo,\n                    alt: team.teamLeader.name,\n                    style: {\n                      width: '30px',\n                      height: '30px',\n                      borderRadius: '50%',\n                      marginTop: '5px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 792,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 789,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 787,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: ((_team$assistantLeader = team.assistantLeader) === null || _team$assistantLeader === void 0 ? void 0 : _team$assistantLeader.name) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: team.assistantLeader.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 800,\n                    columnNumber: 25\n                  }, this), team.assistantLeader.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: team.assistantLeader.photo,\n                    alt: team.assistantLeader.name,\n                    style: {\n                      width: '30px',\n                      height: '30px',\n                      borderRadius: '50%',\n                      marginTop: '5px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 802,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 799,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 797,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: ((_team$manager = team.manager) === null || _team$manager === void 0 ? void 0 : _team$manager.name) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: team.manager.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 810,\n                    columnNumber: 25\n                  }, this), team.manager.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: team.manager.photo,\n                    alt: team.manager.name,\n                    style: {\n                      width: '30px',\n                      height: '30px',\n                      borderRadius: '50%',\n                      marginTop: '5px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 812,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 809,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 807,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => {\n                    setSelectedEvent(index);\n                    // Ensure the team object has all the required properties\n                    const teamWithDefaults = {\n                      name: team.name || '',\n                      event: team.event || '',\n                      color: team.color || '#FF5733',\n                      teamLeader: team.teamLeader || {\n                        name: '',\n                        photo: null\n                      },\n                      assistantLeader: team.assistantLeader || {\n                        name: '',\n                        photo: null\n                      },\n                      manager: team.manager || {\n                        name: '',\n                        photo: null\n                      }\n                    };\n                    setNewTeam(teamWithDefaults);\n                  },\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 818,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => {\n                    const updatedTeams = teams.filter((_, i) => i !== index);\n                    setTeams(updatedTeams);\n                    saveToLocalStorage('teams', updatedTeams);\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 831,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 817,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 783,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 9\n    }, this), activeTab === 'students' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Add New Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 849,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: newStudent.name,\n            onChange: e => setNewStudent({\n              ...newStudent,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 850,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Chest Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 853,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: newStudent.chestNumber,\n            onChange: e => setNewStudent({\n              ...newStudent,\n              chestNumber: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 857,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newStudent.event,\n            onChange: e => setNewStudent({\n              ...newStudent,\n              event: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 859,\n              columnNumber: 17\n            }, this), events.map((event, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: event.name,\n              children: event.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 861,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 858,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newStudent.team,\n            onChange: e => setNewStudent({\n              ...newStudent,\n              team: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 868,\n              columnNumber: 17\n            }, this), teams.map((team, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: team.name,\n              children: team.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 870,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 875,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newStudent.category,\n            onChange: e => setNewStudent({\n              ...newStudent,\n              category: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 877,\n              columnNumber: 17\n            }, this), newStudent.event && ((_events$find = events.find(event => event.name === newStudent.event)) === null || _events$find === void 0 ? void 0 : _events$find.categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category,\n              children: category\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 880,\n              columnNumber: 19\n            }, this)))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 876,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 874,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 885,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handlePhotoUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 886,\n            columnNumber: 15\n          }, this), newStudent.photo && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: newStudent.photo,\n              alt: \"Preview\",\n              style: {\n                maxWidth: '200px',\n                maxHeight: '200px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 889,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 888,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            if (newStudent.name.trim() === '' || newStudent.chestNumber.trim() === '') {\n              alert('Please fill in all required fields');\n              return;\n            }\n            const student = {\n              id: students.length > 0 ? Math.max(...students.map(s => s.id)) + 1 : 1,\n              name: newStudent.name,\n              chestNumber: newStudent.chestNumber,\n              team: newStudent.team,\n              category: newStudent.category,\n              photo: newStudent.photo || null\n            };\n            const updatedStudents = [...students, student];\n            setStudents(updatedStudents);\n            const saveResult = saveToLocalStorage('students', updatedStudents);\n            console.log('Student creation save result:', saveResult);\n            if (!saveResult) {\n              console.error('Failed to save new student to localStorage');\n            }\n            setNewStudent({\n              name: '',\n              chestNumber: '',\n              team: '',\n              category: '',\n              photo: null\n            });\n          },\n          children: \"Add Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 922,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Chest Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 923,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 924,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 925,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 926,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 927,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 928,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 921,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 920,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: students.map((student, index) => /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: student.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 934,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: student.chestNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 935,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: student.event\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 936,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: student.team\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 937,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: student.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 938,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: student.photo ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: student.photo,\n                alt: student.name,\n                style: {\n                  width: '50px',\n                  height: '50px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 939,\n                columnNumber: 40\n              }, this) : 'No Photo'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 939,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  setNewStudent({\n                    name: student.name,\n                    chestNumber: student.chestNumber,\n                    team: student.team,\n                    category: student.category,\n                    photo: student.photo || null\n                  });\n                  setSelectedEvent(index);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 941,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  const updatedStudents = students.filter((_, i) => i !== index);\n                  setStudents(updatedStudents);\n                  saveToLocalStorage('students', updatedStudents);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 951,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 940,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 931,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 9\n    }, this), activeTab === 'programs' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Add New Program\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 966,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 968,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newProgram.event,\n            onChange: e => setNewProgram({\n              ...newProgram,\n              event: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 970,\n              columnNumber: 17\n            }, this), events.map((event, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: event.name,\n              children: event.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 972,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 969,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 967,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 977,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: newProgram.name,\n            onChange: e => setNewProgram({\n              ...newProgram,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 978,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 976,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 981,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newProgram.type,\n            onChange: e => setNewProgram({\n              ...newProgram,\n              type: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Individual\",\n              children: \"Individual\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 983,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Team\",\n              children: \"Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 984,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 980,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            if (!newProgram.event) {\n              alert('Please select an event before adding a program');\n              return;\n            }\n            if (!newProgram.name.trim()) {\n              alert('Please enter a program name');\n              return;\n            }\n            setPrograms([...programs, newProgram]);\n            saveToLocalStorage('programs', [...programs, newProgram]);\n            setNewProgram({\n              name: '',\n              event: '',\n              type: 'Individual'\n            });\n          },\n          disabled: !newProgram.event,\n          children: \"Add Program\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 987,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 965,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: \"Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1009,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1010,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1011,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1012,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1008,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1007,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: programs.map((program, index) => /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: program.event || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1018,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: program.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1019,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: program.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1020,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  setSelectedEvent(index);\n                  // Ensure the program object has all the required properties\n                  const programWithDefaults = {\n                    name: program.name || '',\n                    event: program.event || '',\n                    type: program.type || 'Individual'\n                  };\n                  setNewProgram(programWithDefaults);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1022,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  const updatedPrograms = programs.filter((_, i) => i !== index);\n                  setPrograms(updatedPrograms);\n                  saveToLocalStorage('programs', updatedPrograms);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1032,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1021,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1017,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1015,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1006,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 9\n    }, this), activeTab === 'results' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Add New Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1047,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1049,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newResult.event,\n            onChange: e => setNewResult({\n              ...newResult,\n              event: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1051,\n              columnNumber: 17\n            }, this), events.map((event, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: event.name,\n              children: event.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1053,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1050,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1048,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Program\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1058,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newResult.program,\n            onChange: e => setNewResult({\n              ...newResult,\n              program: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Program\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1060,\n              columnNumber: 17\n            }, this), programs.map((program, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: program.name,\n              children: program.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1062,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1059,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1057,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1067,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newResult.category,\n            onChange: e => setNewResult({\n              ...newResult,\n              category: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1069,\n              columnNumber: 17\n            }, this), categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category.name,\n              children: category.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1071,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1068,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1066,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Participants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1076,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [newResult.participants.map((participant, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                value: participant.name,\n                onChange: e => {\n                  const updatedParticipants = [...newResult.participants];\n                  updatedParticipants[index].name = e.target.value;\n                  setNewResult({\n                    ...newResult,\n                    participants: updatedParticipants\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1080,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                value: participant.position,\n                onChange: e => {\n                  const updatedParticipants = [...newResult.participants];\n                  updatedParticipants[index].position = e.target.value;\n                  setNewResult({\n                    ...newResult,\n                    participants: updatedParticipants\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1085,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1079,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setNewResult({\n                ...newResult,\n                participants: [...newResult.participants, {\n                  name: '',\n                  position: ''\n                }]\n              }),\n              children: \"Add Participant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1092,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1077,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1075,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setResults([...results, newResult]);\n            saveToLocalStorage('results', [...results, newResult]);\n            setNewResult({\n              event: '',\n              program: '',\n              category: '',\n              participants: [{\n                name: '',\n                position: ''\n              }]\n            });\n          },\n          children: \"Add Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1095,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1046,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: \"Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Program\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Participants\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1108,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: results.map((result, index) => /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: result.event\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1114,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: result.program\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1115,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: result.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1116,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: result.participants.map(participant => `${participant.name} (${participant.position})`).join(', ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1117,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  setSelectedEvent(index);\n                  setNewResult(result);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1119,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  const updatedResults = results.filter((_, i) => i !== index);\n                  setResults(updatedResults);\n                  saveToLocalStorage('results', updatedResults);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1123,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1118,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1113,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1045,\n      columnNumber: 9\n    }, this), activeTab === 'points' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Configure Default Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"These are the default points for all categories and grades (1st: 3, 2nd: 2, 3rd: 1)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"1st Position (Gold)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: points.gold,\n            onChange: e => setPoints({\n              ...points,\n              gold: parseInt(e.target.value)\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1142,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"2nd Position (Silver)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: points.silver,\n            onChange: e => setPoints({\n              ...points,\n              silver: parseInt(e.target.value)\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1146,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"3rd Position (Bronze)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: points.bronze,\n            onChange: e => setPoints({\n              ...points,\n              bronze: parseInt(e.target.value)\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1150,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            saveToLocalStorage('points', points);\n          },\n          children: \"Save Default Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: resetAllPointsToNewSystem,\n          style: {\n            background: '#ff4757',\n            marginLeft: '10px'\n          },\n          children: \"Reset All Points to New System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Current Saved Points Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Default Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"1st: \", points.gold, \", 2nd: \", points.silver, \", 3rd: \", points.bronze]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1167,\n          columnNumber: 13\n        }, this), Object.keys(categoryPoints).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Category-Specific Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1171,\n            columnNumber: 17\n          }, this), Object.entries(categoryPoints).map(([category, pointsConfig]) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [category, \": 1st: \", pointsConfig.gold, \", 2nd: \", pointsConfig.silver, \", 3rd: \", pointsConfig.bronze]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1173,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1170,\n          columnNumber: 15\n        }, this), Object.keys(gradePoints).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Grade-Specific Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1180,\n            columnNumber: 17\n          }, this), Object.entries(gradePoints).map(([key, pointsConfig]) => {\n            const [category, grade] = key.split('-');\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [category, \" - Grade \", grade, \": 1st: \", pointsConfig.gold, \", 2nd: \", pointsConfig.silver, \", 3rd: \", pointsConfig.bronze]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1184,\n              columnNumber: 21\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1179,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: refreshData,\n          style: {\n            marginTop: '10px'\n          },\n          children: \"Refresh Points Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Configure Category Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Set different points for specific categories (overrides default points)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedCategoryForPoints,\n            onChange: e => setSelectedCategoryForPoints(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1200,\n              columnNumber: 17\n            }, this), categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category.name,\n              children: category.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1202,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1199,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"1st Position (Gold)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: ((_categoryPoints$selec = categoryPoints[selectedCategoryForPoints]) === null || _categoryPoints$selec === void 0 ? void 0 : _categoryPoints$selec.gold) || '',\n            onChange: e => {\n              setCategoryPoints({\n                ...categoryPoints,\n                [selectedCategoryForPoints]: {\n                  ...categoryPoints[selectedCategoryForPoints],\n                  gold: parseInt(e.target.value)\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1208,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"2nd Position (Silver)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: ((_categoryPoints$selec2 = categoryPoints[selectedCategoryForPoints]) === null || _categoryPoints$selec2 === void 0 ? void 0 : _categoryPoints$selec2.silver) || '',\n            onChange: e => {\n              setCategoryPoints({\n                ...categoryPoints,\n                [selectedCategoryForPoints]: {\n                  ...categoryPoints[selectedCategoryForPoints],\n                  silver: parseInt(e.target.value)\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1220,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"3rd Position (Bronze)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: ((_categoryPoints$selec3 = categoryPoints[selectedCategoryForPoints]) === null || _categoryPoints$selec3 === void 0 ? void 0 : _categoryPoints$selec3.bronze) || '',\n            onChange: e => {\n              setCategoryPoints({\n                ...categoryPoints,\n                [selectedCategoryForPoints]: {\n                  ...categoryPoints[selectedCategoryForPoints],\n                  bronze: parseInt(e.target.value)\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            saveToLocalStorage('categoryPoints', categoryPoints);\n          },\n          children: \"Save Category Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1242,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Configure Grade Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Set different points for specific grades (overrides category and default points)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1248,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Example:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1249,\n            columnNumber: 16\n          }, this), \" Grade A = 5 points, Grade B = 3 points\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Grade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedGradeForPoints,\n            onChange: e => setSelectedGradeForPoints(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Grade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1253,\n              columnNumber: 17\n            }, this), availableGrades.map((grade, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: grade,\n              children: grade\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1255,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1252,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '10px',\n              flexWrap: 'wrap',\n              marginBottom: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                if (selectedCategoriesForBatch.length === categories.length) {\n                  // Deselect all\n                  setSelectedCategoriesForBatch([]);\n                } else {\n                  // Select all\n                  setSelectedCategoriesForBatch(categories.map(cat => cat.name));\n                }\n              },\n              style: {\n                background: selectedCategoriesForBatch.length === categories.length ? 'gold' : 'rgba(255,255,255,0.2)',\n                color: selectedCategoriesForBatch.length === categories.length ? '#333' : 'white'\n              },\n              children: selectedCategoriesForBatch.length === categories.length ? 'Deselect All' : 'Select All'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1264,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1263,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: '10px'\n            },\n            children: categories.map(category => /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                cursor: 'pointer'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selectedCategoriesForBatch.includes(category.name),\n                onChange: e => {\n                  if (e.target.checked) {\n                    setSelectedCategoriesForBatch([...selectedCategoriesForBatch, category.name]);\n                  } else {\n                    setSelectedCategoriesForBatch(selectedCategoriesForBatch.filter(cat => cat !== category.name));\n                  }\n                },\n                style: {\n                  marginRight: '5px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1285,\n                columnNumber: 21\n              }, this), category.name]\n            }, category.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1284,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1282,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"1st Position (Gold)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1304,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: ((_gradePoints$selected = gradePoints[selectedGradeForPoints]) === null || _gradePoints$selected === void 0 ? void 0 : _gradePoints$selected.gold) || '',\n            onChange: e => {\n              setGradePoints({\n                ...gradePoints,\n                [selectedGradeForPoints]: {\n                  ...gradePoints[selectedGradeForPoints],\n                  gold: parseInt(e.target.value)\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1305,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1303,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"2nd Position (Silver)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1316,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: ((_gradePoints$selected2 = gradePoints[selectedGradeForPoints]) === null || _gradePoints$selected2 === void 0 ? void 0 : _gradePoints$selected2.silver) || '',\n            onChange: e => {\n              setGradePoints({\n                ...gradePoints,\n                [selectedGradeForPoints]: {\n                  ...gradePoints[selectedGradeForPoints],\n                  silver: parseInt(e.target.value)\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1317,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1315,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"3rd Position (Bronze)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1328,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: ((_gradePoints$selected3 = gradePoints[selectedGradeForPoints]) === null || _gradePoints$selected3 === void 0 ? void 0 : _gradePoints$selected3.bronze) || '',\n            onChange: e => {\n              setGradePoints({\n                ...gradePoints,\n                [selectedGradeForPoints]: {\n                  ...gradePoints[selectedGradeForPoints],\n                  bronze: parseInt(e.target.value)\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1329,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            // Apply grade points to all selected categories\n            const updatedGradePoints = {\n              ...gradePoints\n            };\n            selectedCategoriesForBatch.forEach(categoryName => {\n              var _gradePoints$selected4, _gradePoints$selected5, _gradePoints$selected6;\n              const key = `${categoryName}-${selectedGradeForPoints}`;\n              updatedGradePoints[key] = {\n                gold: ((_gradePoints$selected4 = gradePoints[selectedGradeForPoints]) === null || _gradePoints$selected4 === void 0 ? void 0 : _gradePoints$selected4.gold) || 0,\n                silver: ((_gradePoints$selected5 = gradePoints[selectedGradeForPoints]) === null || _gradePoints$selected5 === void 0 ? void 0 : _gradePoints$selected5.silver) || 0,\n                bronze: ((_gradePoints$selected6 = gradePoints[selectedGradeForPoints]) === null || _gradePoints$selected6 === void 0 ? void 0 : _gradePoints$selected6.bronze) || 0\n              };\n            });\n            setGradePoints(updatedGradePoints);\n            saveToLocalStorage('gradePoints', updatedGradePoints);\n          },\n          disabled: !selectedGradeForPoints || selectedCategoriesForBatch.length === 0,\n          children: \"Save Grade Points for Selected Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1339,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1246,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Configure Available Grades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1360,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Grades\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1362,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: availableGrades.join(', '),\n            onChange: e => setAvailableGrades(e.target.value.split(',').map(grade => grade.trim()))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1363,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1361,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            saveToLocalStorage('availableGrades', availableGrades);\n          },\n          children: \"Save Grades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1365,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1359,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Quick Configure Grade Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1370,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Quickly set grade points for multiple categories at once\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1371,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Example:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1372,\n            columnNumber: 16\n          }, this), \" Set Grade A to 5 points for selected categories\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1372,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Apply to Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1376,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '10px',\n              flexWrap: 'wrap',\n              marginBottom: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                if (selectedCategoriesForBatch.length === categories.length) {\n                  // Deselect all\n                  setSelectedCategoriesForBatch([]);\n                } else {\n                  // Select all\n                  setSelectedCategoriesForBatch(categories.map(cat => cat.name));\n                }\n              },\n              style: {\n                background: selectedCategoriesForBatch.length === categories.length ? 'gold' : 'rgba(255,255,255,0.2)',\n                color: selectedCategoriesForBatch.length === categories.length ? '#333' : 'white'\n              },\n              children: selectedCategoriesForBatch.length === categories.length ? 'Deselect All' : 'Select All'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1378,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1377,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: '10px'\n            },\n            children: categories.map(category => /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                cursor: 'pointer'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selectedCategoriesForBatch.includes(category.name),\n                onChange: e => {\n                  if (e.target.checked) {\n                    setSelectedCategoriesForBatch([...selectedCategoriesForBatch, category.name]);\n                  } else {\n                    setSelectedCategoriesForBatch(selectedCategoriesForBatch.filter(cat => cat !== category.name));\n                  }\n                },\n                style: {\n                  marginRight: '5px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1399,\n                columnNumber: 21\n              }, this), category.name]\n            }, category.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1398,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1396,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1375,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"1st Position (Gold)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1418,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: newGradePoints.gold,\n            onChange: e => setNewGradePoints({\n              ...newGradePoints,\n              gold: parseInt(e.target.value)\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1419,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1417,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"2nd Position (Silver)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1422,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: newGradePoints.silver,\n            onChange: e => setNewGradePoints({\n              ...newGradePoints,\n              silver: parseInt(e.target.value)\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1423,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1421,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"3rd Position (Bronze)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1426,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: newGradePoints.bronze,\n            onChange: e => setNewGradePoints({\n              ...newGradePoints,\n              bronze: parseInt(e.target.value)\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1427,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1425,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            // Apply new grade points to all selected categories\n            const updatedGradePoints = {\n              ...gradePoints\n            };\n            selectedCategoriesForBatch.forEach(categoryName => {\n              const key = `${categoryName}-${selectedGradeForPoints}`;\n              updatedGradePoints[key] = {\n                ...newGradePoints\n              };\n            });\n            setGradePoints(updatedGradePoints);\n            saveToLocalStorage('gradePoints', updatedGradePoints);\n          },\n          disabled: selectedCategoriesForBatch.length === 0,\n          children: \"Apply New Grade Points to Selected Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1429,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1369,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1136,\n      columnNumber: 9\n    }, this), activeTab === 'teamManagers' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Add New Team Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1450,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1452,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newTeamManager.event,\n            onChange: e => setNewTeamManager({\n              ...newTeamManager,\n              event: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1454,\n              columnNumber: 17\n            }, this), events.map((event, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: event.name,\n              children: event.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1456,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1453,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1451,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1461,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: newTeamManager.username,\n            onChange: e => setNewTeamManager({\n              ...newTeamManager,\n              username: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1462,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1460,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1465,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            value: newTeamManager.password,\n            onChange: e => setNewTeamManager({\n              ...newTeamManager,\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1466,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1464,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1469,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newTeamManager.team,\n            onChange: e => setNewTeamManager({\n              ...newTeamManager,\n              team: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1471,\n              columnNumber: 17\n            }, this), teams.map((team, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: team.name,\n              children: team.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1473,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1470,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1468,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            if (!newTeamManager.event) {\n              alert('Please select an event before adding a team manager');\n              return;\n            }\n            if (!newTeamManager.username.trim() || !newTeamManager.password.trim() || !newTeamManager.team.trim()) {\n              alert('Please fill in all required fields');\n              return;\n            }\n            setTeamManagers([...teamManagers, newTeamManager]);\n            saveToLocalStorage('teamManagers', [...teamManagers, newTeamManager]);\n            setNewTeamManager({\n              username: '',\n              password: '',\n              event: '',\n              team: ''\n            });\n          },\n          disabled: !newTeamManager.event,\n          children: \"Add Team Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1477,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1449,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: \"Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1499,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1500,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1501,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1502,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1498,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1497,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: teamManagers.map((manager, index) => /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: manager.event || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1508,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: manager.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1509,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: manager.team\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1510,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  setSelectedEvent(index);\n                  // Ensure the manager object has all the required properties\n                  const managerWithDefaults = {\n                    username: manager.username || '',\n                    password: manager.password || '',\n                    event: manager.event || '',\n                    team: manager.team || ''\n                  };\n                  setNewTeamManager(managerWithDefaults);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1512,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  const updatedTeamManagers = teamManagers.filter((_, i) => i !== index);\n                  setTeamManagers(updatedTeamManagers);\n                  saveToLocalStorage('teamManagers', updatedTeamManagers);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1523,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1511,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1507,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1505,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1496,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1448,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 457,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"oxJUFD8lMfE7LCkGFuK3sqGsj+4=\", false, function () {\n  return [useNavigate];\n});\n_c17 = AdminDashboard;\nexport default AdminDashboard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17;\n$RefreshReg$(_c, \"DashboardContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"TabContainer\");\n$RefreshReg$(_c4, \"Tab\");\n$RefreshReg$(_c5, \"FormContainer\");\n$RefreshReg$(_c6, \"FormTitle\");\n$RefreshReg$(_c7, \"FormGroup\");\n$RefreshReg$(_c8, \"Label\");\n$RefreshReg$(_c9, \"Input\");\n$RefreshReg$(_c0, \"Select\");\n$RefreshReg$(_c1, \"Button\");\n$RefreshReg$(_c10, \"Table\");\n$RefreshReg$(_c11, \"Th\");\n$RefreshReg$(_c12, \"Td\");\n$RefreshReg$(_c13, \"Tr\");\n$RefreshReg$(_c14, \"ColorPreview\");\n$RefreshReg$(_c15, \"RGBInputContainer\");\n$RefreshReg$(_c16, \"RGBInput\");\n$RefreshReg$(_c17, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","styled","useNavigate","loadFromLocalStorage","saveToLocalStorage","calculateTeamStandings","jsxDEV","_jsxDEV","DashboardContainer","div","_c","Header","h1","_c2","TabContainer","_c3","Tab","button","props","active","_c4","FormContainer","_c5","FormTitle","h2","_c6","FormGroup","_c7","Label","label","_c8","Input","input","_c9","Select","select","_c0","Button","_c1","Table","table","_c10","Th","th","_c11","Td","td","_c12","Tr","tr","_c13","ColorPreview","r","g","b","_c14","RGBInputContainer","_c15","RGBInput","_c16","AdminDashboard","_s","_newTeam$teamLeader","_newTeam$teamLeader2","_newTeam$assistantLea","_newTeam$assistantLea2","_newTeam$manager","_newTeam$manager2","_events$find","_categoryPoints$selec","_categoryPoints$selec2","_categoryPoints$selec3","_gradePoints$selected","_gradePoints$selected2","_gradePoints$selected3","navigate","activeTab","setActiveTab","events","setEvents","teams","setTeams","categories","setCategories","students","setStudents","programs","setPrograms","results","setResults","points","setPoints","gold","silver","bronze","categoryPoints","setCategoryPoints","gradePoints","setGradePoints","availableGrades","setAvailableGrades","newGradePoints","setNewGradePoints","teamManagers","setTeamManagers","selectedEvent","setSelectedEvent","newEvent","setNewEvent","name","color","newTeam","setNewTeam","event","teamLeader","photo","assistantLeader","manager","newCategory","setNewCategory","order","newStudent","setNewStudent","chestNumber","team","category","newProgram","setNewProgram","type","newResult","setNewResult","program","participants","position","newTeamManager","setNewTeamManager","username","password","editingTeamManager","setEditingTeamManager","adminPassword","setAdminPassword","selectedCategoryForPoints","setSelectedCategoryForPoints","selectedGradeForPoints","setSelectedGradeForPoints","selectedCategoriesForBatch","setSelectedCategoriesForBatch","newGrade","setNewGrade","selectedEventForTeams","setSelectedEventForTeams","selectedEventForStudents","setSelectedEventForStudents","selectedEventForPrograms","setSelectedEventForPrograms","selectedEventForResults","setSelectedEventForResults","preConfigureGradePoints","grade","pointsConfig","updatedGradePoints","forEach","categoryName","key","resetAllPointsToNewSystem","window","confirm","newDefaultPoints","newGradePointsConfig","alert","refreshData","console","log","savedEvents","savedTeams","savedCategories","savedStudents","savedPrograms","savedResults","savedPoints","savedCategoryPoints","savedGradePoints","savedTeamManagers","error","savedPassword","savedAvailableGrades","savedSelectedEventForTeams","savedSelectedEventForStudents","savedSelectedEventForPrograms","savedSelectedEventForResults","length","prev","map","cat","handleLogout","localStorage","removeItem","handleEventSelection","eventName","handleCreateTeamManager","trim","some","updatedTeamManagers","handleUpdateTeamManager","handleDeleteTeamManager","filter","handlePhotoUpload","e","file","target","files","reader","FileReader","onload","result","readAsDataURL","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","parseInt","style","display","gap","marginBottom","placeholder","updatedCategories","flexWrap","index","background","padding","borderRadius","alignItems","_","i","border","marginLeft","cursor","catIndex","marginRight","updatedEvents","accept","marginTop","src","alt","maxWidth","maxHeight","disabled","_team$teamLeader","_team$assistantLeader","_team$manager","slice","width","height","teamWithDefaults","updatedTeams","find","student","id","Math","max","s","updatedStudents","saveResult","programWithDefaults","updatedPrograms","participant","updatedParticipants","join","updatedResults","Object","keys","entries","split","checked","includes","_gradePoints$selected4","_gradePoints$selected5","_gradePoints$selected6","managerWithDefaults","_c17","$RefreshReg$"],"sources":["C:/Users/SMIC_STUDIO/Desktop/MEHFIL 25 APP/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { loadFromLocalStorage, saveToLocalStorage, calculateTeamStandings } from '../utils/dataStorage';\r\n\r\nconst DashboardContainer = styled.div`\r\n  padding: 20px;\r\n  color: white;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst Header = styled.h1`\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  margin-bottom: 30px;\r\n  color: gold;\r\n`;\r\n\r\nconst TabContainer = styled.div`\r\n  display: flex;\r\n  border-bottom: 2px solid rgba(255,255,255,0.2);\r\n  margin-bottom: 30px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Tab = styled.button`\r\n  padding: 15px 30px;\r\n  background: ${props => props.active ? 'rgba(255,255,255,0.2)' : 'transparent'};\r\n  color: ${props => props.active ? 'gold' : 'white'};\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.1rem;\r\n  font-weight: bold;\r\n\r\n  &:hover {\r\n    background: rgba(255,255,255,0.1);\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    padding: 10px 15px;\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n  background: rgba(255,255,255,0.1);\r\n  border-radius: 15px;\r\n  padding: 30px;\r\n  backdrop-filter: blur(10px);\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst FormTitle = styled.h2`\r\n  margin-top: 0;\r\n  color: gold;\r\n  border-bottom: 1px solid rgba(255,255,255,0.2);\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst FormGroup = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  border: none;\r\n  background: rgba(255,255,255,0.1);\r\n  color: white;\r\n  font-size: 1rem;\r\n\r\n  &:focus {\r\n    outline: 2px solid gold;\r\n  }\r\n`;\r\n\r\nconst Select = styled.select`\r\n  width: 100%;\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  border: none;\r\n  background: rgba(255,255,255,0.1);\r\n  color: white;\r\n  font-size: 1rem;\r\n\r\n  &:focus {\r\n    outline: 2px solid gold;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 12px 25px;\r\n  background: gold;\r\n  color: #333;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n  margin-right: 10px;\r\n  margin-bottom: 10px;\r\n\r\n  &:hover {\r\n    background: #ffd700;\r\n    transform: translateY(-2px);\r\n  }\r\n`;\r\n\r\nconst Table = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  background: rgba(255,255,255,0.1);\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Th = styled.th`\r\n  background: rgba(0,0,0,0.2);\r\n  padding: 15px;\r\n  text-align: left;\r\n`;\r\n\r\nconst Td = styled.td`\r\n  padding: 15px;\r\n  border-bottom: 1px solid rgba(255,255,255,0.1);\r\n`;\r\n\r\nconst Tr = styled.tr`\r\n  &:hover {\r\n    background: rgba(255,255,255,0.05);\r\n  }\r\n`;\r\n\r\nconst ColorPreview = styled.div`\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  background: ${props => `rgb(${props.r}, ${props.g}, ${props.b})`};\r\n  display: inline-block;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst RGBInputContainer = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst RGBInput = styled.input`\r\n  width: 80px;\r\n  padding: 8px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  background: rgba(255,255,255,0.1);\r\n  color: white;\r\n  text-align: center;\r\n`;\r\n\r\nconst AdminDashboard = () => {\r\n  const navigate = useNavigate();\r\n  const [activeTab, setActiveTab] = useState('events');\r\n  const [events, setEvents] = useState([]);\r\n  const [teams, setTeams] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [students, setStudents] = useState([]);\r\n  const [programs, setPrograms] = useState([]);\r\n  const [results, setResults] = useState([]);\r\n  const [points, setPoints] = useState({\r\n    gold: 3,\r\n    silver: 2,\r\n    bronze: 1\r\n  });\r\n  // Category-specific points configuration\r\n  const [categoryPoints, setCategoryPoints] = useState({});\r\n  // Grade-specific points configuration\r\n  const [gradePoints, setGradePoints] = useState({});\r\n  // Available grades configuration\r\n  const [availableGrades, setAvailableGrades] = useState(['A', 'B', 'C', 'D']);\r\n  // New grade points configuration\r\n  const [newGradePoints, setNewGradePoints] = useState({\r\n    gold: 3,\r\n    silver: 2,\r\n    bronze: 1\r\n  });\r\n  // Team managers configuration\r\n  const [teamManagers, setTeamManagers] = useState([]);\r\n  // Selected event for management\r\n  const [selectedEvent, setSelectedEvent] = useState('');\r\n  \r\n  // Form states\r\n  const [newEvent, setNewEvent] = useState({ name: '', categories: [], color: { r: 106, g: 17, b: 203 } });\r\n  const [newTeam, setNewTeam] = useState({ \r\n    name: '', \r\n    event: '',\r\n    color: '#FF5733',\r\n    teamLeader: { name: '', photo: null },\r\n    assistantLeader: { name: '', photo: null },\r\n    manager: { name: '', photo: null }\r\n  });\r\n  const [newCategory, setNewCategory] = useState({ name: '', order: 1 });\r\n  const [newStudent, setNewStudent] = useState({ name: '', chestNumber: '', event: '', team: '', category: '', photo: null });\r\n  const [newProgram, setNewProgram] = useState({ name: '', event: '', type: 'Individual' });\r\n  const [newResult, setNewResult] = useState({ \r\n    event: '', \r\n    program: '', \r\n    category: '', \r\n    participants: [{ name: '', position: '' }] \r\n  });\r\n  const [newTeamManager, setNewTeamManager] = useState({ \r\n    username: '', \r\n    password: '', \r\n    event: '',\r\n    team: '' \r\n  });\r\n  const [editingTeamManager, setEditingTeamManager] = useState(null);\r\n  const [adminPassword, setAdminPassword] = useState('admin123');\r\n  const [selectedCategoryForPoints, setSelectedCategoryForPoints] = useState('');\r\n  const [selectedGradeForPoints, setSelectedGradeForPoints] = useState('');\r\n  const [selectedCategoriesForBatch, setSelectedCategoriesForBatch] = useState([]);\r\n  const [newGrade, setNewGrade] = '';\r\n  \r\n  // Event filtering states\r\n  const [selectedEventForTeams, setSelectedEventForTeams] = useState('');\r\n  const [selectedEventForStudents, setSelectedEventForStudents] = useState('');\r\n  const [selectedEventForPrograms, setSelectedEventForPrograms] = useState('');\r\n  const [selectedEventForResults, setSelectedEventForResults] = useState('');\r\n\r\n  // Function to pre-configure points for a new grade across all categories\r\n  const preConfigureGradePoints = (grade, pointsConfig) => {\r\n    const updatedGradePoints = { ...gradePoints };\r\n    \r\n    // For each selected category, create a default grade point configuration\r\n    selectedCategoriesForBatch.forEach(categoryName => {\r\n      const key = `${categoryName}-${grade}`;\r\n      updatedGradePoints[key] = { ...pointsConfig };\r\n    });\r\n    \r\n    setGradePoints(updatedGradePoints);\r\n  };\r\n\r\n  // Function to reset all points to the new system\r\n  const resetAllPointsToNewSystem = () => {\r\n    if (window.confirm('Are you sure you want to reset all points to the new system? This will clear all existing custom point configurations.')) {\r\n      // Reset default points\r\n      const newDefaultPoints = { gold: 3, silver: 2, bronze: 1 };\r\n      setPoints(newDefaultPoints);\r\n      saveToLocalStorage('points', newDefaultPoints);\r\n      \r\n      // Clear category points\r\n      setCategoryPoints({});\r\n      saveToLocalStorage('categoryPoints', {});\r\n      \r\n      // Clear grade points\r\n      setGradePoints({});\r\n      saveToLocalStorage('gradePoints', {});\r\n      \r\n      // Reset new grade points to default\r\n      const newGradePointsConfig = { gold: 3, silver: 2, bronze: 1 };\r\n      setNewGradePoints(newGradePointsConfig);\r\n      \r\n      alert('All points have been reset to the new system.');\r\n    }\r\n  };\r\n\r\n  // Add a function to refresh data from localStorage\r\n  const refreshData = () => {\r\n    console.log('Refreshing data from localStorage');\r\n    try {\r\n      const savedEvents = loadFromLocalStorage('events', []);\r\n      const savedTeams = loadFromLocalStorage('teams', []);\r\n      const savedCategories = loadFromLocalStorage('categories', []);\r\n      const savedStudents = loadFromLocalStorage('students', []);\r\n      const savedPrograms = loadFromLocalStorage('programs', []);\r\n      const savedResults = loadFromLocalStorage('results', []);\r\n      const savedPoints = loadFromLocalStorage('points', { gold: 3, silver: 2, bronze: 1 });\r\n      const savedCategoryPoints = loadFromLocalStorage('categoryPoints', {});\r\n      const savedGradePoints = loadFromLocalStorage('gradePoints', {});\r\n      const savedTeamManagers = loadFromLocalStorage('teamManagers', []);\r\n\r\n      setEvents(savedEvents || []);\r\n      setTeams(savedTeams || []);\r\n      setCategories(savedCategories || []);\r\n      setStudents(savedStudents || []);\r\n      setPrograms(savedPrograms || []);\r\n      setResults(savedResults || []);\r\n      setPoints(savedPoints);\r\n      setCategoryPoints(savedCategoryPoints || {});\r\n      setGradePoints(savedGradePoints || {});\r\n      setTeamManagers(savedTeamManagers || []);\r\n\r\n      console.log('Admin data refreshed');\r\n    } catch (error) {\r\n      console.error('Error refreshing data:', error);\r\n    }\r\n  };\r\n\r\n  // Load data from localStorage on component mount\r\n  useEffect(() => {\r\n    const savedEvents = loadFromLocalStorage('events', []);\r\n    const savedTeams = loadFromLocalStorage('teams', []);\r\n    const savedCategories = loadFromLocalStorage('categories', []);\r\n    const savedStudents = loadFromLocalStorage('students', []);\r\n    const savedPrograms = loadFromLocalStorage('programs', []);\r\n    const savedResults = loadFromLocalStorage('results', []);\r\n    const savedPoints = loadFromLocalStorage('points', { gold: 3, silver: 2, bronze: 1 });\r\n    const savedCategoryPoints = loadFromLocalStorage('categoryPoints', {});\r\n    const savedGradePoints = loadFromLocalStorage('gradePoints', {});\r\n    const savedPassword = loadFromLocalStorage('adminPassword', 'admin123');\r\n    const savedAvailableGrades = loadFromLocalStorage('availableGrades', ['A', 'B', 'C', 'D']);\r\n    const savedTeamManagers = loadFromLocalStorage('teamManagers', []);\r\n\r\n    // Load event filtering states\r\n    const savedSelectedEventForTeams = loadFromLocalStorage('selectedEventForTeams', '');\r\n    const savedSelectedEventForStudents = loadFromLocalStorage('selectedEventForStudents', '');\r\n    const savedSelectedEventForPrograms = loadFromLocalStorage('selectedEventForPrograms', '');\r\n    const savedSelectedEventForResults = loadFromLocalStorage('selectedEventForResults', '');\r\n\r\n    console.log('Admin dashboard loaded data:', {\r\n      events: savedEvents,\r\n      teams: savedTeams,\r\n      categories: savedCategories,\r\n      students: savedStudents,\r\n      programs: savedPrograms,\r\n      results: savedResults,\r\n      points: savedPoints,\r\n      categoryPoints: savedCategoryPoints,\r\n      gradePoints: savedGradePoints,\r\n      teamManagers: savedTeamManagers\r\n    });\r\n\r\n    setEvents(savedEvents || []);\r\n    setTeams(savedTeams || []);\r\n    setCategories(savedCategories || []);\r\n    setStudents(savedStudents || []);\r\n    setPrograms(savedPrograms || []);\r\n    setResults(savedResults || []);\r\n    setPoints(savedPoints);\r\n    setCategoryPoints(savedCategoryPoints || {});\r\n    setGradePoints(savedGradePoints || {});\r\n    setAdminPassword(savedPassword);\r\n    setAvailableGrades(savedAvailableGrades || ['A', 'B', 'C', 'D']);\r\n    setTeamManagers(savedTeamManagers || []);\r\n\r\n    // Set event filtering states\r\n    setSelectedEventForTeams(savedSelectedEventForTeams || '');\r\n    setSelectedEventForStudents(savedSelectedEventForStudents || '');\r\n    setSelectedEventForPrograms(savedSelectedEventForPrograms || '');\r\n    setSelectedEventForResults(savedSelectedEventForResults || '');\r\n\r\n    // Initialize form select options\r\n    if (savedEvents && savedEvents.length > 0) {\r\n      setNewResult(prev => ({ ...prev, event: savedEvents[0].name }));\r\n      setSelectedEvent(savedEvents[0].name);\r\n    }\r\n    if (savedPrograms && savedPrograms.length > 0) {\r\n      setNewResult(prev => ({ ...prev, program: savedPrograms[0].name }));\r\n    }\r\n    if (savedCategories && savedCategories.length > 0) {\r\n      setNewResult(prev => ({ ...prev, category: savedCategories[0].name }));\r\n      setSelectedCategoryForPoints(savedCategories[0].name);\r\n      // Initialize selected categories for batch\r\n      setSelectedCategoriesForBatch(savedCategories.map(cat => cat.name));\r\n    }\r\n    if (savedTeams && savedTeams.length > 0) {\r\n      setNewTeamManager(prev => ({ ...prev, team: savedTeams[0].name }));\r\n    }\r\n  }, []);\r\n\r\n  // Initialize selected categories for batch when categories change\r\n  useEffect(() => {\r\n    if (categories.length > 0 && selectedCategoriesForBatch.length === 0) {\r\n      // Initially select all categories\r\n      setSelectedCategoriesForBatch(categories.map(cat => cat.name));\r\n    }\r\n  }, [categories, selectedCategoriesForBatch.length]);\r\n\r\n  // Handle logout\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('isAdminLoggedIn');\r\n    navigate('/');\r\n  };\r\n\r\n  // Handle event selection\r\n  const handleEventSelection = (eventName) => {\r\n    setSelectedEvent(eventName);\r\n    \r\n    // Update forms that depend on event selection\r\n    setNewTeam({ ...newTeam, event: eventName });\r\n    setNewCategory({ ...newCategory, event: eventName });\r\n    setNewStudent({ ...newStudent, event: eventName });\r\n    setNewProgram({ ...newProgram, event: eventName });\r\n    setNewResult({ ...newResult, event: eventName });\r\n    setNewTeamManager({ ...newTeamManager, event: eventName });\r\n  };\r\n\r\n  // Team manager CRUD operations\r\n  const handleCreateTeamManager = () => {\r\n    if (newTeamManager.username.trim() === '' || newTeamManager.password.trim() === '' || newTeamManager.team.trim() === '') {\r\n      alert('Please fill in all fields');\r\n      return;\r\n    }\r\n    \r\n    // Check if username already exists\r\n    if (teamManagers.some(manager => manager.username === newTeamManager.username)) {\r\n      alert('Username already exists');\r\n      return;\r\n    }\r\n    \r\n    const updatedTeamManagers = [...teamManagers, newTeamManager];\r\n    setTeamManagers(updatedTeamManagers);\r\n    saveToLocalStorage('teamManagers', updatedTeamManagers);\r\n    setNewTeamManager({ username: '', password: '', team: '' });\r\n  };\r\n\r\n  const handleUpdateTeamManager = () => {\r\n    if (!editingTeamManager) return;\r\n    \r\n    const updatedTeamManagers = teamManagers.map(manager => \r\n      manager.username === editingTeamManager.username ? newTeamManager : manager\r\n    );\r\n    \r\n    setTeamManagers(updatedTeamManagers);\r\n    saveToLocalStorage('teamManagers', updatedTeamManagers);\r\n    setEditingTeamManager(null);\r\n    setNewTeamManager({ username: '', password: '', team: '' });\r\n  };\r\n\r\n  const handleDeleteTeamManager = (username) => {\r\n    if (window.confirm('Are you sure you want to delete this team manager?')) {\r\n      const updatedTeamManagers = teamManagers.filter(manager => manager.username !== username);\r\n      setTeamManagers(updatedTeamManagers);\r\n      saveToLocalStorage('teamManagers', updatedTeamManagers);\r\n    }\r\n  };\r\n\r\n  // Handle photo upload for students\r\n  const handlePhotoUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (event) => {\r\n        setNewStudent({ ...newStudent, photo: event.target.result });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DashboardContainer>\r\n      <Header>Admin Dashboard</Header>\r\n      <TabContainer>\r\n        <Tab active={activeTab === 'events'} onClick={() => setActiveTab('events')}>Events</Tab>\r\n        <Tab active={activeTab === 'teams'} onClick={() => setActiveTab('teams')}>Teams</Tab>\r\n        <Tab active={activeTab === 'students'} onClick={() => setActiveTab('students')}>Students</Tab>\r\n        <Tab active={activeTab === 'programs'} onClick={() => setActiveTab('programs')}>Programs</Tab>\r\n        <Tab active={activeTab === 'results'} onClick={() => setActiveTab('results')}>Results</Tab>\r\n        <Tab active={activeTab === 'points'} onClick={() => setActiveTab('points')}>Points</Tab>\r\n        <Tab active={activeTab === 'teamManagers'} onClick={() => setActiveTab('teamManagers')}>Team Managers</Tab>\r\n      </TabContainer>\r\n      {activeTab === 'events' && (\r\n        <div>\r\n          <FormContainer>\r\n            <FormTitle>Add New Event</FormTitle>\r\n            <FormGroup>\r\n              <Label>Name</Label>\r\n              <Input type=\"text\" value={newEvent.name} onChange={(e) => setNewEvent({ ...newEvent, name: e.target.value })} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Color</Label>\r\n              <ColorPreview r={newEvent.color.r} g={newEvent.color.g} b={newEvent.color.b} />\r\n              <RGBInputContainer>\r\n                <RGBInput type=\"number\" value={newEvent.color.r} onChange={(e) => setNewEvent({ ...newEvent, color: { ...newEvent.color, r: parseInt(e.target.value) } })} />\r\n                <RGBInput type=\"number\" value={newEvent.color.g} onChange={(e) => setNewEvent({ ...newEvent, color: { ...newEvent.color, g: parseInt(e.target.value) } })} />\r\n                <RGBInput type=\"number\" value={newEvent.color.b} onChange={(e) => setNewEvent({ ...newEvent, color: { ...newEvent.color, b: parseInt(e.target.value) } })} />\r\n              </RGBInputContainer>\r\n            </FormGroup>\r\n            \r\n            {/* Category Management for Event */}\r\n            <FormGroup>\r\n              <Label>Event Categories</Label>\r\n              <p>Add categories for this event:</p>\r\n              \r\n              {/* Input for new category */}\r\n              <div style={{ display: 'flex', gap: '10px', marginBottom: '10px' }}>\r\n                <Input \r\n                  type=\"text\" \r\n                  value={newCategory.name} \r\n                  onChange={(e) => setNewCategory({ ...newCategory, name: e.target.value })} \r\n                  placeholder=\"Enter category name\"\r\n                />\r\n                <Button \r\n                  onClick={() => {\r\n                    if (newCategory.name.trim() !== '') {\r\n                      const updatedCategories = [...newEvent.categories, newCategory.name.trim()];\r\n                      setNewEvent({ ...newEvent, categories: updatedCategories });\r\n                      setNewCategory({ name: '', order: 1 });\r\n                    }\r\n                  }}\r\n                >\r\n                  Add Category\r\n                </Button>\r\n              </div>\r\n              \r\n              {/* Display existing categories for this event */}\r\n              {newEvent.categories.length > 0 && (\r\n                <div>\r\n                  <h4>Current Categories:</h4>\r\n                  <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>\r\n                    {newEvent.categories.map((category, index) => (\r\n                      <div \r\n                        key={index} \r\n                        style={{ \r\n                          background: 'rgba(255,215,0,0.2)', \r\n                          padding: '5px 10px', \r\n                          borderRadius: '15px', \r\n                          display: 'flex', \r\n                          alignItems: 'center' \r\n                        }}\r\n                      >\r\n                        {category}\r\n                        <button \r\n                          onClick={() => {\r\n                            const updatedCategories = newEvent.categories.filter((_, i) => i !== index);\r\n                            setNewEvent({ ...newEvent, categories: updatedCategories });\r\n                          }}\r\n                          style={{ \r\n                            background: 'none', \r\n                            border: 'none', \r\n                            color: 'white', \r\n                            marginLeft: '5px', \r\n                            cursor: 'pointer' \r\n                          }}\r\n                        >\r\n                          ×\r\n                        </button>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </FormGroup>\r\n            \r\n            <Button onClick={() => {\r\n              setEvents([...events, newEvent]);\r\n              saveToLocalStorage('events', [...events, newEvent]);\r\n              setNewEvent({ name: '', categories: [], color: { r: 106, g: 17, b: 203 } });\r\n            }}>Add Event</Button>\r\n          </FormContainer>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <Th>Name</Th>\r\n                <Th>Categories</Th>\r\n                <Th>Color</Th>\r\n                <Th>Actions</Th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {events.map((event, index) => (\r\n                <Tr key={index}>\r\n                  <Td>{event.name}</Td>\r\n                  <Td>\r\n                    {event.categories.map((category, catIndex) => (\r\n                      <span key={catIndex} style={{ display: 'inline-block', background: 'rgba(255,215,0,0.2)', padding: '2px 8px', borderRadius: '10px', marginRight: '5px', marginBottom: '3px' }}>\r\n                        {category}\r\n                      </span>\r\n                    ))}\r\n                  </Td>\r\n                  <Td><ColorPreview r={event.color.r} g={event.color.g} b={event.color.b} /></Td>\r\n                  <Td>\r\n                    <Button onClick={() => {\r\n                      setSelectedEvent(index);\r\n                      setNewEvent(event);\r\n                    }}>Edit</Button>\r\n                    <Button onClick={() => {\r\n                      const updatedEvents = events.filter((_, i) => i !== index);\r\n                      setEvents(updatedEvents);\r\n                      saveToLocalStorage('events', updatedEvents);\r\n                    }}>Delete</Button>\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      )}\r\n      {activeTab === 'teams' && (\r\n        <div>\r\n          <FormContainer>\r\n            <FormTitle>Add New Team</FormTitle>\r\n            <FormGroup>\r\n              <Label>Event</Label>\r\n              <Select value={newTeam.event} onChange={(e) => setNewTeam({ ...newTeam, event: e.target.value })}>\r\n                <option value=\"\">Select Event</option>\r\n                {events.map((event, index) => (\r\n                  <option key={index} value={event.name}>{event.name}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Name</Label>\r\n              <Input type=\"text\" value={newTeam.name} onChange={(e) => setNewTeam({ ...newTeam, name: e.target.value })} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Color</Label>\r\n              <Input type=\"color\" value={newTeam.color} onChange={(e) => setNewTeam({ ...newTeam, color: e.target.value })} />\r\n            </FormGroup>\r\n            \r\n            {/* Team Leader */}\r\n            <FormGroup>\r\n              <Label>Team Leader Name</Label>\r\n              <Input \r\n                type=\"text\" \r\n                value={newTeam.teamLeader?.name || ''} \r\n                onChange={(e) => setNewTeam({ \r\n                  ...newTeam, \r\n                  teamLeader: { \r\n                    ...newTeam.teamLeader, \r\n                    name: e.target.value \r\n                  } \r\n                })} \r\n              />\r\n              <Label>Team Leader Photo</Label>\r\n              <Input \r\n                type=\"file\" \r\n                accept=\"image/*\" \r\n                onChange={(e) => {\r\n                  const file = e.target.files[0];\r\n                  if (file) {\r\n                    const reader = new FileReader();\r\n                    reader.onload = (event) => {\r\n                      setNewTeam({ \r\n                        ...newTeam, \r\n                        teamLeader: { \r\n                          ...newTeam.teamLeader, \r\n                          photo: event.target.result \r\n                        } \r\n                      });\r\n                    };\r\n                    reader.readAsDataURL(file);\r\n                  }\r\n                }} \r\n              />\r\n              {newTeam.teamLeader?.photo && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <img src={newTeam.teamLeader.photo} alt=\"Team Leader Preview\" style={{ maxWidth: '100px', maxHeight: '100px', borderRadius: '50%' }} />\r\n                </div>\r\n              )}\r\n            </FormGroup>\r\n            \r\n            {/* Assistant Leader */}\r\n            <FormGroup>\r\n              <Label>Assistant Leader Name</Label>\r\n              <Input \r\n                type=\"text\" \r\n                value={newTeam.assistantLeader?.name || ''} \r\n                onChange={(e) => setNewTeam({ \r\n                  ...newTeam, \r\n                  assistantLeader: { \r\n                    ...newTeam.assistantLeader, \r\n                    name: e.target.value \r\n                  } \r\n                })} \r\n              />\r\n              <Label>Assistant Leader Photo</Label>\r\n              <Input \r\n                type=\"file\" \r\n                accept=\"image/*\" \r\n                onChange={(e) => {\r\n                  const file = e.target.files[0];\r\n                  if (file) {\r\n                    const reader = new FileReader();\r\n                    reader.onload = (event) => {\r\n                      setNewTeam({ \r\n                        ...newTeam, \r\n                        assistantLeader: { \r\n                          ...newTeam.assistantLeader, \r\n                          photo: event.target.result \r\n                        } \r\n                      });\r\n                    };\r\n                    reader.readAsDataURL(file);\r\n                  }\r\n                }} \r\n              />\r\n              {newTeam.assistantLeader?.photo && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <img src={newTeam.assistantLeader.photo} alt=\"Assistant Leader Preview\" style={{ maxWidth: '100px', maxHeight: '100px', borderRadius: '50%' }} />\r\n                </div>\r\n              )}\r\n            </FormGroup>\r\n            \r\n            {/* Manager */}\r\n            <FormGroup>\r\n              <Label>Manager Name</Label>\r\n              <Input \r\n                type=\"text\" \r\n                value={newTeam.manager?.name || ''} \r\n                onChange={(e) => setNewTeam({ \r\n                  ...newTeam, \r\n                  manager: { \r\n                    ...newTeam.manager, \r\n                    name: e.target.value \r\n                  } \r\n                })} \r\n              />\r\n              <Label>Manager Photo</Label>\r\n              <Input \r\n                type=\"file\" \r\n                accept=\"image/*\" \r\n                onChange={(e) => {\r\n                  const file = e.target.files[0];\r\n                  if (file) {\r\n                    const reader = new FileReader();\r\n                    reader.onload = (event) => {\r\n                      setNewTeam({ \r\n                        ...newTeam, \r\n                        manager: { \r\n                          ...newTeam.manager, \r\n                          photo: event.target.result \r\n                        } \r\n                      });\r\n                    };\r\n                    reader.readAsDataURL(file);\r\n                  }\r\n                }} \r\n              />\r\n              {newTeam.manager?.photo && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <img src={newTeam.manager.photo} alt=\"Manager Preview\" style={{ maxWidth: '100px', maxHeight: '100px', borderRadius: '50%' }} />\r\n                </div>\r\n              )}\r\n            </FormGroup>\r\n            \r\n            <Button \r\n              onClick={() => {\r\n                if (!newTeam.event) {\r\n                  alert('Please select an event before adding a team');\r\n                  return;\r\n                }\r\n                if (!newTeam.name.trim()) {\r\n                  alert('Please enter a team name');\r\n                  return;\r\n                }\r\n                setTeams([...teams, newTeam]);\r\n                saveToLocalStorage('teams', [...teams, newTeam]);\r\n                setNewTeam({ \r\n                  name: '', \r\n                  event: '',\r\n                  color: '#FF5733',\r\n                  teamLeader: { name: '', photo: null },\r\n                  assistantLeader: { name: '', photo: null },\r\n                  manager: { name: '', photo: null }\r\n                });\r\n              }}\r\n              disabled={!newTeam.event}\r\n            >\r\n              Add Team\r\n            </Button>\r\n          </FormContainer>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <Th>Event</Th>\r\n                <Th>Name</Th>\r\n                <Th>Color</Th>\r\n                <Th>Team Leader</Th>\r\n                <Th>Assistant Leader</Th>\r\n                <Th>Manager</Th>\r\n                <Th>Actions</Th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {teams.map((team, index) => (\r\n                <Tr key={index}>\r\n                  <Td>{team.event || 'N/A'}</Td>\r\n                  <Td>{team.name}</Td>\r\n                  <Td><ColorPreview r={parseInt(team.color.slice(1, 3), 16)} g={parseInt(team.color.slice(3, 5), 16)} b={parseInt(team.color.slice(5, 7), 16)} /></Td>\r\n                  <Td>\r\n                    {team.teamLeader?.name && (\r\n                      <div>\r\n                        <div>{team.teamLeader.name}</div>\r\n                        {team.teamLeader.photo && (\r\n                          <img src={team.teamLeader.photo} alt={team.teamLeader.name} style={{ width: '30px', height: '30px', borderRadius: '50%', marginTop: '5px' }} />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </Td>\r\n                  <Td>\r\n                    {team.assistantLeader?.name && (\r\n                      <div>\r\n                        <div>{team.assistantLeader.name}</div>\r\n                        {team.assistantLeader.photo && (\r\n                          <img src={team.assistantLeader.photo} alt={team.assistantLeader.name} style={{ width: '30px', height: '30px', borderRadius: '50%', marginTop: '5px' }} />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </Td>\r\n                  <Td>\r\n                    {team.manager?.name && (\r\n                      <div>\r\n                        <div>{team.manager.name}</div>\r\n                        {team.manager.photo && (\r\n                          <img src={team.manager.photo} alt={team.manager.name} style={{ width: '30px', height: '30px', borderRadius: '50%', marginTop: '5px' }} />\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </Td>\r\n                  <Td>\r\n                    <Button onClick={() => {\r\n                      setSelectedEvent(index);\r\n                      // Ensure the team object has all the required properties\r\n                      const teamWithDefaults = {\r\n                        name: team.name || '',\r\n                        event: team.event || '',\r\n                        color: team.color || '#FF5733',\r\n                        teamLeader: team.teamLeader || { name: '', photo: null },\r\n                        assistantLeader: team.assistantLeader || { name: '', photo: null },\r\n                        manager: team.manager || { name: '', photo: null }\r\n                      };\r\n                      setNewTeam(teamWithDefaults);\r\n                    }}>Edit</Button>\r\n                    <Button onClick={() => {\r\n                      const updatedTeams = teams.filter((_, i) => i !== index);\r\n                      setTeams(updatedTeams);\r\n                      saveToLocalStorage('teams', updatedTeams);\r\n                    }}>Delete</Button>\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === 'students' && (\r\n        <div>\r\n          <FormContainer>\r\n            <FormTitle>Add New Student</FormTitle>\r\n            <FormGroup>\r\n              <Label>Name</Label>\r\n              <Input type=\"text\" value={newStudent.name} onChange={(e) => setNewStudent({ ...newStudent, name: e.target.value })} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Chest Number</Label>\r\n              <Input type=\"text\" value={newStudent.chestNumber} onChange={(e) => setNewStudent({ ...newStudent, chestNumber: e.target.value })} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Event</Label>\r\n              <Select value={newStudent.event} onChange={(e) => setNewStudent({ ...newStudent, event: e.target.value })}>\r\n                <option value=\"\">Select Event</option>\r\n                {events.map((event, index) => (\r\n                  <option key={index} value={event.name}>{event.name}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Team</Label>\r\n              <Select value={newStudent.team} onChange={(e) => setNewStudent({ ...newStudent, team: e.target.value })}>\r\n                <option value=\"\">Select Team</option>\r\n                {teams.map((team, index) => (\r\n                  <option key={index} value={team.name}>{team.name}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Category</Label>\r\n              <Select value={newStudent.category} onChange={(e) => setNewStudent({ ...newStudent, category: e.target.value })}>\r\n                <option value=\"\">Select Category</option>\r\n                {/* Get categories from the selected event */}\r\n                {newStudent.event && events.find(event => event.name === newStudent.event)?.categories.map((category, index) => (\r\n                  <option key={index} value={category}>{category}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Photo</Label>\r\n              <Input type=\"file\" accept=\"image/*\" onChange={handlePhotoUpload} />\r\n              {newStudent.photo && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <img src={newStudent.photo} alt=\"Preview\" style={{ maxWidth: '200px', maxHeight: '200px' }} />\r\n                </div>\r\n              )}\r\n            </FormGroup>\r\n            <Button onClick={() => {\r\n              if (newStudent.name.trim() === '' || newStudent.chestNumber.trim() === '') {\r\n                alert('Please fill in all required fields');\r\n                return;\r\n              }\r\n              \r\n              const student = {\r\n                id: students.length > 0 ? Math.max(...students.map(s => s.id)) + 1 : 1,\r\n                name: newStudent.name,\r\n                chestNumber: newStudent.chestNumber,\r\n                team: newStudent.team,\r\n                category: newStudent.category,\r\n                photo: newStudent.photo || null\r\n              };\r\n              \r\n              const updatedStudents = [...students, student];\r\n              setStudents(updatedStudents);\r\n              const saveResult = saveToLocalStorage('students', updatedStudents);\r\n              console.log('Student creation save result:', saveResult);\r\n              if (!saveResult) {\r\n                console.error('Failed to save new student to localStorage');\r\n              }\r\n              \r\n              setNewStudent({ name: '', chestNumber: '', team: '', category: '', photo: null });\r\n            }}>Add Student</Button>\r\n          </FormContainer>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <Th>Name</Th>\r\n                <Th>Chest Number</Th>\r\n                <Th>Event</Th>\r\n                <Th>Team</Th>\r\n                <Th>Category</Th>\r\n                <Th>Photo</Th>\r\n                <Th>Actions</Th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {students.map((student, index) => (\r\n                <Tr key={index}>\r\n                  <Td>{student.name}</Td>\r\n                  <Td>{student.chestNumber}</Td>\r\n                  <Td>{student.event}</Td>\r\n                  <Td>{student.team}</Td>\r\n                  <Td>{student.category}</Td>\r\n                  <Td>{student.photo ? <img src={student.photo} alt={student.name} style={{ width: '50px', height: '50px' }} /> : 'No Photo'}</Td>\r\n                  <Td>\r\n                    <Button onClick={() => {\r\n                      setNewStudent({\r\n                        name: student.name,\r\n                        chestNumber: student.chestNumber,\r\n                        team: student.team,\r\n                        category: student.category,\r\n                        photo: student.photo || null\r\n                      });\r\n                      setSelectedEvent(index);\r\n                    }}>Edit</Button>\r\n                    <Button onClick={() => {\r\n                      const updatedStudents = students.filter((_, i) => i !== index);\r\n                      setStudents(updatedStudents);\r\n                      saveToLocalStorage('students', updatedStudents);\r\n                    }}>Delete</Button>\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      )}\r\n      {activeTab === 'programs' && (\r\n        <div>\r\n          <FormContainer>\r\n            <FormTitle>Add New Program</FormTitle>\r\n            <FormGroup>\r\n              <Label>Event</Label>\r\n              <Select value={newProgram.event} onChange={(e) => setNewProgram({ ...newProgram, event: e.target.value })}>\r\n                <option value=\"\">Select Event</option>\r\n                {events.map((event, index) => (\r\n                  <option key={index} value={event.name}>{event.name}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Name</Label>\r\n              <Input type=\"text\" value={newProgram.name} onChange={(e) => setNewProgram({ ...newProgram, name: e.target.value })} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Type</Label>\r\n              <Select value={newProgram.type} onChange={(e) => setNewProgram({ ...newProgram, type: e.target.value })}>\r\n                <option value=\"Individual\">Individual</option>\r\n                <option value=\"Team\">Team</option>\r\n              </Select>\r\n            </FormGroup>\r\n            <Button \r\n              onClick={() => {\r\n                if (!newProgram.event) {\r\n                  alert('Please select an event before adding a program');\r\n                  return;\r\n                }\r\n                if (!newProgram.name.trim()) {\r\n                  alert('Please enter a program name');\r\n                  return;\r\n                }\r\n                setPrograms([...programs, newProgram]);\r\n                saveToLocalStorage('programs', [...programs, newProgram]);\r\n                setNewProgram({ name: '', event: '', type: 'Individual' });\r\n              }}\r\n              disabled={!newProgram.event}\r\n            >\r\n              Add Program\r\n            </Button>\r\n          </FormContainer>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <Th>Event</Th>\r\n                <Th>Name</Th>\r\n                <Th>Type</Th>\r\n                <Th>Actions</Th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {programs.map((program, index) => (\r\n                <Tr key={index}>\r\n                  <Td>{program.event || 'N/A'}</Td>\r\n                  <Td>{program.name}</Td>\r\n                  <Td>{program.type}</Td>\r\n                  <Td>\r\n                    <Button onClick={() => {\r\n                      setSelectedEvent(index);\r\n                      // Ensure the program object has all the required properties\r\n                      const programWithDefaults = {\r\n                        name: program.name || '',\r\n                        event: program.event || '',\r\n                        type: program.type || 'Individual'\r\n                      };\r\n                      setNewProgram(programWithDefaults);\r\n                    }}>Edit</Button>\r\n                    <Button onClick={() => {\r\n                      const updatedPrograms = programs.filter((_, i) => i !== index);\r\n                      setPrograms(updatedPrograms);\r\n                      saveToLocalStorage('programs', updatedPrograms);\r\n                    }}>Delete</Button>\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      )}\r\n      {activeTab === 'results' && (\r\n        <div>\r\n          <FormContainer>\r\n            <FormTitle>Add New Result</FormTitle>\r\n            <FormGroup>\r\n              <Label>Event</Label>\r\n              <Select value={newResult.event} onChange={(e) => setNewResult({ ...newResult, event: e.target.value })}>\r\n                <option value=\"\">Select Event</option>\r\n                {events.map((event, index) => (\r\n                  <option key={index} value={event.name}>{event.name}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Program</Label>\r\n              <Select value={newResult.program} onChange={(e) => setNewResult({ ...newResult, program: e.target.value })}>\r\n                <option value=\"\">Select Program</option>\r\n                {programs.map((program, index) => (\r\n                  <option key={index} value={program.name}>{program.name}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Category</Label>\r\n              <Select value={newResult.category} onChange={(e) => setNewResult({ ...newResult, category: e.target.value })}>\r\n                <option value=\"\">Select Category</option>\r\n                {categories.map((category, index) => (\r\n                  <option key={index} value={category.name}>{category.name}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Participants</Label>\r\n              <div>\r\n                {newResult.participants.map((participant, index) => (\r\n                  <div key={index}>\r\n                    <Input type=\"text\" value={participant.name} onChange={(e) => {\r\n                      const updatedParticipants = [...newResult.participants];\r\n                      updatedParticipants[index].name = e.target.value;\r\n                      setNewResult({ ...newResult, participants: updatedParticipants });\r\n                    }} />\r\n                    <Input type=\"text\" value={participant.position} onChange={(e) => {\r\n                      const updatedParticipants = [...newResult.participants];\r\n                      updatedParticipants[index].position = e.target.value;\r\n                      setNewResult({ ...newResult, participants: updatedParticipants });\r\n                    }} />\r\n                  </div>\r\n                ))}\r\n                <Button onClick={() => setNewResult({ ...newResult, participants: [...newResult.participants, { name: '', position: '' }] })}>Add Participant</Button>\r\n              </div>\r\n            </FormGroup>\r\n            <Button onClick={() => {\r\n              setResults([...results, newResult]);\r\n              saveToLocalStorage('results', [...results, newResult]);\r\n              setNewResult({ event: '', program: '', category: '', participants: [{ name: '', position: '' }] });\r\n            }}>Add Result</Button>\r\n          </FormContainer>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <Th>Event</Th>\r\n                <Th>Program</Th>\r\n                <Th>Category</Th>\r\n                <Th>Participants</Th>\r\n                <Th>Actions</Th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {results.map((result, index) => (\r\n                <Tr key={index}>\r\n                  <Td>{result.event}</Td>\r\n                  <Td>{result.program}</Td>\r\n                  <Td>{result.category}</Td>\r\n                  <Td>{result.participants.map(participant => `${participant.name} (${participant.position})`).join(', ')}</Td>\r\n                  <Td>\r\n                    <Button onClick={() => {\r\n                      setSelectedEvent(index);\r\n                      setNewResult(result);\r\n                    }}>Edit</Button>\r\n                    <Button onClick={() => {\r\n                      const updatedResults = results.filter((_, i) => i !== index);\r\n                      setResults(updatedResults);\r\n                      saveToLocalStorage('results', updatedResults);\r\n                    }}>Delete</Button>\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      )}\r\n      {activeTab === 'points' && (\r\n        <div>\r\n          <FormContainer>\r\n            <FormTitle>Configure Default Points</FormTitle>\r\n            <p>These are the default points for all categories and grades (1st: 3, 2nd: 2, 3rd: 1)</p>\r\n            <FormGroup>\r\n              <Label>1st Position (Gold)</Label>\r\n              <Input type=\"number\" value={points.gold} onChange={(e) => setPoints({ ...points, gold: parseInt(e.target.value) })} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>2nd Position (Silver)</Label>\r\n              <Input type=\"number\" value={points.silver} onChange={(e) => setPoints({ ...points, silver: parseInt(e.target.value) })} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>3rd Position (Bronze)</Label>\r\n              <Input type=\"number\" value={points.bronze} onChange={(e) => setPoints({ ...points, bronze: parseInt(e.target.value) })} />\r\n            </FormGroup>\r\n            <Button onClick={() => {\r\n              saveToLocalStorage('points', points);\r\n            }}>Save Default Points</Button>\r\n            <Button \r\n              onClick={resetAllPointsToNewSystem}\r\n              style={{ background: '#ff4757', marginLeft: '10px' }}\r\n            >\r\n              Reset All Points to New System\r\n            </Button>\r\n          </FormContainer>\r\n          \r\n          {/* Display current saved points configuration */}\r\n          <FormContainer>\r\n            <FormTitle>Current Saved Points Configuration</FormTitle>\r\n            <h4>Default Points</h4>\r\n            <p>1st: {points.gold}, 2nd: {points.silver}, 3rd: {points.bronze}</p>\r\n            \r\n            {Object.keys(categoryPoints).length > 0 && (\r\n              <div>\r\n                <h4>Category-Specific Points</h4>\r\n                {Object.entries(categoryPoints).map(([category, pointsConfig]) => (\r\n                  <p key={category}>{category}: 1st: {pointsConfig.gold}, 2nd: {pointsConfig.silver}, 3rd: {pointsConfig.bronze}</p>\r\n                ))}\r\n              </div>\r\n            )}\r\n            \r\n            {Object.keys(gradePoints).length > 0 && (\r\n              <div>\r\n                <h4>Grade-Specific Points</h4>\r\n                {Object.entries(gradePoints).map(([key, pointsConfig]) => {\r\n                  const [category, grade] = key.split('-');\r\n                  return (\r\n                    <p key={key}>{category} - Grade {grade}: 1st: {pointsConfig.gold}, 2nd: {pointsConfig.silver}, 3rd: {pointsConfig.bronze}</p>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n            \r\n            <Button onClick={refreshData} style={{ marginTop: '10px' }}>\r\n              Refresh Points Data\r\n            </Button>\r\n          </FormContainer>\r\n          <FormContainer>\r\n            <FormTitle>Configure Category Points</FormTitle>\r\n            <p>Set different points for specific categories (overrides default points)</p>\r\n            <FormGroup>\r\n              <Label>Category</Label>\r\n              <Select value={selectedCategoryForPoints} onChange={(e) => setSelectedCategoryForPoints(e.target.value)}>\r\n                <option value=\"\">Select Category</option>\r\n                {categories.map((category, index) => (\r\n                  <option key={index} value={category.name}>{category.name}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>1st Position (Gold)</Label>\r\n              <Input type=\"number\" value={categoryPoints[selectedCategoryForPoints]?.gold || ''} onChange={(e) => {\r\n                setCategoryPoints({\r\n                  ...categoryPoints,\r\n                  [selectedCategoryForPoints]: {\r\n                    ...categoryPoints[selectedCategoryForPoints],\r\n                    gold: parseInt(e.target.value)\r\n                  }\r\n                });\r\n              }} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>2nd Position (Silver)</Label>\r\n              <Input type=\"number\" value={categoryPoints[selectedCategoryForPoints]?.silver || ''} onChange={(e) => {\r\n                setCategoryPoints({\r\n                  ...categoryPoints,\r\n                  [selectedCategoryForPoints]: {\r\n                    ...categoryPoints[selectedCategoryForPoints],\r\n                    silver: parseInt(e.target.value)\r\n                  }\r\n                });\r\n              }} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>3rd Position (Bronze)</Label>\r\n              <Input type=\"number\" value={categoryPoints[selectedCategoryForPoints]?.bronze || ''} onChange={(e) => {\r\n                setCategoryPoints({\r\n                  ...categoryPoints,\r\n                  [selectedCategoryForPoints]: {\r\n                    ...categoryPoints[selectedCategoryForPoints],\r\n                    bronze: parseInt(e.target.value)\r\n                  }\r\n                });\r\n              }} />\r\n            </FormGroup>\r\n            <Button onClick={() => {\r\n              saveToLocalStorage('categoryPoints', categoryPoints);\r\n            }}>Save Category Points</Button>\r\n          </FormContainer>\r\n          <FormContainer>\r\n            <FormTitle>Configure Grade Points</FormTitle>\r\n            <p>Set different points for specific grades (overrides category and default points)</p>\r\n            <p><strong>Example:</strong> Grade A = 5 points, Grade B = 3 points</p>\r\n            <FormGroup>\r\n              <Label>Grade</Label>\r\n              <Select value={selectedGradeForPoints} onChange={(e) => setSelectedGradeForPoints(e.target.value)}>\r\n                <option value=\"\">Select Grade</option>\r\n                {availableGrades.map((grade, index) => (\r\n                  <option key={index} value={grade}>{grade}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            \r\n            {/* Category Selection for Grade Points */}\r\n            <FormGroup>\r\n              <Label>Categories</Label>\r\n              <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap', marginBottom: '10px' }}>\r\n                <Button \r\n                  onClick={() => {\r\n                    if (selectedCategoriesForBatch.length === categories.length) {\r\n                      // Deselect all\r\n                      setSelectedCategoriesForBatch([]);\r\n                    } else {\r\n                      // Select all\r\n                      setSelectedCategoriesForBatch(categories.map(cat => cat.name));\r\n                    }\r\n                  }}\r\n                  style={{\r\n                    background: selectedCategoriesForBatch.length === categories.length ? 'gold' : 'rgba(255,255,255,0.2)',\r\n                    color: selectedCategoriesForBatch.length === categories.length ? '#333' : 'white'\r\n                  }}\r\n                >\r\n                  {selectedCategoriesForBatch.length === categories.length ? 'Deselect All' : 'Select All'}\r\n                </Button>\r\n              </div>\r\n              <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>\r\n                {categories.map((category) => (\r\n                  <label key={category.name} style={{ display: 'flex', alignItems: 'center', cursor: 'pointer' }}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={selectedCategoriesForBatch.includes(category.name)}\r\n                      onChange={(e) => {\r\n                        if (e.target.checked) {\r\n                          setSelectedCategoriesForBatch([...selectedCategoriesForBatch, category.name]);\r\n                        } else {\r\n                          setSelectedCategoriesForBatch(selectedCategoriesForBatch.filter(cat => cat !== category.name));\r\n                        }\r\n                      }}\r\n                      style={{ marginRight: '5px' }}\r\n                    />\r\n                    {category.name}\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </FormGroup>\r\n            \r\n            <FormGroup>\r\n              <Label>1st Position (Gold)</Label>\r\n              <Input type=\"number\" value={gradePoints[selectedGradeForPoints]?.gold || ''} onChange={(e) => {\r\n                setGradePoints({\r\n                  ...gradePoints,\r\n                  [selectedGradeForPoints]: {\r\n                    ...gradePoints[selectedGradeForPoints],\r\n                    gold: parseInt(e.target.value)\r\n                  }\r\n                });\r\n              }} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>2nd Position (Silver)</Label>\r\n              <Input type=\"number\" value={gradePoints[selectedGradeForPoints]?.silver || ''} onChange={(e) => {\r\n                setGradePoints({\r\n                  ...gradePoints,\r\n                  [selectedGradeForPoints]: {\r\n                    ...gradePoints[selectedGradeForPoints],\r\n                    silver: parseInt(e.target.value)\r\n                  }\r\n                });\r\n              }} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>3rd Position (Bronze)</Label>\r\n              <Input type=\"number\" value={gradePoints[selectedGradeForPoints]?.bronze || ''} onChange={(e) => {\r\n                setGradePoints({\r\n                  ...gradePoints,\r\n                  [selectedGradeForPoints]: {\r\n                    ...gradePoints[selectedGradeForPoints],\r\n                    bronze: parseInt(e.target.value)\r\n                  }\r\n                });\r\n              }} />\r\n            </FormGroup>\r\n            <Button \r\n              onClick={() => {\r\n                // Apply grade points to all selected categories\r\n                const updatedGradePoints = { ...gradePoints };\r\n                selectedCategoriesForBatch.forEach(categoryName => {\r\n                  const key = `${categoryName}-${selectedGradeForPoints}`;\r\n                  updatedGradePoints[key] = {\r\n                    gold: gradePoints[selectedGradeForPoints]?.gold || 0,\r\n                    silver: gradePoints[selectedGradeForPoints]?.silver || 0,\r\n                    bronze: gradePoints[selectedGradeForPoints]?.bronze || 0\r\n                  };\r\n                });\r\n                setGradePoints(updatedGradePoints);\r\n                saveToLocalStorage('gradePoints', updatedGradePoints);\r\n              }}\r\n              disabled={!selectedGradeForPoints || selectedCategoriesForBatch.length === 0}\r\n            >\r\n              Save Grade Points for Selected Categories\r\n            </Button>\r\n          </FormContainer>\r\n          <FormContainer>\r\n            <FormTitle>Configure Available Grades</FormTitle>\r\n            <FormGroup>\r\n              <Label>Grades</Label>\r\n              <Input type=\"text\" value={availableGrades.join(', ')} onChange={(e) => setAvailableGrades(e.target.value.split(',').map(grade => grade.trim()))} />\r\n            </FormGroup>\r\n            <Button onClick={() => {\r\n              saveToLocalStorage('availableGrades', availableGrades);\r\n            }}>Save Grades</Button>\r\n          </FormContainer>\r\n          <FormContainer>\r\n            <FormTitle>Quick Configure Grade Points</FormTitle>\r\n            <p>Quickly set grade points for multiple categories at once</p>\r\n            <p><strong>Example:</strong> Set Grade A to 5 points for selected categories</p>\r\n            \r\n            {/* Category Selection for Batch Grade Points */}\r\n            <FormGroup>\r\n              <Label>Apply to Categories</Label>\r\n              <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap', marginBottom: '10px' }}>\r\n                <Button \r\n                  onClick={() => {\r\n                    if (selectedCategoriesForBatch.length === categories.length) {\r\n                      // Deselect all\r\n                      setSelectedCategoriesForBatch([]);\r\n                    } else {\r\n                      // Select all\r\n                      setSelectedCategoriesForBatch(categories.map(cat => cat.name));\r\n                    }\r\n                  }}\r\n                  style={{\r\n                    background: selectedCategoriesForBatch.length === categories.length ? 'gold' : 'rgba(255,255,255,0.2)',\r\n                    color: selectedCategoriesForBatch.length === categories.length ? '#333' : 'white'\r\n                  }}\r\n                >\r\n                  {selectedCategoriesForBatch.length === categories.length ? 'Deselect All' : 'Select All'}\r\n                </Button>\r\n              </div>\r\n              <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>\r\n                {categories.map((category) => (\r\n                  <label key={category.name} style={{ display: 'flex', alignItems: 'center', cursor: 'pointer' }}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={selectedCategoriesForBatch.includes(category.name)}\r\n                      onChange={(e) => {\r\n                        if (e.target.checked) {\r\n                          setSelectedCategoriesForBatch([...selectedCategoriesForBatch, category.name]);\r\n                        } else {\r\n                          setSelectedCategoriesForBatch(selectedCategoriesForBatch.filter(cat => cat !== category.name));\r\n                        }\r\n                      }}\r\n                      style={{ marginRight: '5px' }}\r\n                    />\r\n                    {category.name}\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </FormGroup>\r\n            \r\n            <FormGroup>\r\n              <Label>1st Position (Gold)</Label>\r\n              <Input type=\"number\" value={newGradePoints.gold} onChange={(e) => setNewGradePoints({ ...newGradePoints, gold: parseInt(e.target.value) })} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>2nd Position (Silver)</Label>\r\n              <Input type=\"number\" value={newGradePoints.silver} onChange={(e) => setNewGradePoints({ ...newGradePoints, silver: parseInt(e.target.value) })} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>3rd Position (Bronze)</Label>\r\n              <Input type=\"number\" value={newGradePoints.bronze} onChange={(e) => setNewGradePoints({ ...newGradePoints, bronze: parseInt(e.target.value) })} />\r\n            </FormGroup>\r\n            <Button \r\n              onClick={() => {\r\n                // Apply new grade points to all selected categories\r\n                const updatedGradePoints = { ...gradePoints };\r\n                selectedCategoriesForBatch.forEach(categoryName => {\r\n                  const key = `${categoryName}-${selectedGradeForPoints}`;\r\n                  updatedGradePoints[key] = { ...newGradePoints };\r\n                });\r\n                setGradePoints(updatedGradePoints);\r\n                saveToLocalStorage('gradePoints', updatedGradePoints);\r\n              }}\r\n              disabled={selectedCategoriesForBatch.length === 0}\r\n            >\r\n              Apply New Grade Points to Selected Categories\r\n            </Button>\r\n          </FormContainer>\r\n        </div>\r\n      )}\r\n      {activeTab === 'teamManagers' && (\r\n        <div>\r\n          <FormContainer>\r\n            <FormTitle>Add New Team Manager</FormTitle>\r\n            <FormGroup>\r\n              <Label>Event</Label>\r\n              <Select value={newTeamManager.event} onChange={(e) => setNewTeamManager({ ...newTeamManager, event: e.target.value })}>\r\n                <option value=\"\">Select Event</option>\r\n                {events.map((event, index) => (\r\n                  <option key={index} value={event.name}>{event.name}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Username</Label>\r\n              <Input type=\"text\" value={newTeamManager.username} onChange={(e) => setNewTeamManager({ ...newTeamManager, username: e.target.value })} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Password</Label>\r\n              <Input type=\"password\" value={newTeamManager.password} onChange={(e) => setNewTeamManager({ ...newTeamManager, password: e.target.value })} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Team</Label>\r\n              <Select value={newTeamManager.team} onChange={(e) => setNewTeamManager({ ...newTeamManager, team: e.target.value })}>\r\n                <option value=\"\">Select Team</option>\r\n                {teams.map((team, index) => (\r\n                  <option key={index} value={team.name}>{team.name}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            <Button \r\n              onClick={() => {\r\n                if (!newTeamManager.event) {\r\n                  alert('Please select an event before adding a team manager');\r\n                  return;\r\n                }\r\n                if (!newTeamManager.username.trim() || !newTeamManager.password.trim() || !newTeamManager.team.trim()) {\r\n                  alert('Please fill in all required fields');\r\n                  return;\r\n                }\r\n                setTeamManagers([...teamManagers, newTeamManager]);\r\n                saveToLocalStorage('teamManagers', [...teamManagers, newTeamManager]);\r\n                setNewTeamManager({ username: '', password: '', event: '', team: '' });\r\n              }}\r\n              disabled={!newTeamManager.event}\r\n            >\r\n              Add Team Manager\r\n            </Button>\r\n          </FormContainer>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <Th>Event</Th>\r\n                <Th>Username</Th>\r\n                <Th>Team</Th>\r\n                <Th>Actions</Th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {teamManagers.map((manager, index) => (\r\n                <Tr key={index}>\r\n                  <Td>{manager.event || 'N/A'}</Td>\r\n                  <Td>{manager.username}</Td>\r\n                  <Td>{manager.team}</Td>\r\n                  <Td>\r\n                    <Button onClick={() => {\r\n                      setSelectedEvent(index);\r\n                      // Ensure the manager object has all the required properties\r\n                      const managerWithDefaults = {\r\n                        username: manager.username || '',\r\n                        password: manager.password || '',\r\n                        event: manager.event || '',\r\n                        team: manager.team || ''\r\n                      };\r\n                      setNewTeamManager(managerWithDefaults);\r\n                    }}>Edit</Button>\r\n                    <Button onClick={() => {\r\n                      const updatedTeamManagers = teamManagers.filter((_, i) => i !== index);\r\n                      setTeamManagers(updatedTeamManagers);\r\n                      saveToLocalStorage('teamManagers', updatedTeamManagers);\r\n                    }}>Delete</Button>\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      )}\r\n    </DashboardContainer>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}