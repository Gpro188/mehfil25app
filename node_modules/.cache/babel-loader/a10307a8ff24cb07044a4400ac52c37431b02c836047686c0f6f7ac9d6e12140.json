{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SMIC_STUDIO\\\\Desktop\\\\MEHFIL 25 APP\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { loadFromLocalStorage, saveToLocalStorage, calculateTeamStandings } from '../utils/dataStorage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DashboardContainer = styled.div`\n  padding: 20px;\n  color: white;\n  min-height: 100vh;\n`;\n_c = DashboardContainer;\nconst Header = styled.h1`\n  text-align: center;\n  font-size: 2rem;\n  margin-bottom: 30px;\n  color: gold;\n`;\n_c2 = Header;\nconst TabContainer = styled.div`\n  display: flex;\n  border-bottom: 2px solid rgba(255,255,255,0.2);\n  margin-bottom: 30px;\n  flex-wrap: wrap;\n`;\n_c3 = TabContainer;\nconst Tab = styled.button`\n  padding: 15px 30px;\n  background: ${props => props.active ? 'rgba(255,255,255,0.2)' : 'transparent'};\n  color: ${props => props.active ? 'gold' : 'white'};\n  border: none;\n  cursor: pointer;\n  font-size: 1.1rem;\n  font-weight: bold;\n\n  &:hover {\n    background: rgba(255,255,255,0.1);\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 15px;\n    font-size: 0.9rem;\n  }\n`;\n_c4 = Tab;\nconst FormContainer = styled.div`\n  background: rgba(255,255,255,0.1);\n  border-radius: 15px;\n  padding: 30px;\n  backdrop-filter: blur(10px);\n  margin-bottom: 30px;\n`;\n_c5 = FormContainer;\nconst FormTitle = styled.h2`\n  margin-top: 0;\n  color: gold;\n  border-bottom: 1px solid rgba(255,255,255,0.2);\n  padding-bottom: 10px;\n`;\n_c6 = FormTitle;\nconst FormGroup = styled.div`\n  margin-bottom: 20px;\n`;\n_c7 = FormGroup;\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  font-weight: bold;\n`;\n_c8 = Label;\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px;\n  border-radius: 8px;\n  border: none;\n  background: rgba(255,255,255,0.1);\n  color: white;\n  font-size: 1rem;\n\n  &:focus {\n    outline: 2px solid gold;\n  }\n`;\n_c9 = Input;\nconst Select = styled.select`\n  width: 100%;\n  padding: 12px;\n  border-radius: 8px;\n  border: none;\n  background: rgba(255,255,255,0.1);\n  color: white;\n  font-size: 1rem;\n\n  &:focus {\n    outline: 2px solid gold;\n  }\n`;\n_c0 = Select;\nconst Button = styled.button`\n  padding: 12px 25px;\n  background: gold;\n  color: #333;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-weight: bold;\n  font-size: 1rem;\n  transition: all 0.3s ease;\n  margin-right: 10px;\n  margin-bottom: 10px;\n\n  &:hover {\n    background: #ffd700;\n    transform: translateY(-2px);\n  }\n`;\n_c1 = Button;\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  background: rgba(255,255,255,0.1);\n  border-radius: 10px;\n  overflow: hidden;\n`;\n_c10 = Table;\nconst Th = styled.th`\n  background: rgba(0,0,0,0.2);\n  padding: 15px;\n  text-align: left;\n`;\n_c11 = Th;\nconst Td = styled.td`\n  padding: 15px;\n  border-bottom: 1px solid rgba(255,255,255,0.1);\n`;\n_c12 = Td;\nconst Tr = styled.tr`\n  &:hover {\n    background: rgba(255,255,255,0.05);\n  }\n`;\n_c13 = Tr;\nconst ColorPreview = styled.div`\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background: ${props => `rgb(${props.r}, ${props.g}, ${props.b})`};\n  display: inline-block;\n  margin-right: 10px;\n`;\n_c14 = ColorPreview;\nconst RGBInputContainer = styled.div`\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n`;\n_c15 = RGBInputContainer;\nconst RGBInput = styled.input`\n  width: 80px;\n  padding: 8px;\n  border-radius: 5px;\n  border: none;\n  background: rgba(255,255,255,0.1);\n  color: white;\n  text-align: center;\n`;\n_c16 = RGBInput;\nconst AdminDashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState('events');\n  const [events, setEvents] = useState([]);\n  const [teams, setTeams] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [programs, setPrograms] = useState([]);\n  const [results, setResults] = useState([]);\n  const [points, setPoints] = useState({\n    gold: 10,\n    silver: 7,\n    bronze: 5\n  });\n  // Category-specific points configuration\n  const [categoryPoints, setCategoryPoints] = useState({});\n  // Grade-specific points configuration\n  const [gradePoints, setGradePoints] = useState({});\n  // Available grades configuration\n  const [availableGrades, setAvailableGrades] = useState(['A', 'B', 'C', 'D']);\n  // New grade points configuration\n  const [newGradePoints, setNewGradePoints] = useState({\n    gold: 10,\n    silver: 7,\n    bronze: 5\n  });\n  // Team managers configuration\n  const [teamManagers, setTeamManagers] = useState([]);\n  // Selected event for management\n  const [selectedEvent, setSelectedEvent] = useState('');\n\n  // Form states\n  const [newEvent, setNewEvent] = useState({\n    name: '',\n    categories: [],\n    color: {\n      r: 106,\n      g: 17,\n      b: 203\n    }\n  });\n  const [newTeam, setNewTeam] = useState({\n    name: '',\n    color: '#FF5733'\n  });\n  const [newCategory, setNewCategory] = useState({\n    name: '',\n    order: 1\n  });\n  const [newStudent, setNewStudent] = useState({\n    name: '',\n    chestNumber: '',\n    team: '',\n    category: '',\n    photo: null\n  });\n  const [newProgram, setNewProgram] = useState({\n    name: '',\n    type: 'Individual'\n  });\n  const [newResult, setNewResult] = useState({\n    event: '',\n    program: '',\n    category: '',\n    participants: [{\n      name: '',\n      position: ''\n    }]\n  });\n  const [newTeamManager, setNewTeamManager] = useState({\n    username: '',\n    password: '',\n    team: ''\n  });\n  const [editingTeamManager, setEditingTeamManager] = useState(null);\n  const [adminPassword, setAdminPassword] = useState('admin123');\n  const [selectedCategoryForPoints, setSelectedCategoryForPoints] = useState('');\n  const [selectedGradeForPoints, setSelectedGradeForPoints] = useState('');\n  const [selectedCategoriesForBatch, setSelectedCategoriesForBatch] = useState([]);\n  const [newGrade, setNewGrade] = useState('');\n\n  // Event filtering states\n  const [selectedEventForTeams, setSelectedEventForTeams] = useState('');\n  const [selectedEventForStudents, setSelectedEventForStudents] = useState('');\n  const [selectedEventForPrograms, setSelectedEventForPrograms] = useState('');\n  const [selectedEventForResults, setSelectedEventForResults] = useState('');\n\n  // Load data from localStorage on component mount\n  useEffect(() => {\n    try {\n      const savedEvents = loadFromLocalStorage('events', []);\n      const savedTeams = loadFromLocalStorage('teams', []);\n      const savedCategories = loadFromLocalStorage('categories', []);\n      const savedStudents = loadFromLocalStorage('students', []);\n      const savedPrograms = loadFromLocalStorage('programs', []);\n      const savedResults = loadFromLocalStorage('results', []);\n      const savedPoints = loadFromLocalStorage('points', {\n        gold: 10,\n        silver: 7,\n        bronze: 5\n      });\n      const savedCategoryPoints = loadFromLocalStorage('categoryPoints', {});\n      const savedGradePoints = loadFromLocalStorage('gradePoints', {});\n      const savedPassword = loadFromLocalStorage('adminPassword', 'admin123');\n      const savedAvailableGrades = loadFromLocalStorage('availableGrades', ['A', 'B', 'C', 'D']);\n      const savedTeamManagers = loadFromLocalStorage('teamManagers', []);\n\n      // Load event filtering states\n      const savedSelectedEventForTeams = loadFromLocalStorage('selectedEventForTeams', '');\n      const savedSelectedEventForStudents = loadFromLocalStorage('selectedEventForStudents', '');\n      const savedSelectedEventForPrograms = loadFromLocalStorage('selectedEventForPrograms', '');\n      const savedSelectedEventForResults = loadFromLocalStorage('selectedEventForResults', '');\n      console.log('Admin dashboard loaded data:', {\n        events: savedEvents,\n        teams: savedTeams,\n        categories: savedCategories,\n        students: savedStudents,\n        programs: savedPrograms,\n        results: savedResults,\n        points: savedPoints,\n        categoryPoints: savedCategoryPoints,\n        gradePoints: savedGradePoints,\n        teamManagers: savedTeamManagers\n      });\n      setEvents(savedEvents || []);\n      setTeams(savedTeams || []);\n      setCategories(savedCategories || []);\n      setStudents(savedStudents || []);\n      setPrograms(savedPrograms || []);\n      setResults(savedResults || []);\n      setPoints(savedPoints);\n      setCategoryPoints(savedCategoryPoints || {});\n      setGradePoints(savedGradePoints || {});\n      setAdminPassword(savedPassword);\n      setAvailableGrades(savedAvailableGrades || ['A', 'B', 'C', 'D']);\n      setTeamManagers(savedTeamManagers || []);\n\n      // Set event filtering states\n      setSelectedEventForTeams(savedSelectedEventForTeams || '');\n      setSelectedEventForStudents(savedSelectedEventForStudents || '');\n      setSelectedEventForPrograms(savedSelectedEventForPrograms || '');\n      setSelectedEventForResults(savedSelectedEventForResults || '');\n\n      // Initialize form select options\n      if (savedEvents && savedEvents.length > 0) {\n        setNewResult(prev => ({\n          ...prev,\n          event: savedEvents[0].name\n        }));\n        setSelectedEvent(savedEvents[0].name);\n      }\n      if (savedPrograms && savedPrograms.length > 0) {\n        setNewResult(prev => ({\n          ...prev,\n          program: savedPrograms[0].name\n        }));\n      }\n      if (savedCategories && savedCategories.length > 0) {\n        setNewResult(prev => ({\n          ...prev,\n          category: savedCategories[0].name\n        }));\n        setSelectedCategoryForPoints(savedCategories[0].name);\n        // Initialize selected categories for batch\n        setSelectedCategoriesForBatch(savedCategories.map(cat => cat.name));\n      }\n      if (savedTeams && savedTeams.length > 0) {\n        setNewTeamManager(prev => ({\n          ...prev,\n          team: savedTeams[0].name\n        }));\n      }\n    } catch (error) {\n      console.error('Error loading data in AdminDashboard:', error);\n    }\n  }, []);\n\n  // Initialize selected categories for batch when categories change\n  useEffect(() => {\n    if (categories.length > 0 && selectedCategoriesForBatch.length === 0) {\n      // Initially select all categories\n      setSelectedCategoriesForBatch(categories.map(cat => cat.name));\n    }\n  }, [categories]);\n\n  // Handle logout\n  const handleLogout = () => {\n    localStorage.removeItem('isAdminLoggedIn');\n    navigate('/');\n  };\n\n  // Handle event selection\n  const handleEventSelection = eventName => {\n    setSelectedEvent(eventName);\n\n    // Update forms that depend on event selection\n    setNewTeam({\n      ...newTeam,\n      event: eventName\n    });\n    setNewCategory({\n      ...newCategory,\n      event: eventName\n    });\n    setNewStudent({\n      ...newStudent,\n      event: eventName\n    });\n    setNewProgram({\n      ...newProgram,\n      event: eventName\n    });\n    setNewResult({\n      ...newResult,\n      event: eventName\n    });\n    setNewTeamManager({\n      ...newTeamManager,\n      event: eventName\n    });\n  };\n\n  // Team manager CRUD operations\n  const handleCreateTeamManager = () => {\n    if (newTeamManager.username.trim() === '' || newTeamManager.password.trim() === '' || newTeamManager.team.trim() === '') {\n      alert('Please fill in all fields');\n      return;\n    }\n\n    // Check if username already exists\n    if (teamManagers.some(manager => manager.username === newTeamManager.username)) {\n      alert('A team manager with this username already exists');\n      return;\n    }\n    const teamManager = {\n      id: teamManagers.length + 1,\n      username: newTeamManager.username,\n      password: newTeamManager.password,\n      // In a real app, this should be hashed\n      team: newTeamManager.team\n    };\n    const updatedTeamManagers = [...teamManagers, teamManager];\n    setTeamManagers(updatedTeamManagers);\n    saveToLocalStorage('teamManagers', updatedTeamManagers);\n\n    // Reset form\n    setNewTeamManager({\n      username: '',\n      password: '',\n      team: newTeamManager.team\n    });\n  };\n  const handleEditTeamManager = manager => {\n    setEditingTeamManager(manager);\n    setNewTeamManager({\n      username: manager.username,\n      password: manager.password,\n      team: manager.team\n    });\n  };\n  const handleUpdateTeamManager = () => {\n    if (newTeamManager.username.trim() === '' || newTeamManager.password.trim() === '' || newTeamManager.team.trim() === '') {\n      alert('Please fill in all fields');\n      return;\n    }\n\n    // Check if username already exists (excluding the current manager being edited)\n    if (teamManagers.some(manager => manager.username === newTeamManager.username && manager.id !== editingTeamManager.id)) {\n      alert('A team manager with this username already exists');\n      return;\n    }\n    const updatedTeamManagers = teamManagers.map(manager => manager.id === editingTeamManager.id ? {\n      ...manager,\n      ...newTeamManager\n    } : manager);\n    setTeamManagers(updatedTeamManagers);\n    saveToLocalStorage('teamManagers', updatedTeamManagers);\n\n    // Reset form and editing state\n    setEditingTeamManager(null);\n    setNewTeamManager({\n      username: '',\n      password: '',\n      team: newTeamManager.team\n    });\n  };\n  const handleDeleteTeamManager = managerId => {\n    if (window.confirm('Are you sure you want to delete this team manager?')) {\n      const updatedTeamManagers = teamManagers.filter(manager => manager.id !== managerId);\n      setTeamManagers(updatedTeamManagers);\n      saveToLocalStorage('teamManagers', updatedTeamManagers);\n\n      // Clear form if we were editing this manager\n      if (editingTeamManager && editingTeamManager.id === managerId) {\n        setEditingTeamManager(null);\n        setNewTeamManager({\n          username: '',\n          password: '',\n          team: newTeamManager.team\n        });\n      }\n    }\n  };\n  const handleCancelEdit = () => {\n    setEditingTeamManager(null);\n    setNewTeamManager({\n      username: '',\n      password: '',\n      team: newTeamManager.team\n    });\n  };\n\n  // Function to pre-configure points for a new grade across all categories\n  const preConfigureGradePoints = (grade, pointsConfig) => {\n    const updatedGradePoints = {\n      ...gradePoints\n    };\n\n    // For each category, create a default grade point configuration\n    categories.forEach(category => {\n      const key = `${category.name}-${grade}`;\n      updatedGradePoints[key] = {\n        ...pointsConfig\n      };\n    });\n    setGradePoints(updatedGradePoints);\n  };\n\n  // Update team standings when results or points change\n  useEffect(() => {\n    const savedTeams = loadFromLocalStorage('teams', []);\n    const updatedTeams = calculateTeamStandings(savedTeams, results, points, categoryPoints, gradePoints);\n    setTeams(updatedTeams);\n  }, [results, points, categoryPoints, gradePoints]);\n\n  // Save data to localStorage whenever state changes\n  useEffect(() => {\n    saveToLocalStorage('events', events);\n  }, [events]);\n  useEffect(() => {\n    saveToLocalStorage('teams', teams);\n  }, [teams]);\n  useEffect(() => {\n    saveToLocalStorage('categories', categories);\n  }, [categories]);\n  useEffect(() => {\n    saveToLocalStorage('students', students);\n  }, [students]);\n  useEffect(() => {\n    saveToLocalStorage('programs', programs);\n  }, [programs]);\n  useEffect(() => {\n    saveToLocalStorage('results', results);\n  }, [results]);\n  useEffect(() => {\n    saveToLocalStorage('points', points);\n  }, [points]);\n  useEffect(() => {\n    saveToLocalStorage('categoryPoints', categoryPoints);\n  }, [categoryPoints]);\n  useEffect(() => {\n    saveToLocalStorage('gradePoints', gradePoints);\n  }, [gradePoints]);\n  useEffect(() => {\n    saveToLocalStorage('adminPassword', adminPassword);\n  }, [adminPassword]);\n  useEffect(() => {\n    saveToLocalStorage('availableGrades', availableGrades);\n  }, [availableGrades]);\n  useEffect(() => {\n    saveToLocalStorage('teamManagers', teamManagers);\n  }, [teamManagers]);\n\n  // Save event filtering states to localStorage\n  useEffect(() => {\n    saveToLocalStorage('selectedEventForTeams', selectedEventForTeams);\n  }, [selectedEventForTeams]);\n  useEffect(() => {\n    saveToLocalStorage('selectedEventForStudents', selectedEventForStudents);\n  }, [selectedEventForStudents]);\n  useEffect(() => {\n    saveToLocalStorage('selectedEventForPrograms', selectedEventForPrograms);\n  }, [selectedEventForPrograms]);\n  useEffect(() => {\n    saveToLocalStorage('selectedEventForResults', selectedEventForResults);\n  }, [selectedEventForResults]);\n  const handleCreateEvent = () => {\n    if (newEvent.name.trim() === '') return;\n    const event = {\n      id: events.length + 1,\n      name: newEvent.name,\n      categories: categories.map(cat => cat.name),\n      color: newEvent.color\n    };\n    setEvents([...events, event]);\n    setNewEvent({\n      name: '',\n      categories: [],\n      color: {\n        r: 106,\n        g: 17,\n        b: 203\n      }\n    });\n  };\n  const handleCreateTeam = () => {\n    if (newTeam.name.trim() === '') return;\n    const team = {\n      id: teams.length + 1,\n      name: newTeam.name,\n      color: newTeam.color\n    };\n    setTeams([...teams, team]);\n    setNewTeam({\n      name: '',\n      color: '#FF5733'\n    });\n  };\n  const handleCreateCategory = () => {\n    if (newCategory.name.trim() === '') return;\n    const category = {\n      id: categories.length + 1,\n      name: newCategory.name,\n      order: newCategory.order\n    };\n    setCategories([...categories, category]);\n    setNewCategory({\n      name: '',\n      order: categories.length + 2\n    });\n  };\n  const handleCreateStudent = () => {\n    if (newStudent.name.trim() === '' || newStudent.chestNumber.trim() === '') return;\n    const student = {\n      id: students.length + 1,\n      name: newStudent.name,\n      chestNumber: newStudent.chestNumber,\n      team: newStudent.team,\n      category: newStudent.category,\n      photo: newStudent.photo || null\n    };\n    const updatedStudents = [...students, student];\n    setStudents(updatedStudents);\n    console.log('Student created:', student);\n    setNewStudent({\n      name: '',\n      chestNumber: '',\n      team: '',\n      category: '',\n      photo: null\n    });\n  };\n  const handleCreateProgram = () => {\n    if (newProgram.name.trim() === '') return;\n    const program = {\n      id: programs.length + 1,\n      name: newProgram.name,\n      type: newProgram.type\n    };\n    setPrograms([...programs, program]);\n    setNewProgram({\n      name: '',\n      type: 'Individual'\n    });\n  };\n  const handleAddParticipant = () => {\n    setNewResult({\n      ...newResult,\n      participants: [...newResult.participants, {\n        name: '',\n        position: ''\n      }]\n    });\n  };\n  const handleParticipantChange = (index, field, value) => {\n    const updatedParticipants = [...newResult.participants];\n    updatedParticipants[index][field] = value;\n    setNewResult({\n      ...newResult,\n      participants: updatedParticipants\n    });\n  };\n  const handleRemoveParticipant = index => {\n    if (newResult.participants.length <= 1) return;\n    const updatedParticipants = [...newResult.participants];\n    updatedParticipants.splice(index, 1);\n    setNewResult({\n      ...newResult,\n      participants: updatedParticipants\n    });\n  };\n  const handleSaveResult = () => {\n    // Calculate points based on position, category, and grade\n    const participantsWithPoints = newResult.participants.map(participant => {\n      let pointValue = 0;\n\n      // Extract grade from participant name if it exists (e.g., \"John Doe (A)\" or \"SJ001 (B)\")\n      let grade = '';\n      let participantName = participant.name;\n\n      // Updated regex to handle more grades (A, B, C, D)\n      const gradeMatch = participant.name.match(/\\(([A-D])\\)$/);\n      if (gradeMatch) {\n        grade = gradeMatch[1];\n        participantName = participant.name.replace(/\\s*\\([A-D]\\)$/, '');\n      }\n\n      // Use grade-specific points if available\n      let pointConfig = points; // default\n\n      // Use the category from the current result being saved, not the selected category for points configuration\n      if (grade && newResult.category) {\n        const gradeKey = `${newResult.category}-${grade}`;\n        if (gradePoints[gradeKey]) {\n          pointConfig = gradePoints[gradeKey];\n        } else if (categoryPoints[newResult.category]) {\n          // Fall back to category-specific points\n          pointConfig = categoryPoints[newResult.category];\n        }\n      } else if (categoryPoints[newResult.category]) {\n        // Use category-specific points if no grade specified\n        pointConfig = categoryPoints[newResult.category];\n      }\n      switch (participant.position.toLowerCase()) {\n        case '1':\n        case 'first':\n        case 'gold':\n          pointValue = pointConfig.gold;\n          break;\n        case '2':\n        case 'second':\n        case 'silver':\n          pointValue = pointConfig.silver;\n          break;\n        case '3':\n        case 'third':\n        case 'bronze':\n          pointValue = pointConfig.bronze;\n          break;\n        default:\n          pointValue = 0;\n      }\n      return {\n        ...participant,\n        points: pointValue\n      };\n    });\n    const result = {\n      id: results.length + 1,\n      event: newResult.event,\n      program: newResult.program,\n      category: newResult.category,\n      participants: participantsWithPoints,\n      timestamp: new Date().toISOString()\n    };\n    setResults([...results, result]);\n\n    // Reset form\n    setNewResult({\n      event: newResult.event,\n      program: newResult.program,\n      category: newResult.category,\n      participants: [{\n        name: '',\n        position: ''\n      }]\n    });\n  };\n  const handleChangePassword = () => {\n    // In a real app, you would validate the current password first\n    const newPassword = prompt('Enter new password:');\n    if (newPassword && newPassword.trim() !== '') {\n      setAdminPassword(newPassword.trim());\n      alert('Password updated successfully!');\n    }\n  };\n  const handleSaveCategoryPoints = () => {\n    if (!selectedCategoryForPoints) return;\n    setCategoryPoints({\n      ...categoryPoints,\n      [selectedCategoryForPoints]: {\n        ...points\n      }\n    });\n    alert(`Points configuration saved for category: ${selectedCategoryForPoints}`);\n  };\n  const handleCategoryChangeForPoints = categoryName => {\n    setSelectedCategoryForPoints(categoryName);\n\n    // Load existing points for this category if they exist\n    if (categoryPoints[categoryName]) {\n      setPoints(categoryPoints[categoryName]);\n    } else {\n      // Reset to default points if no custom points for this category\n      setPoints({\n        gold: 10,\n        silver: 7,\n        bronze: 5\n      });\n    }\n  };\n\n  // Handle grade selection for points configuration\n  const handleGradeChangeForPoints = grade => {\n    setSelectedGradeForPoints(grade);\n\n    // Create a key for category-grade combination\n    const key = `${selectedCategoryForPoints}-${grade}`;\n\n    // Load existing points for this category-grade combination if they exist\n    if (gradePoints[key]) {\n      setPoints(gradePoints[key]);\n    } else {\n      // Check if there are category-specific points\n      if (categoryPoints[selectedCategoryForPoints]) {\n        setPoints(categoryPoints[selectedCategoryForPoints]);\n      } else {\n        // Reset to default points\n        setPoints({\n          gold: 10,\n          silver: 7,\n          bronze: 5\n        });\n      }\n    }\n  };\n\n  // Pre-populate A grade points example\n  const handlePrepopulateAGrade = () => {\n    if (!selectedCategoryForPoints) {\n      alert('Please select a category first');\n      return;\n    }\n    setSelectedGradeForPoints('A');\n    setPoints({\n      gold: 10,\n      silver: 7,\n      bronze: 5\n    });\n  };\n\n  // Save grade-specific points\n  const handleSaveGradePoints = () => {\n    if (!selectedCategoryForPoints || !selectedGradeForPoints) return;\n    const key = `${selectedCategoryForPoints}-${selectedGradeForPoints}`;\n    setGradePoints({\n      ...gradePoints,\n      [key]: {\n        ...points\n      }\n    });\n    alert(`Points configuration saved for category: ${selectedCategoryForPoints}, grade: ${selectedGradeForPoints}`);\n  };\n  return /*#__PURE__*/_jsxDEV(DashboardContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'switcher',\n        onClick: () => setActiveTab('switcher'),\n        children: \"Role Switcher\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'events',\n        onClick: () => setActiveTab('events'),\n        children: \"Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'categories',\n        onClick: () => setActiveTab('categories'),\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'teams',\n        onClick: () => setActiveTab('teams'),\n        children: \"Teams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'students',\n        onClick: () => setActiveTab('students'),\n        children: \"Students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'programs',\n        onClick: () => setActiveTab('programs'),\n        children: \"Programs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'results',\n        onClick: () => setActiveTab('results'),\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'managers',\n        onClick: () => setActiveTab('managers'),\n        children: \"Team Managers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'grades',\n        onClick: () => setActiveTab('grades'),\n        children: \"Grades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 758,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'batch-points',\n        onClick: () => setActiveTab('batch-points'),\n        children: \"Batch Points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'points',\n        onClick: () => setActiveTab('points'),\n        children: \"Points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 7\n    }, this), activeTab === 'switcher' && /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Switch Between Roles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '20px',\n          flexWrap: 'wrap',\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate('/'),\n          style: {\n            background: 'rgba(255,255,255,0.2)',\n            color: 'white'\n          },\n          children: \"Public View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {},\n          style: {\n            background: 'gold',\n            color: '#333'\n          },\n          children: \"Admin Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate('/team-manager-login'),\n          style: {\n            background: 'rgba(255,255,255,0.2)',\n            color: 'white'\n          },\n          children: \"Team Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleLogout,\n          style: {\n            background: '#ff4757',\n            color: 'white'\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 9\n    }, this), activeTab === 'events' && /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Create New Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 797,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Event Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: newEvent.name,\n          onChange: e => setNewEvent({\n            ...newEvent,\n            name: e.target.value\n          }),\n          placeholder: \"Enter event name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Event Color (RGB)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RGBInputContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"R\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RGBInput, {\n              type: \"number\",\n              min: \"0\",\n              max: \"255\",\n              value: newEvent.color.r,\n              onChange: e => setNewEvent({\n                ...newEvent,\n                color: {\n                  ...newEvent.color,\n                  r: parseInt(e.target.value) || 0\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 813,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"G\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RGBInput, {\n              type: \"number\",\n              min: \"0\",\n              max: \"255\",\n              value: newEvent.color.g,\n              onChange: e => setNewEvent({\n                ...newEvent,\n                color: {\n                  ...newEvent.color,\n                  g: parseInt(e.target.value) || 0\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 826,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 838,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RGBInput, {\n              type: \"number\",\n              min: \"0\",\n              max: \"255\",\n              value: newEvent.color.b,\n              onChange: e => setNewEvent({\n                ...newEvent,\n                color: {\n                  ...newEvent.color,\n                  b: parseInt(e.target.value) || 0\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 839,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 851,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ColorPreview, {\n              r: newEvent.color.r,\n              g: newEvent.color.g,\n              b: newEvent.color.b\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 852,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 850,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCreateEvent,\n        children: \"Create Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Existing Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 859,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 863,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Categories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 864,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 865,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 862,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: events.map(event => /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: event.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 871,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: event.categories.join(', ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 872,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: [/*#__PURE__*/_jsxDEV(ColorPreview, {\n                r: event.color.r,\n                g: event.color.g,\n                b: event.color.b\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 874,\n                columnNumber: 21\n              }, this), \"RGB(\", event.color.r, \", \", event.color.g, \", \", event.color.b, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 873,\n              columnNumber: 19\n            }, this)]\n          }, event.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 870,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 860,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 796,\n      columnNumber: 9\n    }, this), activeTab === 'categories' && /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Manage Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 886,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Select Event First\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedEvent,\n          onChange: e => handleEventSelection(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select an event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 894,\n            columnNumber: 15\n          }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: event.name,\n            children: event.name\n          }, event.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 896,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 11\n      }, this), selectedEvent ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Category Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 904,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: newCategory.name,\n            onChange: e => setNewCategory({\n              ...newCategory,\n              name: e.target.value\n            }),\n            placeholder: \"Enter category name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 905,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Display Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 914,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: newCategory.order,\n            onChange: e => setNewCategory({\n              ...newCategory,\n              order: parseInt(e.target.value) || 1\n            }),\n            placeholder: \"Enter display order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 913,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCreateCategory,\n          children: \"Add Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Existing Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(Th, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 929,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 930,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 928,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 927,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: categories.map(category => /*#__PURE__*/_jsxDEV(Tr, {\n              children: [/*#__PURE__*/_jsxDEV(Td, {\n                children: category.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 936,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: category.order\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 937,\n                columnNumber: 23\n              }, this)]\n            }, category.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 935,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please select an event first to manage categories.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 944,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 885,\n      columnNumber: 9\n    }, this), activeTab === 'teams' && /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Create New Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 951,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Select Event First\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 954,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedEvent,\n          onChange: e => handleEventSelection(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select an event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 959,\n            columnNumber: 15\n          }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: event.name,\n            children: event.name\n          }, event.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 961,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 955,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 11\n      }, this), selectedEvent ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Team Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 969,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: newTeam.name,\n            onChange: e => setNewTeam({\n              ...newTeam,\n              name: e.target.value\n            }),\n            placeholder: \"Enter team name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 970,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Team Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 979,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"color\",\n            value: newTeam.color,\n            onChange: e => setNewTeam({\n              ...newTeam,\n              color: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCreateTeam,\n          children: \"Create Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 987,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '30px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"Filter Teams by Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 992,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: selectedEventForTeams,\n              onChange: e => setSelectedEventForTeams(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"All Events\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 997,\n                columnNumber: 21\n              }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: event.name,\n                children: event.name\n              }, event.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 999,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 993,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 991,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Existing Teams\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1004,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(Th, {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1008,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Th, {\n                  children: \"Color\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1009,\n                  columnNumber: 23\n                }, this), selectedEventForTeams && /*#__PURE__*/_jsxDEV(Th, {\n                  children: [\"Participated in \", selectedEventForTeams]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1010,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1007,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1006,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: teams.map(team => {\n                // Filter teams that participated in the selected event if any\n                if (selectedEventForTeams) {\n                  const teamResults = results.filter(result => result.event === selectedEventForTeams && result.participants.some(participant => {\n                    const student = students.find(s => s.chestNumber === participant.name || s.name === participant.name);\n                    return student && student.team === team.name;\n                  }));\n\n                  // If no results for this team in the selected event, skip\n                  if (teamResults.length === 0) return null;\n                }\n                return /*#__PURE__*/_jsxDEV(Tr, {\n                  children: [/*#__PURE__*/_jsxDEV(Td, {\n                    children: team.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1034,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: [/*#__PURE__*/_jsxDEV(ColorPreview, {\n                      r: parseInt(team.color.slice(1, 3), 16),\n                      g: parseInt(team.color.slice(3, 5), 16),\n                      b: parseInt(team.color.slice(5, 7), 16)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1036,\n                      columnNumber: 29\n                    }, this), team.color]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1035,\n                    columnNumber: 27\n                  }, this), selectedEventForTeams && /*#__PURE__*/_jsxDEV(Td, {\n                    children: \"Participated\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1042,\n                    columnNumber: 29\n                  }, this)]\n                }, team.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1033,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1013,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1005,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 990,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please select an event first to manage teams.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1054,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 950,\n      columnNumber: 9\n    }, this), activeTab === 'students' && /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Register Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1061,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Select Event First\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1064,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedEvent,\n          onChange: e => handleEventSelection(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select an event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1069,\n            columnNumber: 15\n          }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: event.name,\n            children: event.name\n          }, event.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1071,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1065,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1063,\n        columnNumber: 11\n      }, this), selectedEvent ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Student Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1079,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: newStudent.name,\n            onChange: e => setNewStudent({\n              ...newStudent,\n              name: e.target.value\n            }),\n            placeholder: \"Enter student name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1080,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1078,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Chest Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1089,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: newStudent.chestNumber,\n            onChange: e => setNewStudent({\n              ...newStudent,\n              chestNumber: e.target.value\n            }),\n            placeholder: \"Enter chest number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1090,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1088,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1099,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newStudent.team,\n            onChange: e => setNewStudent({\n              ...newStudent,\n              team: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1104,\n              columnNumber: 19\n            }, this), teams.map(team => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: team.name,\n              children: team.name\n            }, team.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1106,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1100,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1098,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newStudent.category,\n            onChange: e => setNewStudent({\n              ...newStudent,\n              category: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1117,\n              columnNumber: 19\n            }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category.name,\n              children: category.name\n            }, category.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1119,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1113,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1111,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Student Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1125,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: e => {\n              const file = e.target.files[0];\n              if (file) {\n                const reader = new FileReader();\n                reader.onload = event => {\n                  setNewStudent({\n                    ...newStudent,\n                    photo: event.target.result\n                  });\n                };\n                reader.readAsDataURL(file);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1126,\n            columnNumber: 17\n          }, this), newStudent.photo && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: newStudent.photo,\n              alt: \"Student preview\",\n              style: {\n                maxWidth: '200px',\n                maxHeight: '200px',\n                borderRadius: '5px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1142,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1141,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1124,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCreateStudent,\n          children: \"Register Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1151,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '30px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"Filter Students by Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1156,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: selectedEventForStudents,\n              onChange: e => setSelectedEventForStudents(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"All Events\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1161,\n                columnNumber: 21\n              }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: event.name,\n                children: event.name\n              }, event.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1163,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1157,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1155,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Registered Students\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1168,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(Th, {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1172,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Th, {\n                  children: \"Chest Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1173,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Th, {\n                  children: \"Team\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1174,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Th, {\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1175,\n                  columnNumber: 23\n                }, this), selectedEventForStudents && /*#__PURE__*/_jsxDEV(Th, {\n                  children: [\"Participated in \", selectedEventForStudents]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1176,\n                  columnNumber: 52\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1171,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1170,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: students.map(student => {\n                // Filter students who participated in the selected event if any\n                if (selectedEventForStudents) {\n                  const studentResults = results.filter(result => result.event === selectedEventForStudents && result.participants.some(participant => participant.name === student.chestNumber || participant.name === student.name));\n\n                  // If no results for this student in the selected event, skip\n                  if (studentResults.length === 0) return null;\n                }\n                return /*#__PURE__*/_jsxDEV(Tr, {\n                  children: [/*#__PURE__*/_jsxDEV(Td, {\n                    children: student.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1197,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: student.chestNumber\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1198,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: student.team\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1199,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: student.category\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1200,\n                    columnNumber: 27\n                  }, this), selectedEventForStudents && /*#__PURE__*/_jsxDEV(Td, {\n                    children: \"Participated\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1202,\n                    columnNumber: 29\n                  }, this)]\n                }, student.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1196,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1179,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1169,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1154,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please select an event first to manage students.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1214,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1060,\n      columnNumber: 9\n    }, this), activeTab === 'programs' && /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Define Program\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Select Event First\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedEvent,\n          onChange: e => handleEventSelection(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select an event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1229,\n            columnNumber: 15\n          }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: event.name,\n            children: event.name\n          }, event.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1231,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1225,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1223,\n        columnNumber: 11\n      }, this), selectedEvent ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Program Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1239,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: newProgram.name,\n            onChange: e => setNewProgram({\n              ...newProgram,\n              name: e.target.value\n            }),\n            placeholder: \"Enter program name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1240,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1238,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Program Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1249,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newProgram.type,\n            onChange: e => setNewProgram({\n              ...newProgram,\n              type: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Individual\",\n              children: \"Individual\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1254,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Group\",\n              children: \"Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1255,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"General\",\n              children: \"General\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1256,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1250,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1248,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCreateProgram,\n          children: \"Add Program\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1260,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '30px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"Filter Programs by Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1265,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: selectedEventForPrograms,\n              onChange: e => setSelectedEventForPrograms(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"All Events\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1270,\n                columnNumber: 21\n              }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: event.name,\n                children: event.name\n              }, event.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1272,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1266,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1264,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Existing Programs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1277,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(Th, {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1281,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Th, {\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1282,\n                  columnNumber: 23\n                }, this), selectedEventForPrograms && /*#__PURE__*/_jsxDEV(Th, {\n                  children: [\"Used in \", selectedEventForPrograms]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1283,\n                  columnNumber: 52\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1280,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1279,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: programs.map(program => {\n                // Filter programs used in the selected event if any\n                if (selectedEventForPrograms) {\n                  const programResults = results.filter(result => result.event === selectedEventForPrograms && result.program === program.name);\n\n                  // If no results for this program in the selected event, skip\n                  if (programResults.length === 0) return null;\n                }\n                return /*#__PURE__*/_jsxDEV(Tr, {\n                  children: [/*#__PURE__*/_jsxDEV(Td, {\n                    children: program.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1301,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: program.type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1302,\n                    columnNumber: 27\n                  }, this), selectedEventForPrograms && /*#__PURE__*/_jsxDEV(Td, {\n                    children: \"Used\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1304,\n                    columnNumber: 29\n                  }, this)]\n                }, program.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1300,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1286,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1278,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1263,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please select an event first to manage programs.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1316,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1220,\n      columnNumber: 9\n    }, this), activeTab === 'results' && /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Enter Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1323,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'rgba(255,255,255,0.1)',\n          padding: '15px',\n          borderRadius: '10px',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0 0 10px 0',\n            color: 'gold'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tip:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1332,\n            columnNumber: 15\n          }, this), \" To use grade-specific points, include the grade in participant names\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1331,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0 0 5px 0',\n            fontSize: '0.9rem'\n          },\n          children: \"Examples: \\\"John Doe (A)\\\" or \\\"SJ001 (B)\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1334,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: 0,\n            fontSize: '0.9rem',\n            fontStyle: 'italic'\n          },\n          children: \"Configure grade points in the \\\"Points\\\" tab\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1337,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1325,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1343,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: newResult.event,\n          onChange: e => setNewResult({\n            ...newResult,\n            event: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select an event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1348,\n            columnNumber: 15\n          }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: event.name,\n            children: event.name\n          }, event.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1350,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1344,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1342,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Program\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1356,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: newResult.program,\n          onChange: e => setNewResult({\n            ...newResult,\n            program: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a program\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1361,\n            columnNumber: 15\n          }, this), programs.map(program => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: program.name,\n            children: program.name\n          }, program.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1363,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1357,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1355,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1369,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: newResult.category,\n          onChange: e => setNewResult({\n            ...newResult,\n            category: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1374,\n            columnNumber: 15\n          }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category.name,\n            children: category.name\n          }, category.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1376,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1370,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1368,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Participants & Positions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1381,\n        columnNumber: 11\n      }, this), newResult.participants.map((participant, index) => /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '10px',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Participant name or chest number\",\n            value: participant.name,\n            onChange: e => handleParticipantChange(index, 'name', e.target.value),\n            style: {\n              flex: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1385,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Position (1st, 2nd, 3rd or Gold, Silver, Bronze)\",\n            value: participant.position,\n            onChange: e => handleParticipantChange(index, 'position', e.target.value),\n            style: {\n              flex: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1392,\n            columnNumber: 17\n          }, this), newResult.participants.length > 1 && /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleRemoveParticipant(index),\n            style: {\n              backgroundColor: '#ff4757'\n            },\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1400,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1384,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1383,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAddParticipant,\n        children: \"Add Participant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1408,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSaveResult,\n        children: \"Save Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1409,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Filter Results by Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1414,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedEventForResults,\n            onChange: e => setSelectedEventForResults(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All Events\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1419,\n              columnNumber: 17\n            }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: event.name,\n              children: event.name\n            }, event.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1421,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1415,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1413,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Existing Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1426,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(Th, {\n                children: \"Event\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1430,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Program\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1431,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1432,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Participants\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1433,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1429,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1428,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: results.filter(result => !selectedEventForResults || result.event === selectedEventForResults).map(result => /*#__PURE__*/_jsxDEV(Tr, {\n              children: [/*#__PURE__*/_jsxDEV(Td, {\n                children: result.event\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1441,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: result.program\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1442,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: result.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1443,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: result.participants.map((p, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [p.name, \" - \", p.position, \" (\", p.points, \" points)\"]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1446,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1444,\n                columnNumber: 23\n              }, this)]\n            }, result.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1440,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1436,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1427,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1412,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1322,\n      columnNumber: 9\n    }, this), activeTab === 'managers' && /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: editingTeamManager ? 'Edit Team Manager' : 'Create Team Manager'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1461,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Select Event First\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1464,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedEvent,\n          onChange: e => handleEventSelection(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select an event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1469,\n            columnNumber: 15\n          }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: event.name,\n            children: event.name\n          }, event.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1471,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1465,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1463,\n        columnNumber: 11\n      }, this), selectedEvent ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1479,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: newTeamManager.username,\n            onChange: e => setNewTeamManager({\n              ...newTeamManager,\n              username: e.target.value\n            }),\n            placeholder: \"Enter username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1480,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1478,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1489,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            value: newTeamManager.password,\n            onChange: e => setNewTeamManager({\n              ...newTeamManager,\n              password: e.target.value\n            }),\n            placeholder: \"Enter password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1490,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1488,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Assigned Team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1499,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newTeamManager.team,\n            onChange: e => setNewTeamManager({\n              ...newTeamManager,\n              team: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1504,\n              columnNumber: 19\n            }, this), teams.map(team => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: team.name,\n              children: team.name\n            }, team.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1506,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1500,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1498,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '10px',\n            flexWrap: 'wrap'\n          },\n          children: editingTeamManager ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleUpdateTeamManager,\n              children: \"Update Team Manager\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1514,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleCancelEdit,\n              style: {\n                background: '#ff4757'\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1515,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCreateTeamManager,\n            children: \"Create Team Manager\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1523,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1511,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: '30px'\n          },\n          children: \"Existing Team Managers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1527,\n          columnNumber: 15\n        }, this), teamManagers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No team managers configured yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1529,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(Th, {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1534,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Assigned Team\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1535,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1536,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1533,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1532,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: teamManagers.map(manager => /*#__PURE__*/_jsxDEV(Tr, {\n              children: [/*#__PURE__*/_jsxDEV(Td, {\n                children: manager.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1542,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: manager.team\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1543,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => handleEditTeamManager(manager),\n                  style: {\n                    padding: '5px 10px',\n                    marginRight: '5px'\n                  },\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1545,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => handleDeleteTeamManager(manager.id),\n                  style: {\n                    padding: '5px 10px',\n                    background: '#ff4757'\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1551,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1544,\n                columnNumber: 25\n              }, this)]\n            }, manager.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1541,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1539,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1531,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please select an event first to manage team managers.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1565,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1460,\n      columnNumber: 9\n    }, this), activeTab === 'grades' && /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Manage Grades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1572,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'rgba(255,255,255,0.1)',\n          padding: '15px',\n          borderRadius: '10px',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: 0,\n            color: 'gold'\n          },\n          children: \"Add New Grade with Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1580,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Grade Letter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1582,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: newGrade,\n            onChange: e => setNewGrade(e.target.value.toUpperCase()),\n            placeholder: \"Enter grade (e.g., A, B, C)\",\n            maxLength: \"1\",\n            style: {\n              width: '80px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1583,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1581,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Default Points for this Grade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1594,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '10px',\n              flexWrap: 'wrap'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"1st (Gold)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1597,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"number\",\n                value: newGradePoints.gold,\n                onChange: e => setNewGradePoints({\n                  ...newGradePoints,\n                  gold: parseInt(e.target.value) || 0\n                }),\n                style: {\n                  width: '80px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1598,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1596,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"2nd (Silver)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1606,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"number\",\n                value: newGradePoints.silver,\n                onChange: e => setNewGradePoints({\n                  ...newGradePoints,\n                  silver: parseInt(e.target.value) || 0\n                }),\n                style: {\n                  width: '80px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1607,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1605,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"3rd (Bronze)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1615,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"number\",\n                value: newGradePoints.bronze,\n                onChange: e => setNewGradePoints({\n                  ...newGradePoints,\n                  bronze: parseInt(e.target.value) || 0\n                }),\n                style: {\n                  width: '80px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1616,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1614,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1595,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1593,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            if (newGrade && !availableGrades.includes(newGrade)) {\n              // Add the new grade to available grades\n              setAvailableGrades([...availableGrades, newGrade]);\n\n              // Ask user if they want to pre-configure points for all categories\n              const preConfigure = window.confirm(`Grade ${newGrade} added successfully!\\n\\n` + `Do you want to pre-configure default points (${newGradePoints.gold}/${newGradePoints.silver}/${newGradePoints.bronze}) ` + `for this grade across all categories?\\n\\n` + `You can always customize these later in the Points tab.`);\n              if (preConfigure) {\n                preConfigureGradePoints(newGrade, newGradePoints);\n                alert(`Points pre-configured for grade ${newGrade} across all categories!`);\n              }\n              setNewGrade('');\n              setNewGradePoints({\n                gold: 10,\n                silver: 7,\n                bronze: 5\n              });\n            } else if (availableGrades.includes(newGrade)) {\n              alert(`Grade ${newGrade} already exists!`);\n            } else {\n              alert('Please enter a valid grade letter.');\n            }\n          },\n          children: \"Add Grade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1626,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1574,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Available Grades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1658,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '10px',\n          flexWrap: 'wrap',\n          marginBottom: '20px'\n        },\n        children: availableGrades.map((grade, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'rgba(255,255,255,0.2)',\n            padding: '10px 15px',\n            borderRadius: '20px',\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: grade\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1671,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (availableGrades.length > 1) {\n                setAvailableGrades(availableGrades.filter(g => g !== grade));\n              } else {\n                alert('You must have at least one grade!');\n              }\n            },\n            style: {\n              background: 'transparent',\n              border: 'none',\n              color: 'red',\n              cursor: 'pointer',\n              marginLeft: '10px',\n              fontWeight: 'bold'\n            },\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1672,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1661,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1659,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Grade Point Configuration Example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1696,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'rgba(255,255,255,0.1)',\n            padding: '20px',\n            borderRadius: '10px',\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'gold',\n              fontWeight: 'bold'\n            },\n            children: \"Example: Configure A Grade Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1703,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            style: {\n              paddingLeft: '20px',\n              color: 'rgba(255,255,255,0.9)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Go to the \\\"Points\\\" tab\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1705,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Select a category (e.g., \\\"Senior\\\")\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1706,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"From the \\\"Select Grade\\\" dropdown, choose \\\"A Grade\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1707,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Set points for each position:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                style: {\n                  paddingLeft: '20px',\n                  marginTop: '5px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"1st Position (Gold): 10 points\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1710,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"2nd Position (Silver): 7 points\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1711,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"3rd Position (Bronze): 5 points\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1712,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1709,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1708,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Click \\\"Save Grade Points\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1715,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1704,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontStyle: 'italic',\n              color: 'rgba(255,255,255,0.7)'\n            },\n            children: \"Participants with names like \\\"John Doe (A)\\\" will now receive these points instead of the default values.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1717,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1697,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'rgba(255,255,255,0.7)'\n          },\n          children: \"Note: Grades are used to differentiate point values for participants in the same category. For example, you can have different point values for A grade and B grade participants in the same category. To use grade-specific points, include the grade in parentheses at the end of participant names (e.g., \\\"Participant Name (A)\\\").\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1722,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1695,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1571,\n      columnNumber: 9\n    }, this), activeTab === 'batch-points' && /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Batch Grade Points Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1733,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'rgba(255,255,255,0.7)'\n        },\n        children: \"Configure points for a grade across selected categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1734,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Select Grade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1739,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedGradeForPoints,\n          onChange: e => {\n            setSelectedGradeForPoints(e.target.value);\n            // Load existing points if they exist for the selected grade in any category\n            const existingConfigKey = Object.keys(gradePoints).find(key => key.endsWith(`-${e.target.value}`));\n            if (existingConfigKey && gradePoints[existingConfigKey]) {\n              setPoints(gradePoints[existingConfigKey]);\n            } else {\n              // Reset to default points if no existing config for this grade\n              setPoints({\n                gold: 10,\n                silver: 7,\n                bronze: 5\n              });\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a grade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1756,\n            columnNumber: 15\n          }, this), availableGrades.map((grade, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: grade,\n            children: [grade, \" Grade\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1758,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1740,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1738,\n        columnNumber: 11\n      }, this), selectedGradeForPoints && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'rgba(255,255,255,0.1)',\n          padding: '20px',\n          borderRadius: '10px',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Set Points for \", selectedGradeForPoints, \" Grade\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1765,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Select Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1768,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '10px'\n            },\n            children: categories.length > 0 ? categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                color: 'white'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selectedCategoriesForBatch.includes(category.name),\n                onChange: e => {\n                  if (e.target.checked) {\n                    setSelectedCategoriesForBatch([...selectedCategoriesForBatch, category.name]);\n                  } else {\n                    setSelectedCategoriesForBatch(selectedCategoriesForBatch.filter(cat => cat !== category.name));\n                  }\n                },\n                style: {\n                  marginRight: '10px',\n                  width: '18px',\n                  height: '18px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1773,\n                columnNumber: 25\n              }, this), category.name]\n            }, category.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1772,\n              columnNumber: 23\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No categories available. Please create categories first.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1789,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1769,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1767,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"1st Position (Gold) Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1795,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: points.gold,\n            onChange: e => setPoints({\n              ...points,\n              gold: parseInt(e.target.value) || 0\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1796,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1794,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"2nd Position (Silver) Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1804,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: points.silver,\n            onChange: e => setPoints({\n              ...points,\n              silver: parseInt(e.target.value) || 0\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1805,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1803,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"3rd Position (Bronze) Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1813,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: points.bronze,\n            onChange: e => setPoints({\n              ...points,\n              bronze: parseInt(e.target.value) || 0\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1814,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1812,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '10px',\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              if (!selectedGradeForPoints || selectedCategoriesForBatch.length === 0) {\n                alert('Please select a grade and at least one category');\n                return;\n              }\n              const updatedGradePoints = {\n                ...gradePoints\n              };\n              let updatedCount = 0;\n\n              // Update points for this grade across selected categories only\n              selectedCategoriesForBatch.forEach(categoryName => {\n                const key = `${categoryName}-${selectedGradeForPoints}`;\n                updatedGradePoints[key] = {\n                  ...points\n                };\n                updatedCount++;\n              });\n              setGradePoints(updatedGradePoints);\n              alert(`Points updated for ${updatedCount} categories with ${selectedGradeForPoints} grade`);\n            },\n            children: \"Apply to Selected Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1822,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              if (!selectedGradeForPoints) {\n                alert('Please select a grade');\n                return;\n              }\n\n              // Select all categories\n              setSelectedCategoriesForBatch(categories.map(cat => cat.name));\n            },\n            children: \"Select All Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1846,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              // Deselect all categories\n              setSelectedCategoriesForBatch([]);\n            },\n            children: \"Deselect All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1860,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1821,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Current Configurations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1871,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(Th, {\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1875,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Th, {\n                  children: \"Grade\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1876,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Th, {\n                  children: \"1st (Gold)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1877,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Th, {\n                  children: \"2nd (Silver)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1878,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Th, {\n                  children: \"3rd (Bronze)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1879,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1874,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1873,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: categories.flatMap(category => {\n                // Get all grade configurations for this category\n                const categoryGradeConfigs = Object.keys(gradePoints).filter(key => key.startsWith(`${category.name}-`)).map(key => {\n                  const grade = key.split('-')[1];\n                  return {\n                    category: category.name,\n                    grade,\n                    config: gradePoints[key]\n                  };\n                });\n\n                // If there are no grade configurations for this category, show a default row\n                if (categoryGradeConfigs.length === 0) {\n                  return /*#__PURE__*/_jsxDEV(Tr, {\n                    children: [/*#__PURE__*/_jsxDEV(Td, {\n                      children: category.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1900,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Td, {\n                      children: \"-\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1901,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Td, {\n                      colSpan: \"3\",\n                      style: {\n                        textAlign: 'center'\n                      },\n                      children: \"No grade configurations\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1902,\n                      columnNumber: 29\n                    }, this)]\n                  }, `${category.name}-default`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1899,\n                    columnNumber: 27\n                  }, this);\n                }\n\n                // Show all grade configurations for this category\n                return categoryGradeConfigs.map(({\n                  category,\n                  grade,\n                  config\n                }, index) => /*#__PURE__*/_jsxDEV(Tr, {\n                  children: [index === 0 ? /*#__PURE__*/_jsxDEV(Td, {\n                    rowSpan: categoryGradeConfigs.length,\n                    children: category\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1911,\n                    columnNumber: 29\n                  }, this) : null, /*#__PURE__*/_jsxDEV(Td, {\n                    children: grade\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1913,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: config.gold\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1914,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: config.silver\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1915,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    children: config.bronze\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1916,\n                    columnNumber: 27\n                  }, this)]\n                }, `${category}-${grade}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1909,\n                  columnNumber: 25\n                }, this));\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1882,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1872,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1870,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1764,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1732,\n      columnNumber: 9\n    }, this), activeTab === 'points' && /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Configure Points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1930,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'rgba(255,255,255,0.1)',\n          padding: '15px',\n          borderRadius: '10px',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0 0 10px 0',\n            color: 'gold'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Quick Setup Example:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1939,\n            columnNumber: 15\n          }, this), \" To configure A grade with 10/7/5 points:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1938,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          style: {\n            margin: '0 0 10px 20px',\n            fontSize: '0.9rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Select a category below\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1942,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Choose \\\"A Grade\\\" from the dropdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1943,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Set Gold=10, Silver=7, Bronze=5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1944,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Click \\\"Save Grade Points\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1945,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1941,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: 0,\n            fontSize: '0.9rem',\n            fontStyle: 'italic'\n          },\n          children: \"Participants named \\\"John Doe (A)\\\" will get these points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1947,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1932,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Configure Points By Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1953,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedCategoryForPoints,\n          onChange: e => handleCategoryChangeForPoints(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1958,\n            columnNumber: 15\n          }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category.name,\n            children: category.name\n          }, category.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1960,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1954,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1952,\n        columnNumber: 11\n      }, this), selectedCategoryForPoints && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'rgba(255,255,255,0.1)',\n          padding: '20px',\n          borderRadius: '10px',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Points for \", selectedCategoryForPoints]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1967,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Select Grade (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1970,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedGradeForPoints,\n            onChange: e => handleGradeChangeForPoints(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"No grade (category only)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1975,\n              columnNumber: 19\n            }, this), availableGrades.map((grade, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: grade,\n              children: [grade, \" Grade\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1977,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1971,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handlePrepopulateAGrade,\n            style: {\n              marginLeft: '10px',\n              background: 'rgba(255,215,0,0.2)',\n              color: 'gold'\n            },\n            children: \"Example: A Grade (10/7/5)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1980,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1969,\n          columnNumber: 15\n        }, this), selectedGradeForPoints && /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Points for \", selectedCategoryForPoints, \" - \", selectedGradeForPoints, \" Grade\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1993,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"1st Position (Gold) Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1997,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: points.gold,\n            onChange: e => setPoints({\n              ...points,\n              gold: parseInt(e.target.value) || 0\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1998,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1996,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"2nd Position (Silver) Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2006,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: points.silver,\n            onChange: e => setPoints({\n              ...points,\n              silver: parseInt(e.target.value) || 0\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2007,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2005,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"3rd Position (Bronze) Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2015,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: points.bronze,\n            onChange: e => setPoints({\n              ...points,\n              bronze: parseInt(e.target.value) || 0\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2016,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2014,\n          columnNumber: 15\n        }, this), selectedGradeForPoints ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveGradePoints,\n          children: \"Save Grade Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2024,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveCategoryPoints,\n          children: \"Save Category Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2026,\n          columnNumber: 17\n        }, this), !selectedGradeForPoints && categoryPoints[selectedCategoryForPoints] && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px',\n            color: 'gold'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Current category configuration saved\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2031,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2030,\n          columnNumber: 17\n        }, this), selectedGradeForPoints && gradePoints[`${selectedCategoryForPoints}-${selectedGradeForPoints}`] && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px',\n            color: 'gold'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Current grade configuration saved\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2037,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2036,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1966,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Default Points Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2043,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"These points will be used when no category-specific or grade-specific points are configured.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2044,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"1st Position (Gold) Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2047,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          value: points.gold,\n          onChange: e => setPoints({\n            ...points,\n            gold: parseInt(e.target.value) || 0\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2048,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2046,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"2nd Position (Silver) Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2056,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          value: points.silver,\n          onChange: e => setPoints({\n            ...points,\n            silver: parseInt(e.target.value) || 0\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2057,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2055,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"3rd Position (Bronze) Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2065,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          value: points.bronze,\n          onChange: e => setPoints({\n            ...points,\n            bronze: parseInt(e.target.value) || 0\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2066,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2064,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => saveToLocalStorage('points', points),\n        children: \"Save Default Points Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2073,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleChangePassword,\n        children: \"Change Admin Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2074,\n        columnNumber: 11\n      }, this), Object.keys(categoryPoints).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Category-Specific Points Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2078,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(Th, {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2082,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"1st (Gold)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2083,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"2nd (Silver)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2084,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"3rd (Bronze)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2085,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2081,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2080,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(categoryPoints).map(([category, pointsConfig]) => /*#__PURE__*/_jsxDEV(Tr, {\n              children: [/*#__PURE__*/_jsxDEV(Td, {\n                children: category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2091,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: pointsConfig.gold\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2092,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: pointsConfig.silver\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2093,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: pointsConfig.bronze\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2094,\n                columnNumber: 23\n              }, this)]\n            }, category, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2090,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2088,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2079,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2077,\n        columnNumber: 13\n      }, this), Object.keys(gradePoints).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Grade-Specific Points Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2104,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(Th, {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2108,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Grade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2109,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"1st (Gold)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2110,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"2nd (Silver)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2111,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"3rd (Bronze)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2112,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2107,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(gradePoints).map(([key, pointsConfig]) => {\n              const [category, grade] = key.split('-');\n              return /*#__PURE__*/_jsxDEV(Tr, {\n                children: [/*#__PURE__*/_jsxDEV(Td, {\n                  children: category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2120,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Td, {\n                  children: grade\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2121,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Td, {\n                  children: pointsConfig.gold\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2122,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Td, {\n                  children: pointsConfig.silver\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2123,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Td, {\n                  children: pointsConfig.bronze\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2124,\n                  columnNumber: 25\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2119,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2115,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2105,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2103,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1929,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 746,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"4Hi9X+wxkofDoWBcEv/rJ9IhO3E=\", false, function () {\n  return [useNavigate];\n});\n_c17 = AdminDashboard;\nexport default AdminDashboard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17;\n$RefreshReg$(_c, \"DashboardContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"TabContainer\");\n$RefreshReg$(_c4, \"Tab\");\n$RefreshReg$(_c5, \"FormContainer\");\n$RefreshReg$(_c6, \"FormTitle\");\n$RefreshReg$(_c7, \"FormGroup\");\n$RefreshReg$(_c8, \"Label\");\n$RefreshReg$(_c9, \"Input\");\n$RefreshReg$(_c0, \"Select\");\n$RefreshReg$(_c1, \"Button\");\n$RefreshReg$(_c10, \"Table\");\n$RefreshReg$(_c11, \"Th\");\n$RefreshReg$(_c12, \"Td\");\n$RefreshReg$(_c13, \"Tr\");\n$RefreshReg$(_c14, \"ColorPreview\");\n$RefreshReg$(_c15, \"RGBInputContainer\");\n$RefreshReg$(_c16, \"RGBInput\");\n$RefreshReg$(_c17, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","styled","useNavigate","loadFromLocalStorage","saveToLocalStorage","calculateTeamStandings","jsxDEV","_jsxDEV","Fragment","_Fragment","DashboardContainer","div","_c","Header","h1","_c2","TabContainer","_c3","Tab","button","props","active","_c4","FormContainer","_c5","FormTitle","h2","_c6","FormGroup","_c7","Label","label","_c8","Input","input","_c9","Select","select","_c0","Button","_c1","Table","table","_c10","Th","th","_c11","Td","td","_c12","Tr","tr","_c13","ColorPreview","r","g","b","_c14","RGBInputContainer","_c15","RGBInput","_c16","AdminDashboard","_s","navigate","activeTab","setActiveTab","events","setEvents","teams","setTeams","categories","setCategories","students","setStudents","programs","setPrograms","results","setResults","points","setPoints","gold","silver","bronze","categoryPoints","setCategoryPoints","gradePoints","setGradePoints","availableGrades","setAvailableGrades","newGradePoints","setNewGradePoints","teamManagers","setTeamManagers","selectedEvent","setSelectedEvent","newEvent","setNewEvent","name","color","newTeam","setNewTeam","newCategory","setNewCategory","order","newStudent","setNewStudent","chestNumber","team","category","photo","newProgram","setNewProgram","type","newResult","setNewResult","event","program","participants","position","newTeamManager","setNewTeamManager","username","password","editingTeamManager","setEditingTeamManager","adminPassword","setAdminPassword","selectedCategoryForPoints","setSelectedCategoryForPoints","selectedGradeForPoints","setSelectedGradeForPoints","selectedCategoriesForBatch","setSelectedCategoriesForBatch","newGrade","setNewGrade","selectedEventForTeams","setSelectedEventForTeams","selectedEventForStudents","setSelectedEventForStudents","selectedEventForPrograms","setSelectedEventForPrograms","selectedEventForResults","setSelectedEventForResults","savedEvents","savedTeams","savedCategories","savedStudents","savedPrograms","savedResults","savedPoints","savedCategoryPoints","savedGradePoints","savedPassword","savedAvailableGrades","savedTeamManagers","savedSelectedEventForTeams","savedSelectedEventForStudents","savedSelectedEventForPrograms","savedSelectedEventForResults","console","log","length","prev","map","cat","error","handleLogout","localStorage","removeItem","handleEventSelection","eventName","handleCreateTeamManager","trim","alert","some","manager","teamManager","id","updatedTeamManagers","handleEditTeamManager","handleUpdateTeamManager","handleDeleteTeamManager","managerId","window","confirm","filter","handleCancelEdit","preConfigureGradePoints","grade","pointsConfig","updatedGradePoints","forEach","key","updatedTeams","handleCreateEvent","handleCreateTeam","handleCreateCategory","handleCreateStudent","student","updatedStudents","handleCreateProgram","handleAddParticipant","handleParticipantChange","index","field","value","updatedParticipants","handleRemoveParticipant","splice","handleSaveResult","participantsWithPoints","participant","pointValue","participantName","gradeMatch","match","replace","pointConfig","gradeKey","toLowerCase","result","timestamp","Date","toISOString","handleChangePassword","newPassword","prompt","handleSaveCategoryPoints","handleCategoryChangeForPoints","categoryName","handleGradeChangeForPoints","handlePrepopulateAGrade","handleSaveGradePoints","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","display","gap","flexWrap","justifyContent","background","onChange","e","target","placeholder","min","max","parseInt","join","marginTop","teamResults","find","s","slice","accept","file","files","reader","FileReader","onload","readAsDataURL","src","alt","maxWidth","maxHeight","borderRadius","studentResults","programResults","padding","marginBottom","margin","fontSize","fontStyle","alignItems","flex","backgroundColor","p","i","marginRight","toUpperCase","maxLength","width","includes","preConfigure","border","cursor","marginLeft","fontWeight","paddingLeft","existingConfigKey","Object","keys","endsWith","flexDirection","checked","height","updatedCount","flatMap","categoryGradeConfigs","startsWith","split","config","colSpan","textAlign","rowSpan","entries","_c17","$RefreshReg$"],"sources":["C:/Users/SMIC_STUDIO/Desktop/MEHFIL 25 APP/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { loadFromLocalStorage, saveToLocalStorage, calculateTeamStandings } from '../utils/dataStorage';\r\n\r\nconst DashboardContainer = styled.div`\r\n  padding: 20px;\r\n  color: white;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst Header = styled.h1`\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  margin-bottom: 30px;\r\n  color: gold;\r\n`;\r\n\r\nconst TabContainer = styled.div`\r\n  display: flex;\r\n  border-bottom: 2px solid rgba(255,255,255,0.2);\r\n  margin-bottom: 30px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Tab = styled.button`\r\n  padding: 15px 30px;\r\n  background: ${props => props.active ? 'rgba(255,255,255,0.2)' : 'transparent'};\r\n  color: ${props => props.active ? 'gold' : 'white'};\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.1rem;\r\n  font-weight: bold;\r\n\r\n  &:hover {\r\n    background: rgba(255,255,255,0.1);\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    padding: 10px 15px;\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n  background: rgba(255,255,255,0.1);\r\n  border-radius: 15px;\r\n  padding: 30px;\r\n  backdrop-filter: blur(10px);\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst FormTitle = styled.h2`\r\n  margin-top: 0;\r\n  color: gold;\r\n  border-bottom: 1px solid rgba(255,255,255,0.2);\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst FormGroup = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  border: none;\r\n  background: rgba(255,255,255,0.1);\r\n  color: white;\r\n  font-size: 1rem;\r\n\r\n  &:focus {\r\n    outline: 2px solid gold;\r\n  }\r\n`;\r\n\r\nconst Select = styled.select`\r\n  width: 100%;\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  border: none;\r\n  background: rgba(255,255,255,0.1);\r\n  color: white;\r\n  font-size: 1rem;\r\n\r\n  &:focus {\r\n    outline: 2px solid gold;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 12px 25px;\r\n  background: gold;\r\n  color: #333;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n  margin-right: 10px;\r\n  margin-bottom: 10px;\r\n\r\n  &:hover {\r\n    background: #ffd700;\r\n    transform: translateY(-2px);\r\n  }\r\n`;\r\n\r\nconst Table = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  background: rgba(255,255,255,0.1);\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Th = styled.th`\r\n  background: rgba(0,0,0,0.2);\r\n  padding: 15px;\r\n  text-align: left;\r\n`;\r\n\r\nconst Td = styled.td`\r\n  padding: 15px;\r\n  border-bottom: 1px solid rgba(255,255,255,0.1);\r\n`;\r\n\r\nconst Tr = styled.tr`\r\n  &:hover {\r\n    background: rgba(255,255,255,0.05);\r\n  }\r\n`;\r\n\r\nconst ColorPreview = styled.div`\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  background: ${props => `rgb(${props.r}, ${props.g}, ${props.b})`};\r\n  display: inline-block;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst RGBInputContainer = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst RGBInput = styled.input`\r\n  width: 80px;\r\n  padding: 8px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  background: rgba(255,255,255,0.1);\r\n  color: white;\r\n  text-align: center;\r\n`;\r\n\r\nconst AdminDashboard = () => {\r\n  const navigate = useNavigate();\r\n  const [activeTab, setActiveTab] = useState('events');\r\n  const [events, setEvents] = useState([]);\r\n  const [teams, setTeams] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [students, setStudents] = useState([]);\r\n  const [programs, setPrograms] = useState([]);\r\n  const [results, setResults] = useState([]);\r\n  const [points, setPoints] = useState({\r\n    gold: 10,\r\n    silver: 7,\r\n    bronze: 5\r\n  });\r\n  // Category-specific points configuration\r\n  const [categoryPoints, setCategoryPoints] = useState({});\r\n  // Grade-specific points configuration\r\n  const [gradePoints, setGradePoints] = useState({});\r\n  // Available grades configuration\r\n  const [availableGrades, setAvailableGrades] = useState(['A', 'B', 'C', 'D']);\r\n  // New grade points configuration\r\n  const [newGradePoints, setNewGradePoints] = useState({\r\n    gold: 10,\r\n    silver: 7,\r\n    bronze: 5\r\n  });\r\n  // Team managers configuration\r\n  const [teamManagers, setTeamManagers] = useState([]);\r\n  // Selected event for management\r\n  const [selectedEvent, setSelectedEvent] = useState('');\r\n  \r\n  // Form states\r\n  const [newEvent, setNewEvent] = useState({ name: '', categories: [], color: { r: 106, g: 17, b: 203 } });\r\n  const [newTeam, setNewTeam] = useState({ name: '', color: '#FF5733' });\r\n  const [newCategory, setNewCategory] = useState({ name: '', order: 1 });\r\n  const [newStudent, setNewStudent] = useState({ name: '', chestNumber: '', team: '', category: '', photo: null });\r\n  const [newProgram, setNewProgram] = useState({ name: '', type: 'Individual' });\r\n  const [newResult, setNewResult] = useState({ \r\n    event: '', \r\n    program: '', \r\n    category: '', \r\n    participants: [{ name: '', position: '' }] \r\n  });\r\n  const [newTeamManager, setNewTeamManager] = useState({ \r\n    username: '', \r\n    password: '', \r\n    team: '' \r\n  });\r\n  const [editingTeamManager, setEditingTeamManager] = useState(null);\r\n  const [adminPassword, setAdminPassword] = useState('admin123');\r\n  const [selectedCategoryForPoints, setSelectedCategoryForPoints] = useState('');\r\n  const [selectedGradeForPoints, setSelectedGradeForPoints] = useState('');\r\n  const [selectedCategoriesForBatch, setSelectedCategoriesForBatch] = useState([]);\r\n  const [newGrade, setNewGrade] = useState('');\r\n  \r\n  // Event filtering states\r\n  const [selectedEventForTeams, setSelectedEventForTeams] = useState('');\r\n  const [selectedEventForStudents, setSelectedEventForStudents] = useState('');\r\n  const [selectedEventForPrograms, setSelectedEventForPrograms] = useState('');\r\n  const [selectedEventForResults, setSelectedEventForResults] = useState('');\r\n\r\n  // Load data from localStorage on component mount\r\n  useEffect(() => {\r\n    try {\r\n      const savedEvents = loadFromLocalStorage('events', []);\r\n      const savedTeams = loadFromLocalStorage('teams', []);\r\n      const savedCategories = loadFromLocalStorage('categories', []);\r\n      const savedStudents = loadFromLocalStorage('students', []);\r\n      const savedPrograms = loadFromLocalStorage('programs', []);\r\n      const savedResults = loadFromLocalStorage('results', []);\r\n      const savedPoints = loadFromLocalStorage('points', { gold: 10, silver: 7, bronze: 5 });\r\n      const savedCategoryPoints = loadFromLocalStorage('categoryPoints', {});\r\n      const savedGradePoints = loadFromLocalStorage('gradePoints', {});\r\n      const savedPassword = loadFromLocalStorage('adminPassword', 'admin123');\r\n      const savedAvailableGrades = loadFromLocalStorage('availableGrades', ['A', 'B', 'C', 'D']);\r\n      const savedTeamManagers = loadFromLocalStorage('teamManagers', []);\r\n\r\n      // Load event filtering states\r\n      const savedSelectedEventForTeams = loadFromLocalStorage('selectedEventForTeams', '');\r\n      const savedSelectedEventForStudents = loadFromLocalStorage('selectedEventForStudents', '');\r\n      const savedSelectedEventForPrograms = loadFromLocalStorage('selectedEventForPrograms', '');\r\n      const savedSelectedEventForResults = loadFromLocalStorage('selectedEventForResults', '');\r\n\r\n      console.log('Admin dashboard loaded data:', {\r\n        events: savedEvents,\r\n        teams: savedTeams,\r\n        categories: savedCategories,\r\n        students: savedStudents,\r\n        programs: savedPrograms,\r\n        results: savedResults,\r\n        points: savedPoints,\r\n        categoryPoints: savedCategoryPoints,\r\n        gradePoints: savedGradePoints,\r\n        teamManagers: savedTeamManagers\r\n      });\r\n\r\n      setEvents(savedEvents || []);\r\n      setTeams(savedTeams || []);\r\n      setCategories(savedCategories || []);\r\n      setStudents(savedStudents || []);\r\n      setPrograms(savedPrograms || []);\r\n      setResults(savedResults || []);\r\n      setPoints(savedPoints);\r\n      setCategoryPoints(savedCategoryPoints || {});\r\n      setGradePoints(savedGradePoints || {});\r\n      setAdminPassword(savedPassword);\r\n      setAvailableGrades(savedAvailableGrades || ['A', 'B', 'C', 'D']);\r\n      setTeamManagers(savedTeamManagers || []);\r\n\r\n      // Set event filtering states\r\n      setSelectedEventForTeams(savedSelectedEventForTeams || '');\r\n      setSelectedEventForStudents(savedSelectedEventForStudents || '');\r\n      setSelectedEventForPrograms(savedSelectedEventForPrograms || '');\r\n      setSelectedEventForResults(savedSelectedEventForResults || '');\r\n\r\n      // Initialize form select options\r\n      if (savedEvents && savedEvents.length > 0) {\r\n        setNewResult(prev => ({ ...prev, event: savedEvents[0].name }));\r\n        setSelectedEvent(savedEvents[0].name);\r\n      }\r\n      if (savedPrograms && savedPrograms.length > 0) {\r\n        setNewResult(prev => ({ ...prev, program: savedPrograms[0].name }));\r\n      }\r\n      if (savedCategories && savedCategories.length > 0) {\r\n        setNewResult(prev => ({ ...prev, category: savedCategories[0].name }));\r\n        setSelectedCategoryForPoints(savedCategories[0].name);\r\n        // Initialize selected categories for batch\r\n        setSelectedCategoriesForBatch(savedCategories.map(cat => cat.name));\r\n      }\r\n      if (savedTeams && savedTeams.length > 0) {\r\n        setNewTeamManager(prev => ({ ...prev, team: savedTeams[0].name }));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading data in AdminDashboard:', error);\r\n    }\r\n  }, []);\r\n\r\n  // Initialize selected categories for batch when categories change\r\n  useEffect(() => {\r\n    if (categories.length > 0 && selectedCategoriesForBatch.length === 0) {\r\n      // Initially select all categories\r\n      setSelectedCategoriesForBatch(categories.map(cat => cat.name));\r\n    }\r\n  }, [categories]);\r\n\r\n  // Handle logout\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('isAdminLoggedIn');\r\n    navigate('/');\r\n  };\r\n\r\n  // Handle event selection\r\n  const handleEventSelection = (eventName) => {\r\n    setSelectedEvent(eventName);\r\n    \r\n    // Update forms that depend on event selection\r\n    setNewTeam({ ...newTeam, event: eventName });\r\n    setNewCategory({ ...newCategory, event: eventName });\r\n    setNewStudent({ ...newStudent, event: eventName });\r\n    setNewProgram({ ...newProgram, event: eventName });\r\n    setNewResult({ ...newResult, event: eventName });\r\n    setNewTeamManager({ ...newTeamManager, event: eventName });\r\n  };\r\n\r\n  // Team manager CRUD operations\r\n  const handleCreateTeamManager = () => {\r\n    if (newTeamManager.username.trim() === '' || newTeamManager.password.trim() === '' || newTeamManager.team.trim() === '') {\r\n      alert('Please fill in all fields');\r\n      return;\r\n    }\r\n    \r\n    // Check if username already exists\r\n    if (teamManagers.some(manager => manager.username === newTeamManager.username)) {\r\n      alert('A team manager with this username already exists');\r\n      return;\r\n    }\r\n    \r\n    const teamManager = {\r\n      id: teamManagers.length + 1,\r\n      username: newTeamManager.username,\r\n      password: newTeamManager.password, // In a real app, this should be hashed\r\n      team: newTeamManager.team\r\n    };\r\n    \r\n    const updatedTeamManagers = [...teamManagers, teamManager];\r\n    setTeamManagers(updatedTeamManagers);\r\n    saveToLocalStorage('teamManagers', updatedTeamManagers);\r\n    \r\n    // Reset form\r\n    setNewTeamManager({ username: '', password: '', team: newTeamManager.team });\r\n  };\r\n\r\n  const handleEditTeamManager = (manager) => {\r\n    setEditingTeamManager(manager);\r\n    setNewTeamManager({\r\n      username: manager.username,\r\n      password: manager.password,\r\n      team: manager.team\r\n    });\r\n  };\r\n\r\n  const handleUpdateTeamManager = () => {\r\n    if (newTeamManager.username.trim() === '' || newTeamManager.password.trim() === '' || newTeamManager.team.trim() === '') {\r\n      alert('Please fill in all fields');\r\n      return;\r\n    }\r\n    \r\n    // Check if username already exists (excluding the current manager being edited)\r\n    if (teamManagers.some(manager => \r\n        manager.username === newTeamManager.username && \r\n        manager.id !== editingTeamManager.id)) {\r\n      alert('A team manager with this username already exists');\r\n      return;\r\n    }\r\n    \r\n    const updatedTeamManagers = teamManagers.map(manager => \r\n      manager.id === editingTeamManager.id \r\n        ? { ...manager, ...newTeamManager }\r\n        : manager\r\n    );\r\n    \r\n    setTeamManagers(updatedTeamManagers);\r\n    saveToLocalStorage('teamManagers', updatedTeamManagers);\r\n    \r\n    // Reset form and editing state\r\n    setEditingTeamManager(null);\r\n    setNewTeamManager({ username: '', password: '', team: newTeamManager.team });\r\n  };\r\n\r\n  const handleDeleteTeamManager = (managerId) => {\r\n    if (window.confirm('Are you sure you want to delete this team manager?')) {\r\n      const updatedTeamManagers = teamManagers.filter(manager => manager.id !== managerId);\r\n      setTeamManagers(updatedTeamManagers);\r\n      saveToLocalStorage('teamManagers', updatedTeamManagers);\r\n      \r\n      // Clear form if we were editing this manager\r\n      if (editingTeamManager && editingTeamManager.id === managerId) {\r\n        setEditingTeamManager(null);\r\n        setNewTeamManager({ username: '', password: '', team: newTeamManager.team });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditingTeamManager(null);\r\n    setNewTeamManager({ username: '', password: '', team: newTeamManager.team });\r\n  };\r\n\r\n  // Function to pre-configure points for a new grade across all categories\r\n  const preConfigureGradePoints = (grade, pointsConfig) => {\r\n    const updatedGradePoints = { ...gradePoints };\r\n    \r\n    // For each category, create a default grade point configuration\r\n    categories.forEach(category => {\r\n      const key = `${category.name}-${grade}`;\r\n      updatedGradePoints[key] = { ...pointsConfig };\r\n    });\r\n    \r\n    setGradePoints(updatedGradePoints);\r\n  };\r\n\r\n  // Update team standings when results or points change\r\n  useEffect(() => {\r\n    const savedTeams = loadFromLocalStorage('teams', []);\r\n    const updatedTeams = calculateTeamStandings(savedTeams, results, points, categoryPoints, gradePoints);\r\n    setTeams(updatedTeams);\r\n  }, [results, points, categoryPoints, gradePoints]);\r\n\r\n  // Save data to localStorage whenever state changes\r\n  useEffect(() => {\r\n    saveToLocalStorage('events', events);\r\n  }, [events]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('teams', teams);\r\n  }, [teams]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('categories', categories);\r\n  }, [categories]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('students', students);\r\n  }, [students]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('programs', programs);\r\n  }, [programs]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('results', results);\r\n  }, [results]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('points', points);\r\n  }, [points]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('categoryPoints', categoryPoints);\r\n  }, [categoryPoints]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('gradePoints', gradePoints);\r\n  }, [gradePoints]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('adminPassword', adminPassword);\r\n  }, [adminPassword]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('availableGrades', availableGrades);\r\n  }, [availableGrades]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('teamManagers', teamManagers);\r\n  }, [teamManagers]);\r\n\r\n  // Save event filtering states to localStorage\r\n  useEffect(() => {\r\n    saveToLocalStorage('selectedEventForTeams', selectedEventForTeams);\r\n  }, [selectedEventForTeams]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('selectedEventForStudents', selectedEventForStudents);\r\n  }, [selectedEventForStudents]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('selectedEventForPrograms', selectedEventForPrograms);\r\n  }, [selectedEventForPrograms]);\r\n\r\n  useEffect(() => {\r\n    saveToLocalStorage('selectedEventForResults', selectedEventForResults);\r\n  }, [selectedEventForResults]);\r\n\r\n  const handleCreateEvent = () => {\r\n    if (newEvent.name.trim() === '') return;\r\n    const event = {\r\n      id: events.length + 1,\r\n      name: newEvent.name,\r\n      categories: categories.map(cat => cat.name),\r\n      color: newEvent.color\r\n    };\r\n    setEvents([...events, event]);\r\n    setNewEvent({ name: '', categories: [], color: { r: 106, g: 17, b: 203 } });\r\n  };\r\n\r\n  const handleCreateTeam = () => {\r\n    if (newTeam.name.trim() === '') return;\r\n    const team = {\r\n      id: teams.length + 1,\r\n      name: newTeam.name,\r\n      color: newTeam.color\r\n    };\r\n    setTeams([...teams, team]);\r\n    setNewTeam({ name: '', color: '#FF5733' });\r\n  };\r\n\r\n  const handleCreateCategory = () => {\r\n    if (newCategory.name.trim() === '') return;\r\n    const category = {\r\n      id: categories.length + 1,\r\n      name: newCategory.name,\r\n      order: newCategory.order\r\n    };\r\n    setCategories([...categories, category]);\r\n    setNewCategory({ name: '', order: categories.length + 2 });\r\n  };\r\n\r\n  const handleCreateStudent = () => {\r\n    if (newStudent.name.trim() === '' || newStudent.chestNumber.trim() === '') return;\r\n    const student = {\r\n      id: students.length + 1,\r\n      name: newStudent.name,\r\n      chestNumber: newStudent.chestNumber,\r\n      team: newStudent.team,\r\n      category: newStudent.category,\r\n      photo: newStudent.photo || null\r\n    };\r\n    const updatedStudents = [...students, student];\r\n    setStudents(updatedStudents);\r\n    console.log('Student created:', student);\r\n    setNewStudent({ name: '', chestNumber: '', team: '', category: '', photo: null });\r\n  };\r\n\r\n  const handleCreateProgram = () => {\r\n    if (newProgram.name.trim() === '') return;\r\n    const program = {\r\n      id: programs.length + 1,\r\n      name: newProgram.name,\r\n      type: newProgram.type\r\n    };\r\n    setPrograms([...programs, program]);\r\n    setNewProgram({ name: '', type: 'Individual' });\r\n  };\r\n\r\n  const handleAddParticipant = () => {\r\n    setNewResult({\r\n      ...newResult,\r\n      participants: [...newResult.participants, { name: '', position: '' }]\r\n    });\r\n  };\r\n\r\n  const handleParticipantChange = (index, field, value) => {\r\n    const updatedParticipants = [...newResult.participants];\r\n    updatedParticipants[index][field] = value;\r\n    setNewResult({\r\n      ...newResult,\r\n      participants: updatedParticipants\r\n    });\r\n  };\r\n\r\n  const handleRemoveParticipant = (index) => {\r\n    if (newResult.participants.length <= 1) return;\r\n    const updatedParticipants = [...newResult.participants];\r\n    updatedParticipants.splice(index, 1);\r\n    setNewResult({\r\n      ...newResult,\r\n      participants: updatedParticipants\r\n    });\r\n  };\r\n\r\n  const handleSaveResult = () => {\r\n    // Calculate points based on position, category, and grade\r\n    const participantsWithPoints = newResult.participants.map(participant => {\r\n      let pointValue = 0;\r\n      \r\n      // Extract grade from participant name if it exists (e.g., \"John Doe (A)\" or \"SJ001 (B)\")\r\n      let grade = '';\r\n      let participantName = participant.name;\r\n      \r\n      // Updated regex to handle more grades (A, B, C, D)\r\n      const gradeMatch = participant.name.match(/\\(([A-D])\\)$/);\r\n      if (gradeMatch) {\r\n        grade = gradeMatch[1];\r\n        participantName = participant.name.replace(/\\s*\\([A-D]\\)$/, '');\r\n      }\r\n      \r\n      // Use grade-specific points if available\r\n      let pointConfig = points; // default\r\n      \r\n      // Use the category from the current result being saved, not the selected category for points configuration\r\n      if (grade && newResult.category) {\r\n        const gradeKey = `${newResult.category}-${grade}`;\r\n        if (gradePoints[gradeKey]) {\r\n          pointConfig = gradePoints[gradeKey];\r\n        } else if (categoryPoints[newResult.category]) {\r\n          // Fall back to category-specific points\r\n          pointConfig = categoryPoints[newResult.category];\r\n        }\r\n      } else if (categoryPoints[newResult.category]) {\r\n        // Use category-specific points if no grade specified\r\n        pointConfig = categoryPoints[newResult.category];\r\n      }\r\n      \r\n      switch (participant.position.toLowerCase()) {\r\n        case '1':\r\n        case 'first':\r\n        case 'gold':\r\n          pointValue = pointConfig.gold;\r\n          break;\r\n        case '2':\r\n        case 'second':\r\n        case 'silver':\r\n          pointValue = pointConfig.silver;\r\n          break;\r\n        case '3':\r\n        case 'third':\r\n        case 'bronze':\r\n          pointValue = pointConfig.bronze;\r\n          break;\r\n        default:\r\n          pointValue = 0;\r\n      }\r\n      \r\n      return {\r\n        ...participant,\r\n        points: pointValue\r\n      };\r\n    });\r\n    \r\n    const result = {\r\n      id: results.length + 1,\r\n      event: newResult.event,\r\n      program: newResult.program,\r\n      category: newResult.category,\r\n      participants: participantsWithPoints,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    \r\n    setResults([...results, result]);\r\n    \r\n    // Reset form\r\n    setNewResult({ \r\n      event: newResult.event, \r\n      program: newResult.program, \r\n      category: newResult.category, \r\n      participants: [{ name: '', position: '' }] \r\n    });\r\n  };\r\n\r\n  const handleChangePassword = () => {\r\n    // In a real app, you would validate the current password first\r\n    const newPassword = prompt('Enter new password:');\r\n    if (newPassword && newPassword.trim() !== '') {\r\n      setAdminPassword(newPassword.trim());\r\n      alert('Password updated successfully!');\r\n    }\r\n  };\r\n\r\n  const handleSaveCategoryPoints = () => {\r\n    if (!selectedCategoryForPoints) return;\r\n    \r\n    setCategoryPoints({\r\n      ...categoryPoints,\r\n      [selectedCategoryForPoints]: { ...points }\r\n    });\r\n    \r\n    alert(`Points configuration saved for category: ${selectedCategoryForPoints}`);\r\n  };\r\n\r\n  const handleCategoryChangeForPoints = (categoryName) => {\r\n    setSelectedCategoryForPoints(categoryName);\r\n    \r\n    // Load existing points for this category if they exist\r\n    if (categoryPoints[categoryName]) {\r\n      setPoints(categoryPoints[categoryName]);\r\n    } else {\r\n      // Reset to default points if no custom points for this category\r\n      setPoints({ gold: 10, silver: 7, bronze: 5 });\r\n    }\r\n  };\r\n\r\n  // Handle grade selection for points configuration\r\n  const handleGradeChangeForPoints = (grade) => {\r\n    setSelectedGradeForPoints(grade);\r\n    \r\n    // Create a key for category-grade combination\r\n    const key = `${selectedCategoryForPoints}-${grade}`;\r\n    \r\n    // Load existing points for this category-grade combination if they exist\r\n    if (gradePoints[key]) {\r\n      setPoints(gradePoints[key]);\r\n    } else {\r\n      // Check if there are category-specific points\r\n      if (categoryPoints[selectedCategoryForPoints]) {\r\n        setPoints(categoryPoints[selectedCategoryForPoints]);\r\n      } else {\r\n        // Reset to default points\r\n        setPoints({ gold: 10, silver: 7, bronze: 5 });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Pre-populate A grade points example\r\n  const handlePrepopulateAGrade = () => {\r\n    if (!selectedCategoryForPoints) {\r\n      alert('Please select a category first');\r\n      return;\r\n    }\r\n    \r\n    setSelectedGradeForPoints('A');\r\n    setPoints({ gold: 10, silver: 7, bronze: 5 });\r\n  };\r\n\r\n  // Save grade-specific points\r\n  const handleSaveGradePoints = () => {\r\n    if (!selectedCategoryForPoints || !selectedGradeForPoints) return;\r\n    \r\n    const key = `${selectedCategoryForPoints}-${selectedGradeForPoints}`;\r\n    \r\n    setGradePoints({\r\n      ...gradePoints,\r\n      [key]: { ...points }\r\n    });\r\n    \r\n    alert(`Points configuration saved for category: ${selectedCategoryForPoints}, grade: ${selectedGradeForPoints}`);\r\n  };\r\n\r\n  return (\r\n    <DashboardContainer>\r\n      <Header>Admin Dashboard</Header>\r\n      \r\n      <TabContainer>\r\n        <Tab active={activeTab === 'switcher'} onClick={() => setActiveTab('switcher')}>Role Switcher</Tab>\r\n        <Tab active={activeTab === 'events'} onClick={() => setActiveTab('events')}>Events</Tab>\r\n        <Tab active={activeTab === 'categories'} onClick={() => setActiveTab('categories')}>Categories</Tab>\r\n        <Tab active={activeTab === 'teams'} onClick={() => setActiveTab('teams')}>Teams</Tab>\r\n        <Tab active={activeTab === 'students'} onClick={() => setActiveTab('students')}>Students</Tab>\r\n        <Tab active={activeTab === 'programs'} onClick={() => setActiveTab('programs')}>Programs</Tab>\r\n        <Tab active={activeTab === 'results'} onClick={() => setActiveTab('results')}>Results</Tab>\r\n        <Tab active={activeTab === 'managers'} onClick={() => setActiveTab('managers')}>Team Managers</Tab>\r\n        <Tab active={activeTab === 'grades'} onClick={() => setActiveTab('grades')}>Grades</Tab>\r\n        <Tab active={activeTab === 'batch-points'} onClick={() => setActiveTab('batch-points')}>Batch Points</Tab>\r\n        <Tab active={activeTab === 'points'} onClick={() => setActiveTab('points')}>Points</Tab>\r\n      </TabContainer>\r\n      \r\n      {activeTab === 'switcher' && (\r\n        <FormContainer>\r\n          <FormTitle>Switch Between Roles</FormTitle>\r\n          <div style={{ display: 'flex', gap: '20px', flexWrap: 'wrap', justifyContent: 'center' }}>\r\n            <Button \r\n              onClick={() => navigate('/')}\r\n              style={{ background: 'rgba(255,255,255,0.2)', color: 'white' }}\r\n            >\r\n              Public View\r\n            </Button>\r\n            <Button \r\n              onClick={() => {}}\r\n              style={{ background: 'gold', color: '#333' }}\r\n            >\r\n              Admin Dashboard\r\n            </Button>\r\n            <Button \r\n              onClick={() => navigate('/team-manager-login')}\r\n              style={{ background: 'rgba(255,255,255,0.2)', color: 'white' }}\r\n            >\r\n              Team Manager\r\n            </Button>\r\n            <Button \r\n              onClick={handleLogout}\r\n              style={{ background: '#ff4757', color: 'white' }}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </div>\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'events' && (\r\n        <FormContainer>\r\n          <FormTitle>Create New Event</FormTitle>\r\n          <FormGroup>\r\n            <Label>Event Name</Label>\r\n            <Input \r\n              type=\"text\" \r\n              value={newEvent.name}\r\n              onChange={(e) => setNewEvent({...newEvent, name: e.target.value})}\r\n              placeholder=\"Enter event name\"\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label>Event Color (RGB)</Label>\r\n            <RGBInputContainer>\r\n              <div>\r\n                <Label>R</Label>\r\n                <RGBInput \r\n                  type=\"number\" \r\n                  min=\"0\" \r\n                  max=\"255\" \r\n                  value={newEvent.color.r}\r\n                  onChange={(e) => setNewEvent({\r\n                    ...newEvent, \r\n                    color: {...newEvent.color, r: parseInt(e.target.value) || 0}\r\n                  })}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label>G</Label>\r\n                <RGBInput \r\n                  type=\"number\" \r\n                  min=\"0\" \r\n                  max=\"255\" \r\n                  value={newEvent.color.g}\r\n                  onChange={(e) => setNewEvent({\r\n                    ...newEvent, \r\n                    color: {...newEvent.color, g: parseInt(e.target.value) || 0}\r\n                  })}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label>B</Label>\r\n                <RGBInput \r\n                  type=\"number\" \r\n                  min=\"0\" \r\n                  max=\"255\" \r\n                  value={newEvent.color.b}\r\n                  onChange={(e) => setNewEvent({\r\n                    ...newEvent, \r\n                    color: {...newEvent.color, b: parseInt(e.target.value) || 0}\r\n                  })}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label>Preview</Label>\r\n                <ColorPreview r={newEvent.color.r} g={newEvent.color.g} b={newEvent.color.b} />\r\n              </div>\r\n            </RGBInputContainer>\r\n          </FormGroup>\r\n          \r\n          <Button onClick={handleCreateEvent}>Create Event</Button>\r\n          \r\n          <h3>Existing Events</h3>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <Th>Name</Th>\r\n                <Th>Categories</Th>\r\n                <Th>Color</Th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {events.map(event => (\r\n                <Tr key={event.id}>\r\n                  <Td>{event.name}</Td>\r\n                  <Td>{event.categories.join(', ')}</Td>\r\n                  <Td>\r\n                    <ColorPreview r={event.color.r} g={event.color.g} b={event.color.b} />\r\n                    RGB({event.color.r}, {event.color.g}, {event.color.b})\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'categories' && (\r\n        <FormContainer>\r\n          <FormTitle>Manage Categories</FormTitle>\r\n          \r\n          <FormGroup>\r\n            <Label>Select Event First</Label>\r\n            <Select \r\n              value={selectedEvent}\r\n              onChange={(e) => handleEventSelection(e.target.value)}\r\n            >\r\n              <option value=\"\">Select an event</option>\r\n              {events.map(event => (\r\n                <option key={event.id} value={event.name}>{event.name}</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          {selectedEvent ? (\r\n            <>\r\n              <FormGroup>\r\n                <Label>Category Name</Label>\r\n                <Input \r\n                  type=\"text\" \r\n                  value={newCategory.name}\r\n                  onChange={(e) => setNewCategory({...newCategory, name: e.target.value})}\r\n                  placeholder=\"Enter category name\"\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>Display Order</Label>\r\n                <Input \r\n                  type=\"number\" \r\n                  value={newCategory.order}\r\n                  onChange={(e) => setNewCategory({...newCategory, order: parseInt(e.target.value) || 1})}\r\n                  placeholder=\"Enter display order\"\r\n                />\r\n              </FormGroup>\r\n              \r\n              <Button onClick={handleCreateCategory}>Add Category</Button>\r\n              \r\n              <h3>Existing Categories</h3>\r\n              <Table>\r\n                <thead>\r\n                  <tr>\r\n                    <Th>Name</Th>\r\n                    <Th>Order</Th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {categories.map(category => (\r\n                    <Tr key={category.id}>\r\n                      <Td>{category.name}</Td>\r\n                      <Td>{category.order}</Td>\r\n                    </Tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </>\r\n          ) : (\r\n            <p>Please select an event first to manage categories.</p>\r\n          )}\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'teams' && (\r\n        <FormContainer>\r\n          <FormTitle>Create New Team</FormTitle>\r\n          \r\n          <FormGroup>\r\n            <Label>Select Event First</Label>\r\n            <Select \r\n              value={selectedEvent}\r\n              onChange={(e) => handleEventSelection(e.target.value)}\r\n            >\r\n              <option value=\"\">Select an event</option>\r\n              {events.map(event => (\r\n                <option key={event.id} value={event.name}>{event.name}</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          {selectedEvent ? (\r\n            <>\r\n              <FormGroup>\r\n                <Label>Team Name</Label>\r\n                <Input \r\n                  type=\"text\" \r\n                  value={newTeam.name}\r\n                  onChange={(e) => setNewTeam({...newTeam, name: e.target.value})}\r\n                  placeholder=\"Enter team name\"\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>Team Color</Label>\r\n                <Input \r\n                  type=\"color\" \r\n                  value={newTeam.color}\r\n                  onChange={(e) => setNewTeam({...newTeam, color: e.target.value})}\r\n                />\r\n              </FormGroup>\r\n              \r\n              <Button onClick={handleCreateTeam}>Create Team</Button>\r\n              \r\n              {/* Event filter for teams */}\r\n              <div style={{ marginTop: '30px' }}>\r\n                <FormGroup>\r\n                  <Label>Filter Teams by Event</Label>\r\n                  <Select \r\n                    value={selectedEventForTeams}\r\n                    onChange={(e) => setSelectedEventForTeams(e.target.value)}\r\n                  >\r\n                    <option value=\"\">All Events</option>\r\n                    {events.map(event => (\r\n                      <option key={event.id} value={event.name}>{event.name}</option>\r\n                    ))}\r\n                  </Select>\r\n                </FormGroup>\r\n                \r\n                <h3>Existing Teams</h3>\r\n                <Table>\r\n                  <thead>\r\n                    <tr>\r\n                      <Th>Name</Th>\r\n                      <Th>Color</Th>\r\n                      {selectedEventForTeams && <Th>Participated in {selectedEventForTeams}</Th>}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {teams.map(team => {\r\n                      // Filter teams that participated in the selected event if any\r\n                      if (selectedEventForTeams) {\r\n                        const teamResults = results.filter(result => \r\n                          result.event === selectedEventForTeams &&\r\n                          result.participants.some(participant => {\r\n                            const student = students.find(s => \r\n                              s.chestNumber === participant.name || \r\n                              s.name === participant.name\r\n                            );\r\n                            return student && student.team === team.name;\r\n                          })\r\n                        );\r\n                        \r\n                        // If no results for this team in the selected event, skip\r\n                        if (teamResults.length === 0) return null;\r\n                      }\r\n                      \r\n                      return (\r\n                        <Tr key={team.id}>\r\n                          <Td>{team.name}</Td>\r\n                          <Td>\r\n                            <ColorPreview r={parseInt(team.color.slice(1, 3), 16)} \r\n                                         g={parseInt(team.color.slice(3, 5), 16)} \r\n                                         b={parseInt(team.color.slice(5, 7), 16)} />\r\n                            {team.color}\r\n                          </Td>\r\n                          {selectedEventForTeams && (\r\n                            <Td>\r\n                              Participated\r\n                            </Td>\r\n                          )}\r\n                        </Tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <p>Please select an event first to manage teams.</p>\r\n          )}\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'students' && (\r\n        <FormContainer>\r\n          <FormTitle>Register Student</FormTitle>\r\n          \r\n          <FormGroup>\r\n            <Label>Select Event First</Label>\r\n            <Select \r\n              value={selectedEvent}\r\n              onChange={(e) => handleEventSelection(e.target.value)}\r\n            >\r\n              <option value=\"\">Select an event</option>\r\n              {events.map(event => (\r\n                <option key={event.id} value={event.name}>{event.name}</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          {selectedEvent ? (\r\n            <>\r\n              <FormGroup>\r\n                <Label>Student Name</Label>\r\n                <Input \r\n                  type=\"text\" \r\n                  value={newStudent.name}\r\n                  onChange={(e) => setNewStudent({...newStudent, name: e.target.value})}\r\n                  placeholder=\"Enter student name\"\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>Chest Number</Label>\r\n                <Input \r\n                  type=\"text\" \r\n                  value={newStudent.chestNumber}\r\n                  onChange={(e) => setNewStudent({...newStudent, chestNumber: e.target.value})}\r\n                  placeholder=\"Enter chest number\"\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>Team</Label>\r\n                <Select \r\n                  value={newStudent.team}\r\n                  onChange={(e) => setNewStudent({...newStudent, team: e.target.value})}\r\n                >\r\n                  <option value=\"\">Select a team</option>\r\n                  {teams.map(team => (\r\n                    <option key={team.id} value={team.name}>{team.name}</option>\r\n                  ))}\r\n                </Select>\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>Category</Label>\r\n                <Select \r\n                  value={newStudent.category}\r\n                  onChange={(e) => setNewStudent({...newStudent, category: e.target.value})}\r\n                >\r\n                  <option value=\"\">Select a category</option>\r\n                  {categories.map(category => (\r\n                    <option key={category.id} value={category.name}>{category.name}</option>\r\n                  ))}\r\n                </Select>\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label>Student Photo</Label>\r\n                <Input \r\n                  type=\"file\" \r\n                  accept=\"image/*\"\r\n                  onChange={(e) => {\r\n                    const file = e.target.files[0];\r\n                    if (file) {\r\n                      const reader = new FileReader();\r\n                      reader.onload = (event) => {\r\n                        setNewStudent({...newStudent, photo: event.target.result});\r\n                      };\r\n                      reader.readAsDataURL(file);\r\n                    }\r\n                  }}\r\n                />\r\n                {newStudent.photo && (\r\n                  <div style={{ marginTop: '10px' }}>\r\n                    <img \r\n                      src={newStudent.photo} \r\n                      alt=\"Student preview\" \r\n                      style={{ maxWidth: '200px', maxHeight: '200px', borderRadius: '5px' }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </FormGroup>\r\n\r\n              <Button onClick={handleCreateStudent}>Register Student</Button>\r\n              \r\n              {/* Event filter for students */}\r\n              <div style={{ marginTop: '30px' }}>\r\n                <FormGroup>\r\n                  <Label>Filter Students by Event</Label>\r\n                  <Select \r\n                    value={selectedEventForStudents}\r\n                    onChange={(e) => setSelectedEventForStudents(e.target.value)}\r\n                  >\r\n                    <option value=\"\">All Events</option>\r\n                    {events.map(event => (\r\n                      <option key={event.id} value={event.name}>{event.name}</option>\r\n                    ))}\r\n                  </Select>\r\n                </FormGroup>\r\n                \r\n                <h3>Registered Students</h3>\r\n                <Table>\r\n                  <thead>\r\n                    <tr>\r\n                      <Th>Name</Th>\r\n                      <Th>Chest Number</Th>\r\n                      <Th>Team</Th>\r\n                      <Th>Category</Th>\r\n                      {selectedEventForStudents && <Th>Participated in {selectedEventForStudents}</Th>}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {students.map(student => {\r\n                      // Filter students who participated in the selected event if any\r\n                      if (selectedEventForStudents) {\r\n                        const studentResults = results.filter(result => \r\n                          result.event === selectedEventForStudents &&\r\n                          result.participants.some(participant => \r\n                            participant.name === student.chestNumber || \r\n                            participant.name === student.name\r\n                          )\r\n                        );\r\n                        \r\n                        // If no results for this student in the selected event, skip\r\n                        if (studentResults.length === 0) return null;\r\n                      }\r\n                      \r\n                      return (\r\n                        <Tr key={student.id}>\r\n                          <Td>{student.name}</Td>\r\n                          <Td>{student.chestNumber}</Td>\r\n                          <Td>{student.team}</Td>\r\n                          <Td>{student.category}</Td>\r\n                          {selectedEventForStudents && (\r\n                            <Td>\r\n                              Participated\r\n                            </Td>\r\n                          )}\r\n                        </Tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <p>Please select an event first to manage students.</p>\r\n          )}\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'programs' && (\r\n        <FormContainer>\r\n          <FormTitle>Define Program</FormTitle>\r\n          \r\n          <FormGroup>\r\n            <Label>Select Event First</Label>\r\n            <Select \r\n              value={selectedEvent}\r\n              onChange={(e) => handleEventSelection(e.target.value)}\r\n            >\r\n              <option value=\"\">Select an event</option>\r\n              {events.map(event => (\r\n                <option key={event.id} value={event.name}>{event.name}</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          {selectedEvent ? (\r\n            <>\r\n              <FormGroup>\r\n                <Label>Program Name</Label>\r\n                <Input \r\n                  type=\"text\" \r\n                  value={newProgram.name}\r\n                  onChange={(e) => setNewProgram({...newProgram, name: e.target.value})}\r\n                  placeholder=\"Enter program name\"\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>Program Type</Label>\r\n                <Select \r\n                  value={newProgram.type}\r\n                  onChange={(e) => setNewProgram({...newProgram, type: e.target.value})}\r\n                >\r\n                  <option value=\"Individual\">Individual</option>\r\n                  <option value=\"Group\">Group</option>\r\n                  <option value=\"General\">General</option>\r\n                </Select>\r\n              </FormGroup>\r\n              \r\n              <Button onClick={handleCreateProgram}>Add Program</Button>\r\n              \r\n              {/* Event filter for programs */}\r\n              <div style={{ marginTop: '30px' }}>\r\n                <FormGroup>\r\n                  <Label>Filter Programs by Event</Label>\r\n                  <Select \r\n                    value={selectedEventForPrograms}\r\n                    onChange={(e) => setSelectedEventForPrograms(e.target.value)}\r\n                  >\r\n                    <option value=\"\">All Events</option>\r\n                    {events.map(event => (\r\n                      <option key={event.id} value={event.name}>{event.name}</option>\r\n                    ))}\r\n                  </Select>\r\n                </FormGroup>\r\n                \r\n                <h3>Existing Programs</h3>\r\n                <Table>\r\n                  <thead>\r\n                    <tr>\r\n                      <Th>Name</Th>\r\n                      <Th>Type</Th>\r\n                      {selectedEventForPrograms && <Th>Used in {selectedEventForPrograms}</Th>}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {programs.map(program => {\r\n                      // Filter programs used in the selected event if any\r\n                      if (selectedEventForPrograms) {\r\n                        const programResults = results.filter(result => \r\n                          result.event === selectedEventForPrograms &&\r\n                          result.program === program.name\r\n                        );\r\n                        \r\n                        // If no results for this program in the selected event, skip\r\n                        if (programResults.length === 0) return null;\r\n                      }\r\n                      \r\n                      return (\r\n                        <Tr key={program.id}>\r\n                          <Td>{program.name}</Td>\r\n                          <Td>{program.type}</Td>\r\n                          {selectedEventForPrograms && (\r\n                            <Td>\r\n                              Used\r\n                            </Td>\r\n                          )}\r\n                        </Tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <p>Please select an event first to manage programs.</p>\r\n          )}\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'results' && (\r\n        <FormContainer>\r\n          <FormTitle>Enter Results</FormTitle>\r\n          \r\n          <div style={{ \r\n            background: 'rgba(255,255,255,0.1)', \r\n            padding: '15px', \r\n            borderRadius: '10px', \r\n            marginBottom: '20px' \r\n          }}>\r\n            <p style={{ margin: '0 0 10px 0', color: 'gold' }}>\r\n              <strong>Tip:</strong> To use grade-specific points, include the grade in participant names\r\n            </p>\r\n            <p style={{ margin: '0 0 5px 0', fontSize: '0.9rem' }}>\r\n              Examples: \"John Doe (A)\" or \"SJ001 (B)\"\r\n            </p>\r\n            <p style={{ margin: 0, fontSize: '0.9rem', fontStyle: 'italic' }}>\r\n              Configure grade points in the \"Points\" tab\r\n            </p>\r\n          </div>\r\n          \r\n          <FormGroup>\r\n            <Label>Event</Label>\r\n            <Select \r\n              value={newResult.event}\r\n              onChange={(e) => setNewResult({...newResult, event: e.target.value})}\r\n            >\r\n              <option value=\"\">Select an event</option>\r\n              {events.map(event => (\r\n                <option key={event.id} value={event.name}>{event.name}</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label>Program</Label>\r\n            <Select \r\n              value={newResult.program}\r\n              onChange={(e) => setNewResult({...newResult, program: e.target.value})}\r\n            >\r\n              <option value=\"\">Select a program</option>\r\n              {programs.map(program => (\r\n                <option key={program.id} value={program.name}>{program.name}</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label>Category</Label>\r\n            <Select \r\n              value={newResult.category}\r\n              onChange={(e) => setNewResult({...newResult, category: e.target.value})}\r\n            >\r\n              <option value=\"\">Select a category</option>\r\n              {categories.map(category => (\r\n                <option key={category.id} value={category.name}>{category.name}</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          <h3>Participants & Positions</h3>\r\n          {newResult.participants.map((participant, index) => (\r\n            <FormGroup key={index}>\r\n              <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\r\n                <Input \r\n                  type=\"text\" \r\n                  placeholder=\"Participant name or chest number\"\r\n                  value={participant.name}\r\n                  onChange={(e) => handleParticipantChange(index, 'name', e.target.value)}\r\n                  style={{ flex: 1 }}\r\n                />\r\n                <Input \r\n                  type=\"text\" \r\n                  placeholder=\"Position (1st, 2nd, 3rd or Gold, Silver, Bronze)\"\r\n                  value={participant.position}\r\n                  onChange={(e) => handleParticipantChange(index, 'position', e.target.value)}\r\n                  style={{ flex: 1 }}\r\n                />\r\n                {newResult.participants.length > 1 && (\r\n                  <Button onClick={() => handleRemoveParticipant(index)} style={{ backgroundColor: '#ff4757' }}>\r\n                    Remove\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </FormGroup>\r\n          ))}\r\n          \r\n          <Button onClick={handleAddParticipant}>Add Participant</Button>\r\n          <Button onClick={handleSaveResult}>Save Result</Button>\r\n          \r\n          {/* Event filter for results */}\r\n          <div style={{ marginTop: '30px' }}>\r\n            <FormGroup>\r\n              <Label>Filter Results by Event</Label>\r\n              <Select \r\n                value={selectedEventForResults}\r\n                onChange={(e) => setSelectedEventForResults(e.target.value)}\r\n              >\r\n                <option value=\"\">All Events</option>\r\n                {events.map(event => (\r\n                  <option key={event.id} value={event.name}>{event.name}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            \r\n            <h3>Existing Results</h3>\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <Th>Event</Th>\r\n                  <Th>Program</Th>\r\n                  <Th>Category</Th>\r\n                  <Th>Participants</Th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {results\r\n                  .filter(result => !selectedEventForResults || result.event === selectedEventForResults)\r\n                  .map(result => (\r\n                    <Tr key={result.id}>\r\n                      <Td>{result.event}</Td>\r\n                      <Td>{result.program}</Td>\r\n                      <Td>{result.category}</Td>\r\n                      <Td>\r\n                        {result.participants.map((p, i) => (\r\n                          <div key={i}>\r\n                            {p.name} - {p.position} ({p.points} points)\r\n                          </div>\r\n                        ))}\r\n                      </Td>\r\n                    </Tr>\r\n                  ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'managers' && (\r\n        <FormContainer>\r\n          <FormTitle>{editingTeamManager ? 'Edit Team Manager' : 'Create Team Manager'}</FormTitle>\r\n          \r\n          <FormGroup>\r\n            <Label>Select Event First</Label>\r\n            <Select \r\n              value={selectedEvent}\r\n              onChange={(e) => handleEventSelection(e.target.value)}\r\n            >\r\n              <option value=\"\">Select an event</option>\r\n              {events.map(event => (\r\n                <option key={event.id} value={event.name}>{event.name}</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          {selectedEvent ? (\r\n            <>\r\n              <FormGroup>\r\n                <Label>Username</Label>\r\n                <Input \r\n                  type=\"text\" \r\n                  value={newTeamManager.username}\r\n                  onChange={(e) => setNewTeamManager({...newTeamManager, username: e.target.value})}\r\n                  placeholder=\"Enter username\"\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>Password</Label>\r\n                <Input \r\n                  type=\"password\" \r\n                  value={newTeamManager.password}\r\n                  onChange={(e) => setNewTeamManager({...newTeamManager, password: e.target.value})}\r\n                  placeholder=\"Enter password\"\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>Assigned Team</Label>\r\n                <Select \r\n                  value={newTeamManager.team}\r\n                  onChange={(e) => setNewTeamManager({...newTeamManager, team: e.target.value})}\r\n                >\r\n                  <option value=\"\">Select a team</option>\r\n                  {teams.map(team => (\r\n                    <option key={team.id} value={team.name}>{team.name}</option>\r\n                  ))}\r\n                </Select>\r\n              </FormGroup>\r\n              \r\n              <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap' }}>\r\n                {editingTeamManager ? (\r\n                  <>\r\n                    <Button onClick={handleUpdateTeamManager}>Update Team Manager</Button>\r\n                    <Button \r\n                      onClick={handleCancelEdit}\r\n                      style={{ background: '#ff4757' }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <Button onClick={handleCreateTeamManager}>Create Team Manager</Button>\r\n                )}\r\n              </div>\r\n              \r\n              <h3 style={{ marginTop: '30px' }}>Existing Team Managers</h3>\r\n              {teamManagers.length === 0 ? (\r\n                <p>No team managers configured yet.</p>\r\n              ) : (\r\n                <Table>\r\n                  <thead>\r\n                    <tr>\r\n                      <Th>Username</Th>\r\n                      <Th>Assigned Team</Th>\r\n                      <Th>Actions</Th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {teamManagers.map(manager => (\r\n                      <Tr key={manager.id}>\r\n                        <Td>{manager.username}</Td>\r\n                        <Td>{manager.team}</Td>\r\n                        <Td>\r\n                          <Button \r\n                            onClick={() => handleEditTeamManager(manager)}\r\n                            style={{ padding: '5px 10px', marginRight: '5px' }}\r\n                          >\r\n                            Edit\r\n                          </Button>\r\n                          <Button \r\n                            onClick={() => handleDeleteTeamManager(manager.id)}\r\n                            style={{ padding: '5px 10px', background: '#ff4757' }}\r\n                          >\r\n                            Delete\r\n                          </Button>\r\n                        </Td>\r\n                      </Tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <p>Please select an event first to manage team managers.</p>\r\n          )}\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'grades' && (\r\n        <FormContainer>\r\n          <FormTitle>Manage Grades</FormTitle>\r\n          \r\n          <div style={{ \r\n            background: 'rgba(255,255,255,0.1)', \r\n            padding: '15px', \r\n            borderRadius: '10px', \r\n            marginBottom: '20px' \r\n          }}>\r\n            <h3 style={{ marginTop: 0, color: 'gold' }}>Add New Grade with Points</h3>\r\n            <FormGroup>\r\n              <Label>Grade Letter</Label>\r\n              <Input \r\n                type=\"text\" \r\n                value={newGrade}\r\n                onChange={(e) => setNewGrade(e.target.value.toUpperCase())}\r\n                placeholder=\"Enter grade (e.g., A, B, C)\"\r\n                maxLength=\"1\"\r\n                style={{ width: '80px' }}\r\n              />\r\n            </FormGroup>\r\n            \r\n            <FormGroup>\r\n              <Label>Default Points for this Grade</Label>\r\n              <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap' }}>\r\n                <div>\r\n                  <Label>1st (Gold)</Label>\r\n                  <Input \r\n                    type=\"number\" \r\n                    value={newGradePoints.gold}\r\n                    onChange={(e) => setNewGradePoints({...newGradePoints, gold: parseInt(e.target.value) || 0})}\r\n                    style={{ width: '80px' }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label>2nd (Silver)</Label>\r\n                  <Input \r\n                    type=\"number\" \r\n                    value={newGradePoints.silver}\r\n                    onChange={(e) => setNewGradePoints({...newGradePoints, silver: parseInt(e.target.value) || 0})}\r\n                    style={{ width: '80px' }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label>3rd (Bronze)</Label>\r\n                  <Input \r\n                    type=\"number\" \r\n                    value={newGradePoints.bronze}\r\n                    onChange={(e) => setNewGradePoints({...newGradePoints, bronze: parseInt(e.target.value) || 0})}\r\n                    style={{ width: '80px' }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </FormGroup>\r\n            \r\n            <Button \r\n              onClick={() => {\r\n                if (newGrade && !availableGrades.includes(newGrade)) {\r\n                  // Add the new grade to available grades\r\n                  setAvailableGrades([...availableGrades, newGrade]);\r\n                  \r\n                  // Ask user if they want to pre-configure points for all categories\r\n                  const preConfigure = window.confirm(\r\n                    `Grade ${newGrade} added successfully!\\n\\n` +\r\n                    `Do you want to pre-configure default points (${newGradePoints.gold}/${newGradePoints.silver}/${newGradePoints.bronze}) ` +\r\n                    `for this grade across all categories?\\n\\n` +\r\n                    `You can always customize these later in the Points tab.`\r\n                  );\r\n                  \r\n                  if (preConfigure) {\r\n                    preConfigureGradePoints(newGrade, newGradePoints);\r\n                    alert(`Points pre-configured for grade ${newGrade} across all categories!`);\r\n                  }\r\n                  \r\n                  setNewGrade('');\r\n                  setNewGradePoints({ gold: 10, silver: 7, bronze: 5 });\r\n                } else if (availableGrades.includes(newGrade)) {\r\n                  alert(`Grade ${newGrade} already exists!`);\r\n                } else {\r\n                  alert('Please enter a valid grade letter.');\r\n                }\r\n              }}\r\n            >\r\n              Add Grade\r\n            </Button>\r\n          </div>\r\n          \r\n          <h3>Available Grades</h3>\r\n          <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap', marginBottom: '20px' }}>\r\n            {availableGrades.map((grade, index) => (\r\n              <div \r\n                key={index} \r\n                style={{ \r\n                  background: 'rgba(255,255,255,0.2)', \r\n                  padding: '10px 15px', \r\n                  borderRadius: '20px',\r\n                  display: 'flex',\r\n                  alignItems: 'center'\r\n                }}\r\n              >\r\n                <span>{grade}</span>\r\n                <button \r\n                  onClick={() => {\r\n                    if (availableGrades.length > 1) {\r\n                      setAvailableGrades(availableGrades.filter(g => g !== grade));\r\n                    } else {\r\n                      alert('You must have at least one grade!');\r\n                    }\r\n                  }}\r\n                  style={{ \r\n                    background: 'transparent', \r\n                    border: 'none', \r\n                    color: 'red', \r\n                    cursor: 'pointer',\r\n                    marginLeft: '10px',\r\n                    fontWeight: 'bold'\r\n                  }}\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          \r\n          <div>\r\n            <h3>Grade Point Configuration Example</h3>\r\n            <div style={{ \r\n              background: 'rgba(255,255,255,0.1)', \r\n              padding: '20px', \r\n              borderRadius: '10px', \r\n              marginBottom: '20px' \r\n            }}>\r\n              <p style={{ color: 'gold', fontWeight: 'bold' }}>Example: Configure A Grade Points</p>\r\n              <ol style={{ paddingLeft: '20px', color: 'rgba(255,255,255,0.9)' }}>\r\n                <li>Go to the \"Points\" tab</li>\r\n                <li>Select a category (e.g., \"Senior\")</li>\r\n                <li>From the \"Select Grade\" dropdown, choose \"A Grade\"</li>\r\n                <li>Set points for each position:\r\n                  <ul style={{ paddingLeft: '20px', marginTop: '5px' }}>\r\n                    <li>1st Position (Gold): 10 points</li>\r\n                    <li>2nd Position (Silver): 7 points</li>\r\n                    <li>3rd Position (Bronze): 5 points</li>\r\n                  </ul>\r\n                </li>\r\n                <li>Click \"Save Grade Points\"</li>\r\n              </ol>\r\n              <p style={{ fontStyle: 'italic', color: 'rgba(255,255,255,0.7)' }}>\r\n                Participants with names like \"John Doe (A)\" will now receive these points instead of the default values.\r\n              </p>\r\n            </div>\r\n            \r\n            <p style={{ color: 'rgba(255,255,255,0.7)' }}>\r\n              Note: Grades are used to differentiate point values for participants in the same category. \r\n              For example, you can have different point values for A grade and B grade participants in the same category.\r\n              To use grade-specific points, include the grade in parentheses at the end of participant names (e.g., \"Participant Name (A)\").\r\n            </p>\r\n          </div>\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'batch-points' && (\r\n        <FormContainer>\r\n          <FormTitle>Batch Grade Points Configuration</FormTitle>\r\n          <p style={{ color: 'rgba(255,255,255,0.7)' }}>\r\n            Configure points for a grade across selected categories\r\n          </p>\r\n          \r\n          <FormGroup>\r\n            <Label>Select Grade</Label>\r\n            <Select \r\n              value={selectedGradeForPoints}\r\n              onChange={(e) => {\r\n                setSelectedGradeForPoints(e.target.value);\r\n                // Load existing points if they exist for the selected grade in any category\r\n                const existingConfigKey = Object.keys(gradePoints).find(key => \r\n                  key.endsWith(`-${e.target.value}`)\r\n                );\r\n                if (existingConfigKey && gradePoints[existingConfigKey]) {\r\n                  setPoints(gradePoints[existingConfigKey]);\r\n                } else {\r\n                  // Reset to default points if no existing config for this grade\r\n                  setPoints({ gold: 10, silver: 7, bronze: 5 });\r\n                }\r\n              }}\r\n            >\r\n              <option value=\"\">Select a grade</option>\r\n              {availableGrades.map((grade, index) => (\r\n                <option key={index} value={grade}>{grade} Grade</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          {selectedGradeForPoints && (\r\n            <div style={{ backgroundColor: 'rgba(255,255,255,0.1)', padding: '20px', borderRadius: '10px', marginBottom: '20px' }}>\r\n              <h3>Set Points for {selectedGradeForPoints} Grade</h3>\r\n              \r\n              <FormGroup>\r\n                <Label>Select Categories</Label>\r\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\r\n                  {categories.length > 0 ? (\r\n                    categories.map((category, index) => (\r\n                      <label key={category.id} style={{ display: 'flex', alignItems: 'center', color: 'white' }}>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={selectedCategoriesForBatch.includes(category.name)}\r\n                          onChange={(e) => {\r\n                            if (e.target.checked) {\r\n                              setSelectedCategoriesForBatch([...selectedCategoriesForBatch, category.name]);\r\n                            } else {\r\n                              setSelectedCategoriesForBatch(selectedCategoriesForBatch.filter(cat => cat !== category.name));\r\n                            }\r\n                          }}\r\n                          style={{ marginRight: '10px', width: '18px', height: '18px' }}\r\n                        />\r\n                        {category.name}\r\n                      </label>\r\n                    ))\r\n                  ) : (\r\n                    <p>No categories available. Please create categories first.</p>\r\n                  )}\r\n                </div>\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>1st Position (Gold) Points</Label>\r\n                <Input \r\n                  type=\"number\" \r\n                  value={points.gold}\r\n                  onChange={(e) => setPoints({...points, gold: parseInt(e.target.value) || 0})}\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>2nd Position (Silver) Points</Label>\r\n                <Input \r\n                  type=\"number\" \r\n                  value={points.silver}\r\n                  onChange={(e) => setPoints({...points, silver: parseInt(e.target.value) || 0})}\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>3rd Position (Bronze) Points</Label>\r\n                <Input \r\n                  type=\"number\" \r\n                  value={points.bronze}\r\n                  onChange={(e) => setPoints({...points, bronze: parseInt(e.target.value) || 0})}\r\n                />\r\n              </FormGroup>\r\n              \r\n              <div style={{ display: 'flex', gap: '10px', marginTop: '20px' }}>\r\n                <Button \r\n                  onClick={() => {\r\n                    if (!selectedGradeForPoints || selectedCategoriesForBatch.length === 0) {\r\n                      alert('Please select a grade and at least one category');\r\n                      return;\r\n                    }\r\n                    \r\n                    const updatedGradePoints = { ...gradePoints };\r\n                    let updatedCount = 0;\r\n                    \r\n                    // Update points for this grade across selected categories only\r\n                    selectedCategoriesForBatch.forEach(categoryName => {\r\n                      const key = `${categoryName}-${selectedGradeForPoints}`;\r\n                      updatedGradePoints[key] = { ...points };\r\n                      updatedCount++;\r\n                    });\r\n                    \r\n                    setGradePoints(updatedGradePoints);\r\n                    alert(`Points updated for ${updatedCount} categories with ${selectedGradeForPoints} grade`);\r\n                  }}\r\n                >\r\n                  Apply to Selected Categories\r\n                </Button>\r\n                \r\n                <Button \r\n                  onClick={() => {\r\n                    if (!selectedGradeForPoints) {\r\n                      alert('Please select a grade');\r\n                      return;\r\n                    }\r\n                    \r\n                    // Select all categories\r\n                    setSelectedCategoriesForBatch(categories.map(cat => cat.name));\r\n                  }}\r\n                >\r\n                  Select All Categories\r\n                </Button>\r\n                \r\n                <Button \r\n                  onClick={() => {\r\n                    // Deselect all categories\r\n                    setSelectedCategoriesForBatch([]);\r\n                  }}\r\n                >\r\n                  Deselect All\r\n                </Button>\r\n              </div>\r\n              \r\n              <div style={{ marginTop: '20px' }}>\r\n                <h4>Current Configurations</h4>\r\n                <Table>\r\n                  <thead>\r\n                    <tr>\r\n                      <Th>Category</Th>\r\n                      <Th>Grade</Th>\r\n                      <Th>1st (Gold)</Th>\r\n                      <Th>2nd (Silver)</Th>\r\n                      <Th>3rd (Bronze)</Th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {categories.flatMap((category) => {\r\n                      // Get all grade configurations for this category\r\n                      const categoryGradeConfigs = Object.keys(gradePoints)\r\n                        .filter(key => key.startsWith(`${category.name}-`))\r\n                        .map(key => {\r\n                          const grade = key.split('-')[1];\r\n                          return {\r\n                            category: category.name,\r\n                            grade,\r\n                            config: gradePoints[key]\r\n                          };\r\n                        });\r\n                      \r\n                      // If there are no grade configurations for this category, show a default row\r\n                      if (categoryGradeConfigs.length === 0) {\r\n                        return (\r\n                          <Tr key={`${category.name}-default`}>\r\n                            <Td>{category.name}</Td>\r\n                            <Td>-</Td>\r\n                            <Td colSpan=\"3\" style={{ textAlign: 'center' }}>No grade configurations</Td>\r\n                          </Tr>\r\n                        );\r\n                      }\r\n                      \r\n                      // Show all grade configurations for this category\r\n                      return categoryGradeConfigs.map(({ category, grade, config }, index) => (\r\n                        <Tr key={`${category}-${grade}`}>\r\n                          {index === 0 ? (\r\n                            <Td rowSpan={categoryGradeConfigs.length}>{category}</Td>\r\n                          ) : null}\r\n                          <Td>{grade}</Td>\r\n                          <Td>{config.gold}</Td>\r\n                          <Td>{config.silver}</Td>\r\n                          <Td>{config.bronze}</Td>\r\n                        </Tr>\r\n                      ));\r\n                    })}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </FormContainer>\r\n      )}\r\n      \r\n      {activeTab === 'points' && (\r\n        <FormContainer>\r\n          <FormTitle>Configure Points</FormTitle>\r\n          \r\n          <div style={{ \r\n            background: 'rgba(255,255,255,0.1)', \r\n            padding: '15px', \r\n            borderRadius: '10px', \r\n            marginBottom: '20px' \r\n          }}>\r\n            <p style={{ margin: '0 0 10px 0', color: 'gold' }}>\r\n              <strong>Quick Setup Example:</strong> To configure A grade with 10/7/5 points:\r\n            </p>\r\n            <ol style={{ margin: '0 0 10px 20px', fontSize: '0.9rem' }}>\r\n              <li>Select a category below</li>\r\n              <li>Choose \"A Grade\" from the dropdown</li>\r\n              <li>Set Gold=10, Silver=7, Bronze=5</li>\r\n              <li>Click \"Save Grade Points\"</li>\r\n            </ol>\r\n            <p style={{ margin: 0, fontSize: '0.9rem', fontStyle: 'italic' }}>\r\n              Participants named \"John Doe (A)\" will get these points\r\n            </p>\r\n          </div>\r\n          \r\n          <FormGroup>\r\n            <Label>Configure Points By Category</Label>\r\n            <Select \r\n              value={selectedCategoryForPoints}\r\n              onChange={(e) => handleCategoryChangeForPoints(e.target.value)}\r\n            >\r\n              <option value=\"\">Select a category</option>\r\n              {categories.map(category => (\r\n                <option key={category.id} value={category.name}>{category.name}</option>\r\n              ))}\r\n            </Select>\r\n          </FormGroup>\r\n          \r\n          {selectedCategoryForPoints && (\r\n            <div style={{ backgroundColor: 'rgba(255,255,255,0.1)', padding: '20px', borderRadius: '10px', marginBottom: '20px' }}>\r\n              <h3>Points for {selectedCategoryForPoints}</h3>\r\n              \r\n              <FormGroup>\r\n                <Label>Select Grade (Optional)</Label>\r\n                <Select \r\n                  value={selectedGradeForPoints}\r\n                  onChange={(e) => handleGradeChangeForPoints(e.target.value)}\r\n                >\r\n                  <option value=\"\">No grade (category only)</option>\r\n                  {availableGrades.map((grade, index) => (\r\n                    <option key={index} value={grade}>{grade} Grade</option>\r\n                  ))}\r\n                </Select>\r\n                <Button \r\n                  onClick={handlePrepopulateAGrade}\r\n                  style={{ \r\n                    marginLeft: '10px', \r\n                    background: 'rgba(255,215,0,0.2)',\r\n                    color: 'gold'\r\n                  }}\r\n                >\r\n                  Example: A Grade (10/7/5)\r\n                </Button>\r\n              </FormGroup>\r\n              \r\n              {selectedGradeForPoints && (\r\n                <h4>Points for {selectedCategoryForPoints} - {selectedGradeForPoints} Grade</h4>\r\n              )}\r\n              \r\n              <FormGroup>\r\n                <Label>1st Position (Gold) Points</Label>\r\n                <Input \r\n                  type=\"number\" \r\n                  value={points.gold}\r\n                  onChange={(e) => setPoints({...points, gold: parseInt(e.target.value) || 0})}\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>2nd Position (Silver) Points</Label>\r\n                <Input \r\n                  type=\"number\" \r\n                  value={points.silver}\r\n                  onChange={(e) => setPoints({...points, silver: parseInt(e.target.value) || 0})}\r\n                />\r\n              </FormGroup>\r\n              \r\n              <FormGroup>\r\n                <Label>3rd Position (Bronze) Points</Label>\r\n                <Input \r\n                  type=\"number\" \r\n                  value={points.bronze}\r\n                  onChange={(e) => setPoints({...points, bronze: parseInt(e.target.value) || 0})}\r\n                />\r\n              </FormGroup>\r\n              \r\n              {selectedGradeForPoints ? (\r\n                <Button onClick={handleSaveGradePoints}>Save Grade Points</Button>\r\n              ) : (\r\n                <Button onClick={handleSaveCategoryPoints}>Save Category Points</Button>\r\n              )}\r\n              \r\n              {!selectedGradeForPoints && categoryPoints[selectedCategoryForPoints] && (\r\n                <div style={{ marginTop: '10px', color: 'gold' }}>\r\n                  <strong>Current category configuration saved</strong>\r\n                </div>\r\n              )}\r\n              \r\n              {selectedGradeForPoints && gradePoints[`${selectedCategoryForPoints}-${selectedGradeForPoints}`] && (\r\n                <div style={{ marginTop: '10px', color: 'gold' }}>\r\n                  <strong>Current grade configuration saved</strong>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          \r\n          <FormTitle>Default Points Configuration</FormTitle>\r\n          <p>These points will be used when no category-specific or grade-specific points are configured.</p>\r\n          \r\n          <FormGroup>\r\n            <Label>1st Position (Gold) Points</Label>\r\n            <Input \r\n              type=\"number\" \r\n              value={points.gold}\r\n              onChange={(e) => setPoints({...points, gold: parseInt(e.target.value) || 0})}\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label>2nd Position (Silver) Points</Label>\r\n            <Input \r\n              type=\"number\" \r\n              value={points.silver}\r\n              onChange={(e) => setPoints({...points, silver: parseInt(e.target.value) || 0})}\r\n            />\r\n          </FormGroup>\r\n          \r\n          <FormGroup>\r\n            <Label>3rd Position (Bronze) Points</Label>\r\n            <Input \r\n              type=\"number\" \r\n              value={points.bronze}\r\n              onChange={(e) => setPoints({...points, bronze: parseInt(e.target.value) || 0})}\r\n            />\r\n          </FormGroup>\r\n          \r\n          <Button onClick={() => saveToLocalStorage('points', points)}>Save Default Points Configuration</Button>\r\n          <Button onClick={handleChangePassword}>Change Admin Password</Button>\r\n          \r\n          {Object.keys(categoryPoints).length > 0 && (\r\n            <div style={{ marginTop: '30px' }}>\r\n              <h3>Category-Specific Points Configuration</h3>\r\n              <Table>\r\n                <thead>\r\n                  <tr>\r\n                    <Th>Category</Th>\r\n                    <Th>1st (Gold)</Th>\r\n                    <Th>2nd (Silver)</Th>\r\n                    <Th>3rd (Bronze)</Th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {Object.entries(categoryPoints).map(([category, pointsConfig]) => (\r\n                    <Tr key={category}>\r\n                      <Td>{category}</Td>\r\n                      <Td>{pointsConfig.gold}</Td>\r\n                      <Td>{pointsConfig.silver}</Td>\r\n                      <Td>{pointsConfig.bronze}</Td>\r\n                    </Tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          )}\r\n          \r\n          {Object.keys(gradePoints).length > 0 && (\r\n            <div style={{ marginTop: '30px' }}>\r\n              <h3>Grade-Specific Points Configuration</h3>\r\n              <Table>\r\n                <thead>\r\n                  <tr>\r\n                    <Th>Category</Th>\r\n                    <Th>Grade</Th>\r\n                    <Th>1st (Gold)</Th>\r\n                    <Th>2nd (Silver)</Th>\r\n                    <Th>3rd (Bronze)</Th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {Object.entries(gradePoints).map(([key, pointsConfig]) => {\r\n                    const [category, grade] = key.split('-');\r\n                    return (\r\n                      <Tr key={key}>\r\n                        <Td>{category}</Td>\r\n                        <Td>{grade}</Td>\r\n                        <Td>{pointsConfig.gold}</Td>\r\n                        <Td>{pointsConfig.silver}</Td>\r\n                        <Td>{pointsConfig.bronze}</Td>\r\n                      </Tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          )}\r\n        </FormContainer>\r\n      )}\r\n    </DashboardContainer>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}