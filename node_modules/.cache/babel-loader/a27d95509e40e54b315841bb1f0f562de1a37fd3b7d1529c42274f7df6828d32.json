{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SMIC_STUDIO\\\\Desktop\\\\MEHFIL 25 APP\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { loadFromLocalStorage, saveToLocalStorage, calculateTeamStandings } from '../utils/dataStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardContainer = styled.div`\n  padding: 20px;\n  color: white;\n  min-height: 100vh;\n`;\n_c = DashboardContainer;\nconst Header = styled.h1`\n  text-align: center;\n  font-size: 2rem;\n  margin-bottom: 30px;\n  color: gold;\n`;\n_c2 = Header;\nconst TabContainer = styled.div`\n  display: flex;\n  border-bottom: 2px solid rgba(255,255,255,0.2);\n  margin-bottom: 30px;\n  flex-wrap: wrap;\n`;\n_c3 = TabContainer;\nconst Tab = styled.button`\n  padding: 15px 30px;\n  background: ${props => props.active ? 'rgba(255,255,255,0.2)' : 'transparent'};\n  color: ${props => props.active ? 'gold' : 'white'};\n  border: none;\n  cursor: pointer;\n  font-size: 1.1rem;\n  font-weight: bold;\n\n  &:hover {\n    background: rgba(255,255,255,0.1);\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 15px;\n    font-size: 0.9rem;\n  }\n`;\n_c4 = Tab;\nconst FormContainer = styled.div`\n  background: rgba(255,255,255,0.1);\n  border-radius: 15px;\n  padding: 30px;\n  backdrop-filter: blur(10px);\n  margin-bottom: 30px;\n`;\n_c5 = FormContainer;\nconst FormTitle = styled.h2`\n  margin-top: 0;\n  color: gold;\n  border-bottom: 1px solid rgba(255,255,255,0.2);\n  padding-bottom: 10px;\n`;\n_c6 = FormTitle;\nconst FormGroup = styled.div`\n  margin-bottom: 20px;\n`;\n_c7 = FormGroup;\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  font-weight: bold;\n`;\n_c8 = Label;\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px;\n  border-radius: 8px;\n  border: none;\n  background: rgba(255,255,255,0.1);\n  color: white;\n  font-size: 1rem;\n\n  &:focus {\n    outline: 2px solid gold;\n  }\n`;\n_c9 = Input;\nconst Select = styled.select`\n  width: 100%;\n  padding: 12px;\n  border-radius: 8px;\n  border: none;\n  background: rgba(255,255,255,0.1);\n  color: white;\n  font-size: 1rem;\n\n  &:focus {\n    outline: 2px solid gold;\n  }\n`;\n_c0 = Select;\nconst Button = styled.button`\n  padding: 12px 25px;\n  background: gold;\n  color: #333;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-weight: bold;\n  font-size: 1rem;\n  transition: all 0.3s ease;\n  margin-right: 10px;\n  margin-bottom: 10px;\n\n  &:hover {\n    background: #ffd700;\n    transform: translateY(-2px);\n  }\n`;\n_c1 = Button;\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  background: rgba(255,255,255,0.1);\n  border-radius: 10px;\n  overflow: hidden;\n`;\n_c10 = Table;\nconst Th = styled.th`\n  background: rgba(0,0,0,0.2);\n  padding: 15px;\n  text-align: left;\n`;\n_c11 = Th;\nconst Td = styled.td`\n  padding: 15px;\n  border-bottom: 1px solid rgba(255,255,255,0.1);\n`;\n_c12 = Td;\nconst Tr = styled.tr`\n  &:hover {\n    background: rgba(255,255,255,0.05);\n  }\n`;\n_c13 = Tr;\nconst ColorPreview = styled.div`\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background: ${props => `rgb(${props.r}, ${props.g}, ${props.b})`};\n  display: inline-block;\n  margin-right: 10px;\n`;\n_c14 = ColorPreview;\nconst RGBInputContainer = styled.div`\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n`;\n_c15 = RGBInputContainer;\nconst RGBInput = styled.input`\n  width: 80px;\n  padding: 8px;\n  border-radius: 5px;\n  border: none;\n  background: rgba(255,255,255,0.1);\n  color: white;\n  text-align: center;\n`;\n_c16 = RGBInput;\nconst AdminDashboard = () => {\n  _s();\n  var _categoryPoints$selec, _categoryPoints$selec2, _categoryPoints$selec3, _gradePoints$selected, _gradePoints$selected2, _gradePoints$selected3;\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState('events');\n  const [events, setEvents] = useState([]);\n  const [teams, setTeams] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [programs, setPrograms] = useState([]);\n  const [results, setResults] = useState([]);\n  const [points, setPoints] = useState({\n    gold: 10,\n    silver: 7,\n    bronze: 5\n  });\n  // Category-specific points configuration\n  const [categoryPoints, setCategoryPoints] = useState({});\n  // Grade-specific points configuration\n  const [gradePoints, setGradePoints] = useState({});\n  // Available grades configuration\n  const [availableGrades, setAvailableGrades] = useState(['A', 'B', 'C', 'D']);\n  // New grade points configuration\n  const [newGradePoints, setNewGradePoints] = useState({\n    gold: 10,\n    silver: 7,\n    bronze: 5\n  });\n  // Team managers configuration\n  const [teamManagers, setTeamManagers] = useState([]);\n  // Selected event for management\n  const [selectedEvent, setSelectedEvent] = useState('');\n\n  // Form states\n  const [newEvent, setNewEvent] = useState({\n    name: '',\n    categories: [],\n    color: {\n      r: 106,\n      g: 17,\n      b: 203\n    }\n  });\n  const [newTeam, setNewTeam] = useState({\n    name: '',\n    color: '#FF5733'\n  });\n  const [newCategory, setNewCategory] = useState({\n    name: '',\n    order: 1\n  });\n  const [newStudent, setNewStudent] = useState({\n    name: '',\n    chestNumber: '',\n    team: '',\n    category: '',\n    photo: null\n  });\n  const [newProgram, setNewProgram] = useState({\n    name: '',\n    type: 'Individual'\n  });\n  const [newResult, setNewResult] = useState({\n    event: '',\n    program: '',\n    category: '',\n    participants: [{\n      name: '',\n      position: ''\n    }]\n  });\n  const [newTeamManager, setNewTeamManager] = useState({\n    username: '',\n    password: '',\n    team: ''\n  });\n  const [editingTeamManager, setEditingTeamManager] = useState(null);\n  const [adminPassword, setAdminPassword] = useState('admin123');\n  const [selectedCategoryForPoints, setSelectedCategoryForPoints] = useState('');\n  const [selectedGradeForPoints, setSelectedGradeForPoints] = useState('');\n  const [selectedCategoriesForBatch, setSelectedCategoriesForBatch] = useState([]);\n  const [newGrade, setNewGrade] = '';\n\n  // Event filtering states\n  const [selectedEventForTeams, setSelectedEventForTeams] = useState('');\n  const [selectedEventForStudents, setSelectedEventForStudents] = useState('');\n  const [selectedEventForPrograms, setSelectedEventForPrograms] = useState('');\n  const [selectedEventForResults, setSelectedEventForResults] = useState('');\n\n  // Function to pre-configure points for a new grade across all categories\n  const preConfigureGradePoints = (grade, pointsConfig) => {\n    const updatedGradePoints = {\n      ...gradePoints\n    };\n\n    // For each selected category, create a default grade point configuration\n    selectedCategoriesForBatch.forEach(categoryName => {\n      const key = `${categoryName}-${grade}`;\n      updatedGradePoints[key] = {\n        ...pointsConfig\n      };\n    });\n    setGradePoints(updatedGradePoints);\n  };\n\n  // Add a function to refresh data from localStorage\n  const refreshData = () => {\n    console.log('Refreshing data from localStorage');\n    try {\n      const savedEvents = loadFromLocalStorage('events', []);\n      const savedTeams = loadFromLocalStorage('teams', []);\n      const savedCategories = loadFromLocalStorage('categories', []);\n      const savedStudents = loadFromLocalStorage('students', []);\n      const savedPrograms = loadFromLocalStorage('programs', []);\n      const savedResults = loadFromLocalStorage('results', []);\n      const savedPoints = loadFromLocalStorage('points', {\n        gold: 10,\n        silver: 7,\n        bronze: 5\n      });\n      const savedCategoryPoints = loadFromLocalStorage('categoryPoints', {});\n      const savedGradePoints = loadFromLocalStorage('gradePoints', {});\n      const savedTeamManagers = loadFromLocalStorage('teamManagers', []);\n      setEvents(savedEvents || []);\n      setTeams(savedTeams || []);\n      setCategories(savedCategories || []);\n      setStudents(savedStudents || []);\n      setPrograms(savedPrograms || []);\n      setResults(savedResults || []);\n      setPoints(savedPoints);\n      setCategoryPoints(savedCategoryPoints || {});\n      setGradePoints(savedGradePoints || {});\n      setTeamManagers(savedTeamManagers || []);\n      console.log('Admin data refreshed');\n    } catch (error) {\n      console.error('Error refreshing data:', error);\n    }\n  };\n\n  // Load data from localStorage on component mount\n  useEffect(() => {\n    const savedEvents = loadFromLocalStorage('events', []);\n    const savedTeams = loadFromLocalStorage('teams', []);\n    const savedCategories = loadFromLocalStorage('categories', []);\n    const savedStudents = loadFromLocalStorage('students', []);\n    const savedPrograms = loadFromLocalStorage('programs', []);\n    const savedResults = loadFromLocalStorage('results', []);\n    const savedPoints = loadFromLocalStorage('points', {\n      gold: 10,\n      silver: 7,\n      bronze: 5\n    });\n    const savedCategoryPoints = loadFromLocalStorage('categoryPoints', {});\n    const savedGradePoints = loadFromLocalStorage('gradePoints', {});\n    const savedPassword = loadFromLocalStorage('adminPassword', 'admin123');\n    const savedAvailableGrades = loadFromLocalStorage('availableGrades', ['A', 'B', 'C', 'D']);\n    const savedTeamManagers = loadFromLocalStorage('teamManagers', []);\n\n    // Load event filtering states\n    const savedSelectedEventForTeams = loadFromLocalStorage('selectedEventForTeams', '');\n    const savedSelectedEventForStudents = loadFromLocalStorage('selectedEventForStudents', '');\n    const savedSelectedEventForPrograms = loadFromLocalStorage('selectedEventForPrograms', '');\n    const savedSelectedEventForResults = loadFromLocalStorage('selectedEventForResults', '');\n    console.log('Admin dashboard loaded data:', {\n      events: savedEvents,\n      teams: savedTeams,\n      categories: savedCategories,\n      students: savedStudents,\n      programs: savedPrograms,\n      results: savedResults,\n      points: savedPoints,\n      categoryPoints: savedCategoryPoints,\n      gradePoints: savedGradePoints,\n      teamManagers: savedTeamManagers\n    });\n    setEvents(savedEvents || []);\n    setTeams(savedTeams || []);\n    setCategories(savedCategories || []);\n    setStudents(savedStudents || []);\n    setPrograms(savedPrograms || []);\n    setResults(savedResults || []);\n    setPoints(savedPoints);\n    setCategoryPoints(savedCategoryPoints || {});\n    setGradePoints(savedGradePoints || {});\n    setAdminPassword(savedPassword);\n    setAvailableGrades(savedAvailableGrades || ['A', 'B', 'C', 'D']);\n    setTeamManagers(savedTeamManagers || []);\n\n    // Set event filtering states\n    setSelectedEventForTeams(savedSelectedEventForTeams || '');\n    setSelectedEventForStudents(savedSelectedEventForStudents || '');\n    setSelectedEventForPrograms(savedSelectedEventForPrograms || '');\n    setSelectedEventForResults(savedSelectedEventForResults || '');\n\n    // Initialize form select options\n    if (savedEvents && savedEvents.length > 0) {\n      setNewResult(prev => ({\n        ...prev,\n        event: savedEvents[0].name\n      }));\n      setSelectedEvent(savedEvents[0].name);\n    }\n    if (savedPrograms && savedPrograms.length > 0) {\n      setNewResult(prev => ({\n        ...prev,\n        program: savedPrograms[0].name\n      }));\n    }\n    if (savedCategories && savedCategories.length > 0) {\n      setNewResult(prev => ({\n        ...prev,\n        category: savedCategories[0].name\n      }));\n      setSelectedCategoryForPoints(savedCategories[0].name);\n      // Initialize selected categories for batch\n      setSelectedCategoriesForBatch(savedCategories.map(cat => cat.name));\n    }\n    if (savedTeams && savedTeams.length > 0) {\n      setNewTeamManager(prev => ({\n        ...prev,\n        team: savedTeams[0].name\n      }));\n    }\n  }, []);\n\n  // Initialize selected categories for batch when categories change\n  useEffect(() => {\n    if (categories.length > 0 && selectedCategoriesForBatch.length === 0) {\n      // Initially select all categories\n      setSelectedCategoriesForBatch(categories.map(cat => cat.name));\n    }\n  }, [categories]);\n\n  // Handle logout\n  const handleLogout = () => {\n    localStorage.removeItem('isAdminLoggedIn');\n    navigate('/');\n  };\n\n  // Handle event selection\n  const handleEventSelection = eventName => {\n    setSelectedEvent(eventName);\n\n    // Update forms that depend on event selection\n    setNewTeam({\n      ...newTeam,\n      event: eventName\n    });\n    setNewCategory({\n      ...newCategory,\n      event: eventName\n    });\n    setNewStudent({\n      ...newStudent,\n      event: eventName\n    });\n    setNewProgram({\n      ...newProgram,\n      event: eventName\n    });\n    setNewResult({\n      ...newResult,\n      event: eventName\n    });\n    setNewTeamManager({\n      ...newTeamManager,\n      event: eventName\n    });\n  };\n\n  // Team manager CRUD operations\n  const handleCreateTeamManager = () => {\n    if (newTeamManager.username.trim() === '' || newTeamManager.password.trim() === '' || newTeamManager.team.trim() === '') {\n      alert('Please fill in all fields');\n      return;\n    }\n\n    // Check if username already exists\n    if (teamManagers.some(manager => manager.username === newTeamManager.username)) {\n      alert('Username already exists');\n      return;\n    }\n    const updatedTeamManagers = [...teamManagers, newTeamManager];\n    setTeamManagers(updatedTeamManagers);\n    saveToLocalStorage('teamManagers', updatedTeamManagers);\n    setNewTeamManager({\n      username: '',\n      password: '',\n      team: ''\n    });\n  };\n  const handleUpdateTeamManager = () => {\n    if (!editingTeamManager) return;\n    const updatedTeamManagers = teamManagers.map(manager => manager.username === editingTeamManager.username ? newTeamManager : manager);\n    setTeamManagers(updatedTeamManagers);\n    saveToLocalStorage('teamManagers', updatedTeamManagers);\n    setEditingTeamManager(null);\n    setNewTeamManager({\n      username: '',\n      password: '',\n      team: ''\n    });\n  };\n  const handleDeleteTeamManager = username => {\n    if (window.confirm('Are you sure you want to delete this team manager?')) {\n      const updatedTeamManagers = teamManagers.filter(manager => manager.username !== username);\n      setTeamManagers(updatedTeamManagers);\n      saveToLocalStorage('teamManagers', updatedTeamManagers);\n    }\n  };\n\n  // Handle photo upload for students\n  const handlePhotoUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = event => {\n        setNewStudent({\n          ...newStudent,\n          photo: event.target.result\n        });\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DashboardContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'events',\n        onClick: () => setActiveTab('events'),\n        children: \"Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'teams',\n        onClick: () => setActiveTab('teams'),\n        children: \"Teams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'categories',\n        onClick: () => setActiveTab('categories'),\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'students',\n        onClick: () => setActiveTab('students'),\n        children: \"Students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'programs',\n        onClick: () => setActiveTab('programs'),\n        children: \"Programs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'results',\n        onClick: () => setActiveTab('results'),\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'points',\n        onClick: () => setActiveTab('points'),\n        children: \"Points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        active: activeTab === 'teamManagers',\n        onClick: () => setActiveTab('teamManagers'),\n        children: \"Team Managers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this), activeTab === 'events' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Add New Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: newEvent.name,\n            onChange: e => setNewEvent({\n              ...newEvent,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: newEvent.categories.join(', '),\n            onChange: e => setNewEvent({\n              ...newEvent,\n              categories: e.target.value.split(',').map(cat => cat.trim())\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ColorPreview, {\n            r: newEvent.color.r,\n            g: newEvent.color.g,\n            b: newEvent.color.b\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RGBInputContainer, {\n            children: [/*#__PURE__*/_jsxDEV(RGBInput, {\n              type: \"number\",\n              value: newEvent.color.r,\n              onChange: e => setNewEvent({\n                ...newEvent,\n                color: {\n                  ...newEvent.color,\n                  r: parseInt(e.target.value)\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RGBInput, {\n              type: \"number\",\n              value: newEvent.color.g,\n              onChange: e => setNewEvent({\n                ...newEvent,\n                color: {\n                  ...newEvent.color,\n                  g: parseInt(e.target.value)\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RGBInput, {\n              type: \"number\",\n              value: newEvent.color.b,\n              onChange: e => setNewEvent({\n                ...newEvent,\n                color: {\n                  ...newEvent.color,\n                  b: parseInt(e.target.value)\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setEvents([...events, newEvent]);\n            saveToLocalStorage('events', [...events, newEvent]);\n            setNewEvent({\n              name: '',\n              categories: [],\n              color: {\n                r: 106,\n                g: 17,\n                b: 203\n              }\n            });\n          },\n          children: \"Add Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Categories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: events.map((event, index) => /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: event.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: event.categories.join(', ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: /*#__PURE__*/_jsxDEV(ColorPreview, {\n                r: event.color.r,\n                g: event.color.g,\n                b: event.color.b\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  setSelectedEvent(index);\n                  setNewEvent(event);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  const updatedEvents = events.filter((_, i) => i !== index);\n                  setEvents(updatedEvents);\n                  saveToLocalStorage('events', updatedEvents);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 9\n    }, this), activeTab === 'teams' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Add New Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: newTeam.name,\n            onChange: e => setNewTeam({\n              ...newTeam,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"color\",\n            value: newTeam.color,\n            onChange: e => setNewTeam({\n              ...newTeam,\n              color: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setTeams([...teams, newTeam]);\n            saveToLocalStorage('teams', [...teams, newTeam]);\n            setNewTeam({\n              name: '',\n              color: '#FF5733'\n            });\n          },\n          children: \"Add Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: teams.map((team, index) => /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: team.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: /*#__PURE__*/_jsxDEV(ColorPreview, {\n                r: parseInt(team.color.slice(1, 3), 16),\n                g: parseInt(team.color.slice(3, 5), 16),\n                b: parseInt(team.color.slice(5, 7), 16)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  setSelectedEvent(index);\n                  setNewTeam(team);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  const updatedTeams = teams.filter((_, i) => i !== index);\n                  setTeams(updatedTeams);\n                  saveToLocalStorage('teams', updatedTeams);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 9\n    }, this), activeTab === 'categories' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Add New Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: newCategory.name,\n            onChange: e => setNewCategory({\n              ...newCategory,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: newCategory.order,\n            onChange: e => setNewCategory({\n              ...newCategory,\n              order: parseInt(e.target.value)\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setCategories([...categories, newCategory]);\n            saveToLocalStorage('categories', [...categories, newCategory]);\n            setNewCategory({\n              name: '',\n              order: 1\n            });\n          },\n          children: \"Add Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: categories.map((category, index) => /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: category.order\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  setSelectedEvent(index);\n                  setNewCategory(category);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  const updatedCategories = categories.filter((_, i) => i !== index);\n                  setCategories(updatedCategories);\n                  saveToLocalStorage('categories', updatedCategories);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 9\n    }, this), activeTab === 'students' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Add New Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: newStudent.name,\n            onChange: e => setNewStudent({\n              ...newStudent,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Chest Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: newStudent.chestNumber,\n            onChange: e => setNewStudent({\n              ...newStudent,\n              chestNumber: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newStudent.team,\n            onChange: e => setNewStudent({\n              ...newStudent,\n              team: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 17\n            }, this), teams.map((team, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: team.name,\n              children: team.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newStudent.category,\n            onChange: e => setNewStudent({\n              ...newStudent,\n              category: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 17\n            }, this), categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category.name,\n              children: category.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handlePhotoUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 15\n          }, this), newStudent.photo && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: newStudent.photo,\n              alt: \"Preview\",\n              style: {\n                maxWidth: '200px',\n                maxHeight: '200px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            if (newStudent.name.trim() === '' || newStudent.chestNumber.trim() === '') {\n              alert('Please fill in all required fields');\n              return;\n            }\n            const student = {\n              id: students.length > 0 ? Math.max(...students.map(s => s.id)) + 1 : 1,\n              name: newStudent.name,\n              chestNumber: newStudent.chestNumber,\n              team: newStudent.team,\n              category: newStudent.category,\n              photo: newStudent.photo || null\n            };\n            const updatedStudents = [...students, student];\n            setStudents(updatedStudents);\n            const saveResult = saveToLocalStorage('students', updatedStudents);\n            console.log('Student creation save result:', saveResult);\n            if (!saveResult) {\n              console.error('Failed to save new student to localStorage');\n            }\n            setNewStudent({\n              name: '',\n              chestNumber: '',\n              team: '',\n              category: '',\n              photo: null\n            });\n          },\n          children: \"Add Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Chest Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: students.map((student, index) => /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: student.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: student.chestNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: student.team\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: student.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: student.photo ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: student.photo,\n                alt: student.name,\n                style: {\n                  width: '50px',\n                  height: '50px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 675,\n                columnNumber: 40\n              }, this) : 'No Photo'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  setNewStudent({\n                    name: student.name,\n                    chestNumber: student.chestNumber,\n                    team: student.team,\n                    category: student.category,\n                    photo: student.photo || null\n                  });\n                  setSelectedEvent(index);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  const updatedStudents = students.filter((_, i) => i !== index);\n                  setStudents(updatedStudents);\n                  saveToLocalStorage('students', updatedStudents);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 9\n    }, this), activeTab === 'programs' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Add New Program\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: newProgram.name,\n            onChange: e => setNewProgram({\n              ...newProgram,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newProgram.type,\n            onChange: e => setNewProgram({\n              ...newProgram,\n              type: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Individual\",\n              children: \"Individual\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Team\",\n              children: \"Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setPrograms([...programs, newProgram]);\n            saveToLocalStorage('programs', [...programs, newProgram]);\n            setNewProgram({\n              name: '',\n              type: 'Individual'\n            });\n          },\n          children: \"Add Program\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 724,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: programs.map((program, index) => /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: program.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: program.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  setSelectedEvent(index);\n                  setNewProgram(program);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  const updatedPrograms = programs.filter((_, i) => i !== index);\n                  setPrograms(updatedPrograms);\n                  saveToLocalStorage('programs', updatedPrograms);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 738,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 9\n    }, this), activeTab === 'results' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Add New Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 755,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newResult.event,\n            onChange: e => setNewResult({\n              ...newResult,\n              event: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 17\n            }, this), events.map((event, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: event.name,\n              children: event.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 759,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Program\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newResult.program,\n            onChange: e => setNewResult({\n              ...newResult,\n              program: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Program\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 17\n            }, this), programs.map((program, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: program.name,\n              children: program.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 768,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 773,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newResult.category,\n            onChange: e => setNewResult({\n              ...newResult,\n              category: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 17\n            }, this), categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category.name,\n              children: category.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Participants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [newResult.participants.map((participant, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                value: participant.name,\n                onChange: e => {\n                  const updatedParticipants = [...newResult.participants];\n                  updatedParticipants[index].name = e.target.value;\n                  setNewResult({\n                    ...newResult,\n                    participants: updatedParticipants\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 786,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                value: participant.position,\n                onChange: e => {\n                  const updatedParticipants = [...newResult.participants];\n                  updatedParticipants[index].position = e.target.value;\n                  setNewResult({\n                    ...newResult,\n                    participants: updatedParticipants\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 791,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 785,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setNewResult({\n                ...newResult,\n                participants: [...newResult.participants, {\n                  name: '',\n                  position: ''\n                }]\n              }),\n              children: \"Add Participant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 798,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 783,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setResults([...results, newResult]);\n            saveToLocalStorage('results', [...results, newResult]);\n            setNewResult({\n              event: '',\n              program: '',\n              category: '',\n              participants: [{\n                name: '',\n                position: ''\n              }]\n            });\n          },\n          children: \"Add Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: \"Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 810,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Program\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 811,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Participants\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 813,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 814,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: results.map((result, index) => /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: result.event\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: result.program\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 821,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: result.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 822,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: result.participants.map(participant => `${participant.name} (${participant.position})`).join(', ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 823,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  setSelectedEvent(index);\n                  setNewResult(result);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 825,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  const updatedResults = results.filter((_, i) => i !== index);\n                  setResults(updatedResults);\n                  saveToLocalStorage('results', updatedResults);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 829,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 824,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 819,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 817,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 751,\n      columnNumber: 9\n    }, this), activeTab === 'points' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Configure Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Gold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 846,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: points.gold,\n            onChange: e => setPoints({\n              ...points,\n              gold: parseInt(e.target.value)\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 847,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Silver\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 850,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: points.silver,\n            onChange: e => setPoints({\n              ...points,\n              silver: parseInt(e.target.value)\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 849,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Bronze\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: points.bronze,\n            onChange: e => setPoints({\n              ...points,\n              bronze: parseInt(e.target.value)\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 855,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            saveToLocalStorage('points', points);\n          },\n          children: \"Save Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Configure Category Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedCategoryForPoints,\n            onChange: e => setSelectedCategoryForPoints(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 866,\n              columnNumber: 17\n            }, this), categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category.name,\n              children: category.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 868,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 865,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Gold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 873,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: ((_categoryPoints$selec = categoryPoints[selectedCategoryForPoints]) === null || _categoryPoints$selec === void 0 ? void 0 : _categoryPoints$selec.gold) || '',\n            onChange: e => {\n              setCategoryPoints({\n                ...categoryPoints,\n                [selectedCategoryForPoints]: {\n                  ...categoryPoints[selectedCategoryForPoints],\n                  gold: parseInt(e.target.value)\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 874,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Silver\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 885,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: ((_categoryPoints$selec2 = categoryPoints[selectedCategoryForPoints]) === null || _categoryPoints$selec2 === void 0 ? void 0 : _categoryPoints$selec2.silver) || '',\n            onChange: e => {\n              setCategoryPoints({\n                ...categoryPoints,\n                [selectedCategoryForPoints]: {\n                  ...categoryPoints[selectedCategoryForPoints],\n                  silver: parseInt(e.target.value)\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 886,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Bronze\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 897,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: ((_categoryPoints$selec3 = categoryPoints[selectedCategoryForPoints]) === null || _categoryPoints$selec3 === void 0 ? void 0 : _categoryPoints$selec3.bronze) || '',\n            onChange: e => {\n              setCategoryPoints({\n                ...categoryPoints,\n                [selectedCategoryForPoints]: {\n                  ...categoryPoints[selectedCategoryForPoints],\n                  bronze: parseInt(e.target.value)\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 896,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            saveToLocalStorage('categoryPoints', categoryPoints);\n          },\n          children: \"Save Category Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 908,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Configure Grade Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 913,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Grade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedGradeForPoints,\n            onChange: e => setSelectedGradeForPoints(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Grade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 917,\n              columnNumber: 17\n            }, this), availableGrades.map((grade, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: grade,\n              children: grade\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 919,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 916,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 914,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 926,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '10px',\n              flexWrap: 'wrap',\n              marginBottom: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                if (selectedCategoriesForBatch.length === categories.length) {\n                  // Deselect all\n                  setSelectedCategoriesForBatch([]);\n                } else {\n                  // Select all\n                  setSelectedCategoriesForBatch(categories.map(cat => cat.name));\n                }\n              },\n              style: {\n                background: selectedCategoriesForBatch.length === categories.length ? 'gold' : 'rgba(255,255,255,0.2)',\n                color: selectedCategoriesForBatch.length === categories.length ? '#333' : 'white'\n              },\n              children: selectedCategoriesForBatch.length === categories.length ? 'Deselect All' : 'Select All'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 928,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 927,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: '10px'\n            },\n            children: categories.map(category => /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                cursor: 'pointer'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selectedCategoriesForBatch.includes(category.name),\n                onChange: e => {\n                  if (e.target.checked) {\n                    setSelectedCategoriesForBatch([...selectedCategoriesForBatch, category.name]);\n                  } else {\n                    setSelectedCategoriesForBatch(selectedCategoriesForBatch.filter(cat => cat !== category.name));\n                  }\n                },\n                style: {\n                  marginRight: '5px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 949,\n                columnNumber: 21\n              }, this), category.name]\n            }, category.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 948,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 946,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Gold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 968,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: ((_gradePoints$selected = gradePoints[selectedGradeForPoints]) === null || _gradePoints$selected === void 0 ? void 0 : _gradePoints$selected.gold) || '',\n            onChange: e => {\n              setGradePoints({\n                ...gradePoints,\n                [selectedGradeForPoints]: {\n                  ...gradePoints[selectedGradeForPoints],\n                  gold: parseInt(e.target.value)\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 969,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 967,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Silver\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: ((_gradePoints$selected2 = gradePoints[selectedGradeForPoints]) === null || _gradePoints$selected2 === void 0 ? void 0 : _gradePoints$selected2.silver) || '',\n            onChange: e => {\n              setGradePoints({\n                ...gradePoints,\n                [selectedGradeForPoints]: {\n                  ...gradePoints[selectedGradeForPoints],\n                  silver: parseInt(e.target.value)\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 981,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 979,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Bronze\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 992,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: ((_gradePoints$selected3 = gradePoints[selectedGradeForPoints]) === null || _gradePoints$selected3 === void 0 ? void 0 : _gradePoints$selected3.bronze) || '',\n            onChange: e => {\n              setGradePoints({\n                ...gradePoints,\n                [selectedGradeForPoints]: {\n                  ...gradePoints[selectedGradeForPoints],\n                  bronze: parseInt(e.target.value)\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 991,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            // Apply grade points to all selected categories\n            const updatedGradePoints = {\n              ...gradePoints\n            };\n            selectedCategoriesForBatch.forEach(categoryName => {\n              var _gradePoints$selected4, _gradePoints$selected5, _gradePoints$selected6;\n              const key = `${categoryName}-${selectedGradeForPoints}`;\n              updatedGradePoints[key] = {\n                gold: ((_gradePoints$selected4 = gradePoints[selectedGradeForPoints]) === null || _gradePoints$selected4 === void 0 ? void 0 : _gradePoints$selected4.gold) || 0,\n                silver: ((_gradePoints$selected5 = gradePoints[selectedGradeForPoints]) === null || _gradePoints$selected5 === void 0 ? void 0 : _gradePoints$selected5.silver) || 0,\n                bronze: ((_gradePoints$selected6 = gradePoints[selectedGradeForPoints]) === null || _gradePoints$selected6 === void 0 ? void 0 : _gradePoints$selected6.bronze) || 0\n              };\n            });\n            setGradePoints(updatedGradePoints);\n            saveToLocalStorage('gradePoints', updatedGradePoints);\n          },\n          disabled: !selectedGradeForPoints || selectedCategoriesForBatch.length === 0,\n          children: \"Save Grade Points for Selected Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1003,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 912,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Configure Available Grades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1024,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Grades\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1026,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: availableGrades.join(', '),\n            onChange: e => setAvailableGrades(e.target.value.split(',').map(grade => grade.trim()))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1027,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1025,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            saveToLocalStorage('availableGrades', availableGrades);\n          },\n          children: \"Save Grades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1029,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1023,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Configure New Grade Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Apply to Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1038,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '10px',\n              flexWrap: 'wrap',\n              marginBottom: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                if (selectedCategoriesForBatch.length === categories.length) {\n                  // Deselect all\n                  setSelectedCategoriesForBatch([]);\n                } else {\n                  // Select all\n                  setSelectedCategoriesForBatch(categories.map(cat => cat.name));\n                }\n              },\n              style: {\n                background: selectedCategoriesForBatch.length === categories.length ? 'gold' : 'rgba(255,255,255,0.2)',\n                color: selectedCategoriesForBatch.length === categories.length ? '#333' : 'white'\n              },\n              children: selectedCategoriesForBatch.length === categories.length ? 'Deselect All' : 'Select All'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1040,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1039,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: '10px'\n            },\n            children: categories.map(category => /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                cursor: 'pointer'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selectedCategoriesForBatch.includes(category.name),\n                onChange: e => {\n                  if (e.target.checked) {\n                    setSelectedCategoriesForBatch([...selectedCategoriesForBatch, category.name]);\n                  } else {\n                    setSelectedCategoriesForBatch(selectedCategoriesForBatch.filter(cat => cat !== category.name));\n                  }\n                },\n                style: {\n                  marginRight: '5px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1061,\n                columnNumber: 21\n              }, this), category.name]\n            }, category.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1060,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1058,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1037,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Gold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1080,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: newGradePoints.gold,\n            onChange: e => setNewGradePoints({\n              ...newGradePoints,\n              gold: parseInt(e.target.value)\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1081,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1079,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Silver\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1084,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: newGradePoints.silver,\n            onChange: e => setNewGradePoints({\n              ...newGradePoints,\n              silver: parseInt(e.target.value)\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1085,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1083,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Bronze\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1088,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: newGradePoints.bronze,\n            onChange: e => setNewGradePoints({\n              ...newGradePoints,\n              bronze: parseInt(e.target.value)\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1089,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1087,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            // Apply new grade points to all selected categories\n            const updatedGradePoints = {\n              ...gradePoints\n            };\n            selectedCategoriesForBatch.forEach(categoryName => {\n              const key = `${categoryName}-${selectedGradeForPoints}`;\n              updatedGradePoints[key] = {\n                ...newGradePoints\n              };\n            });\n            setGradePoints(updatedGradePoints);\n            saveToLocalStorage('gradePoints', updatedGradePoints);\n          },\n          disabled: selectedCategoriesForBatch.length === 0,\n          children: \"Apply New Grade Points to Selected Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1091,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1033,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 9\n    }, this), activeTab === 'teamManagers' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Add New Team Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: newTeamManager.username,\n            onChange: e => setNewTeamManager({\n              ...newTeamManager,\n              username: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            value: newTeamManager.password,\n            onChange: e => setNewTeamManager({\n              ...newTeamManager,\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newTeamManager.team,\n            onChange: e => setNewTeamManager({\n              ...newTeamManager,\n              team: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1124,\n              columnNumber: 17\n            }, this), teams.map((team, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: team.name,\n              children: team.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1126,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setTeamManagers([...teamManagers, newTeamManager]);\n            saveToLocalStorage('teamManagers', [...teamManagers, newTeamManager]);\n            setNewTeamManager({\n              username: '',\n              password: '',\n              team: ''\n            });\n          },\n          children: \"Add Team Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1141,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1138,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: teamManagers.map((manager, index) => /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: manager.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1147,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: manager.team\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1148,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  setSelectedEvent(index);\n                  setNewTeamManager(manager);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1150,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  const updatedTeamManagers = teamManagers.filter((_, i) => i !== index);\n                  setTeamManagers(updatedTeamManagers);\n                  saveToLocalStorage('teamManagers', updatedTeamManagers);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1154,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1149,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1146,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 425,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"EMy7f4P27GdcHs3JIqoZLlEw7P0=\", false, function () {\n  return [useNavigate];\n});\n_c17 = AdminDashboard;\nexport default AdminDashboard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17;\n$RefreshReg$(_c, \"DashboardContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"TabContainer\");\n$RefreshReg$(_c4, \"Tab\");\n$RefreshReg$(_c5, \"FormContainer\");\n$RefreshReg$(_c6, \"FormTitle\");\n$RefreshReg$(_c7, \"FormGroup\");\n$RefreshReg$(_c8, \"Label\");\n$RefreshReg$(_c9, \"Input\");\n$RefreshReg$(_c0, \"Select\");\n$RefreshReg$(_c1, \"Button\");\n$RefreshReg$(_c10, \"Table\");\n$RefreshReg$(_c11, \"Th\");\n$RefreshReg$(_c12, \"Td\");\n$RefreshReg$(_c13, \"Tr\");\n$RefreshReg$(_c14, \"ColorPreview\");\n$RefreshReg$(_c15, \"RGBInputContainer\");\n$RefreshReg$(_c16, \"RGBInput\");\n$RefreshReg$(_c17, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","styled","useNavigate","loadFromLocalStorage","saveToLocalStorage","calculateTeamStandings","jsxDEV","_jsxDEV","DashboardContainer","div","_c","Header","h1","_c2","TabContainer","_c3","Tab","button","props","active","_c4","FormContainer","_c5","FormTitle","h2","_c6","FormGroup","_c7","Label","label","_c8","Input","input","_c9","Select","select","_c0","Button","_c1","Table","table","_c10","Th","th","_c11","Td","td","_c12","Tr","tr","_c13","ColorPreview","r","g","b","_c14","RGBInputContainer","_c15","RGBInput","_c16","AdminDashboard","_s","_categoryPoints$selec","_categoryPoints$selec2","_categoryPoints$selec3","_gradePoints$selected","_gradePoints$selected2","_gradePoints$selected3","navigate","activeTab","setActiveTab","events","setEvents","teams","setTeams","categories","setCategories","students","setStudents","programs","setPrograms","results","setResults","points","setPoints","gold","silver","bronze","categoryPoints","setCategoryPoints","gradePoints","setGradePoints","availableGrades","setAvailableGrades","newGradePoints","setNewGradePoints","teamManagers","setTeamManagers","selectedEvent","setSelectedEvent","newEvent","setNewEvent","name","color","newTeam","setNewTeam","newCategory","setNewCategory","order","newStudent","setNewStudent","chestNumber","team","category","photo","newProgram","setNewProgram","type","newResult","setNewResult","event","program","participants","position","newTeamManager","setNewTeamManager","username","password","editingTeamManager","setEditingTeamManager","adminPassword","setAdminPassword","selectedCategoryForPoints","setSelectedCategoryForPoints","selectedGradeForPoints","setSelectedGradeForPoints","selectedCategoriesForBatch","setSelectedCategoriesForBatch","newGrade","setNewGrade","selectedEventForTeams","setSelectedEventForTeams","selectedEventForStudents","setSelectedEventForStudents","selectedEventForPrograms","setSelectedEventForPrograms","selectedEventForResults","setSelectedEventForResults","preConfigureGradePoints","grade","pointsConfig","updatedGradePoints","forEach","categoryName","key","refreshData","console","log","savedEvents","savedTeams","savedCategories","savedStudents","savedPrograms","savedResults","savedPoints","savedCategoryPoints","savedGradePoints","savedTeamManagers","error","savedPassword","savedAvailableGrades","savedSelectedEventForTeams","savedSelectedEventForStudents","savedSelectedEventForPrograms","savedSelectedEventForResults","length","prev","map","cat","handleLogout","localStorage","removeItem","handleEventSelection","eventName","handleCreateTeamManager","trim","alert","some","manager","updatedTeamManagers","handleUpdateTeamManager","handleDeleteTeamManager","window","confirm","filter","handlePhotoUpload","e","file","target","files","reader","FileReader","onload","result","readAsDataURL","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","join","split","parseInt","index","updatedEvents","_","i","slice","updatedTeams","updatedCategories","accept","style","marginTop","src","alt","maxWidth","maxHeight","student","id","Math","max","s","updatedStudents","saveResult","width","height","updatedPrograms","participant","updatedParticipants","updatedResults","display","gap","flexWrap","marginBottom","background","alignItems","cursor","checked","includes","marginRight","_gradePoints$selected4","_gradePoints$selected5","_gradePoints$selected6","disabled","_c17","$RefreshReg$"],"sources":["C:/Users/SMIC_STUDIO/Desktop/MEHFIL 25 APP/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { loadFromLocalStorage, saveToLocalStorage, calculateTeamStandings } from '../utils/dataStorage';\r\n\r\nconst DashboardContainer = styled.div`\r\n  padding: 20px;\r\n  color: white;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst Header = styled.h1`\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  margin-bottom: 30px;\r\n  color: gold;\r\n`;\r\n\r\nconst TabContainer = styled.div`\r\n  display: flex;\r\n  border-bottom: 2px solid rgba(255,255,255,0.2);\r\n  margin-bottom: 30px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Tab = styled.button`\r\n  padding: 15px 30px;\r\n  background: ${props => props.active ? 'rgba(255,255,255,0.2)' : 'transparent'};\r\n  color: ${props => props.active ? 'gold' : 'white'};\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.1rem;\r\n  font-weight: bold;\r\n\r\n  &:hover {\r\n    background: rgba(255,255,255,0.1);\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    padding: 10px 15px;\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n  background: rgba(255,255,255,0.1);\r\n  border-radius: 15px;\r\n  padding: 30px;\r\n  backdrop-filter: blur(10px);\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst FormTitle = styled.h2`\r\n  margin-top: 0;\r\n  color: gold;\r\n  border-bottom: 1px solid rgba(255,255,255,0.2);\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst FormGroup = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  border: none;\r\n  background: rgba(255,255,255,0.1);\r\n  color: white;\r\n  font-size: 1rem;\r\n\r\n  &:focus {\r\n    outline: 2px solid gold;\r\n  }\r\n`;\r\n\r\nconst Select = styled.select`\r\n  width: 100%;\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  border: none;\r\n  background: rgba(255,255,255,0.1);\r\n  color: white;\r\n  font-size: 1rem;\r\n\r\n  &:focus {\r\n    outline: 2px solid gold;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 12px 25px;\r\n  background: gold;\r\n  color: #333;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n  margin-right: 10px;\r\n  margin-bottom: 10px;\r\n\r\n  &:hover {\r\n    background: #ffd700;\r\n    transform: translateY(-2px);\r\n  }\r\n`;\r\n\r\nconst Table = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  background: rgba(255,255,255,0.1);\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Th = styled.th`\r\n  background: rgba(0,0,0,0.2);\r\n  padding: 15px;\r\n  text-align: left;\r\n`;\r\n\r\nconst Td = styled.td`\r\n  padding: 15px;\r\n  border-bottom: 1px solid rgba(255,255,255,0.1);\r\n`;\r\n\r\nconst Tr = styled.tr`\r\n  &:hover {\r\n    background: rgba(255,255,255,0.05);\r\n  }\r\n`;\r\n\r\nconst ColorPreview = styled.div`\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  background: ${props => `rgb(${props.r}, ${props.g}, ${props.b})`};\r\n  display: inline-block;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst RGBInputContainer = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst RGBInput = styled.input`\r\n  width: 80px;\r\n  padding: 8px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  background: rgba(255,255,255,0.1);\r\n  color: white;\r\n  text-align: center;\r\n`;\r\n\r\nconst AdminDashboard = () => {\r\n  const navigate = useNavigate();\r\n  const [activeTab, setActiveTab] = useState('events');\r\n  const [events, setEvents] = useState([]);\r\n  const [teams, setTeams] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [students, setStudents] = useState([]);\r\n  const [programs, setPrograms] = useState([]);\r\n  const [results, setResults] = useState([]);\r\n  const [points, setPoints] = useState({\r\n    gold: 10,\r\n    silver: 7,\r\n    bronze: 5\r\n  });\r\n  // Category-specific points configuration\r\n  const [categoryPoints, setCategoryPoints] = useState({});\r\n  // Grade-specific points configuration\r\n  const [gradePoints, setGradePoints] = useState({});\r\n  // Available grades configuration\r\n  const [availableGrades, setAvailableGrades] = useState(['A', 'B', 'C', 'D']);\r\n  // New grade points configuration\r\n  const [newGradePoints, setNewGradePoints] = useState({\r\n    gold: 10,\r\n    silver: 7,\r\n    bronze: 5\r\n  });\r\n  // Team managers configuration\r\n  const [teamManagers, setTeamManagers] = useState([]);\r\n  // Selected event for management\r\n  const [selectedEvent, setSelectedEvent] = useState('');\r\n  \r\n  // Form states\r\n  const [newEvent, setNewEvent] = useState({ name: '', categories: [], color: { r: 106, g: 17, b: 203 } });\r\n  const [newTeam, setNewTeam] = useState({ name: '', color: '#FF5733' });\r\n  const [newCategory, setNewCategory] = useState({ name: '', order: 1 });\r\n  const [newStudent, setNewStudent] = useState({ name: '', chestNumber: '', team: '', category: '', photo: null });\r\n  const [newProgram, setNewProgram] = useState({ name: '', type: 'Individual' });\r\n  const [newResult, setNewResult] = useState({ \r\n    event: '', \r\n    program: '', \r\n    category: '', \r\n    participants: [{ name: '', position: '' }] \r\n  });\r\n  const [newTeamManager, setNewTeamManager] = useState({ \r\n    username: '', \r\n    password: '', \r\n    team: '' \r\n  });\r\n  const [editingTeamManager, setEditingTeamManager] = useState(null);\r\n  const [adminPassword, setAdminPassword] = useState('admin123');\r\n  const [selectedCategoryForPoints, setSelectedCategoryForPoints] = useState('');\r\n  const [selectedGradeForPoints, setSelectedGradeForPoints] = useState('');\r\n  const [selectedCategoriesForBatch, setSelectedCategoriesForBatch] = useState([]);\r\n  const [newGrade, setNewGrade] = '';\r\n  \r\n  // Event filtering states\r\n  const [selectedEventForTeams, setSelectedEventForTeams] = useState('');\r\n  const [selectedEventForStudents, setSelectedEventForStudents] = useState('');\r\n  const [selectedEventForPrograms, setSelectedEventForPrograms] = useState('');\r\n  const [selectedEventForResults, setSelectedEventForResults] = useState('');\r\n\r\n  // Function to pre-configure points for a new grade across all categories\r\n  const preConfigureGradePoints = (grade, pointsConfig) => {\r\n    const updatedGradePoints = { ...gradePoints };\r\n    \r\n    // For each selected category, create a default grade point configuration\r\n    selectedCategoriesForBatch.forEach(categoryName => {\r\n      const key = `${categoryName}-${grade}`;\r\n      updatedGradePoints[key] = { ...pointsConfig };\r\n    });\r\n    \r\n    setGradePoints(updatedGradePoints);\r\n  };\r\n\r\n  // Add a function to refresh data from localStorage\r\n  const refreshData = () => {\r\n    console.log('Refreshing data from localStorage');\r\n    try {\r\n      const savedEvents = loadFromLocalStorage('events', []);\r\n      const savedTeams = loadFromLocalStorage('teams', []);\r\n      const savedCategories = loadFromLocalStorage('categories', []);\r\n      const savedStudents = loadFromLocalStorage('students', []);\r\n      const savedPrograms = loadFromLocalStorage('programs', []);\r\n      const savedResults = loadFromLocalStorage('results', []);\r\n      const savedPoints = loadFromLocalStorage('points', { gold: 10, silver: 7, bronze: 5 });\r\n      const savedCategoryPoints = loadFromLocalStorage('categoryPoints', {});\r\n      const savedGradePoints = loadFromLocalStorage('gradePoints', {});\r\n      const savedTeamManagers = loadFromLocalStorage('teamManagers', []);\r\n\r\n      setEvents(savedEvents || []);\r\n      setTeams(savedTeams || []);\r\n      setCategories(savedCategories || []);\r\n      setStudents(savedStudents || []);\r\n      setPrograms(savedPrograms || []);\r\n      setResults(savedResults || []);\r\n      setPoints(savedPoints);\r\n      setCategoryPoints(savedCategoryPoints || {});\r\n      setGradePoints(savedGradePoints || {});\r\n      setTeamManagers(savedTeamManagers || []);\r\n\r\n      console.log('Admin data refreshed');\r\n    } catch (error) {\r\n      console.error('Error refreshing data:', error);\r\n    }\r\n  };\r\n\r\n  // Load data from localStorage on component mount\r\n  useEffect(() => {\r\n    const savedEvents = loadFromLocalStorage('events', []);\r\n    const savedTeams = loadFromLocalStorage('teams', []);\r\n    const savedCategories = loadFromLocalStorage('categories', []);\r\n    const savedStudents = loadFromLocalStorage('students', []);\r\n    const savedPrograms = loadFromLocalStorage('programs', []);\r\n    const savedResults = loadFromLocalStorage('results', []);\r\n    const savedPoints = loadFromLocalStorage('points', { gold: 10, silver: 7, bronze: 5 });\r\n    const savedCategoryPoints = loadFromLocalStorage('categoryPoints', {});\r\n    const savedGradePoints = loadFromLocalStorage('gradePoints', {});\r\n    const savedPassword = loadFromLocalStorage('adminPassword', 'admin123');\r\n    const savedAvailableGrades = loadFromLocalStorage('availableGrades', ['A', 'B', 'C', 'D']);\r\n    const savedTeamManagers = loadFromLocalStorage('teamManagers', []);\r\n\r\n    // Load event filtering states\r\n    const savedSelectedEventForTeams = loadFromLocalStorage('selectedEventForTeams', '');\r\n    const savedSelectedEventForStudents = loadFromLocalStorage('selectedEventForStudents', '');\r\n    const savedSelectedEventForPrograms = loadFromLocalStorage('selectedEventForPrograms', '');\r\n    const savedSelectedEventForResults = loadFromLocalStorage('selectedEventForResults', '');\r\n\r\n    console.log('Admin dashboard loaded data:', {\r\n      events: savedEvents,\r\n      teams: savedTeams,\r\n      categories: savedCategories,\r\n      students: savedStudents,\r\n      programs: savedPrograms,\r\n      results: savedResults,\r\n      points: savedPoints,\r\n      categoryPoints: savedCategoryPoints,\r\n      gradePoints: savedGradePoints,\r\n      teamManagers: savedTeamManagers\r\n    });\r\n\r\n    setEvents(savedEvents || []);\r\n    setTeams(savedTeams || []);\r\n    setCategories(savedCategories || []);\r\n    setStudents(savedStudents || []);\r\n    setPrograms(savedPrograms || []);\r\n    setResults(savedResults || []);\r\n    setPoints(savedPoints);\r\n    setCategoryPoints(savedCategoryPoints || {});\r\n    setGradePoints(savedGradePoints || {});\r\n    setAdminPassword(savedPassword);\r\n    setAvailableGrades(savedAvailableGrades || ['A', 'B', 'C', 'D']);\r\n    setTeamManagers(savedTeamManagers || []);\r\n\r\n    // Set event filtering states\r\n    setSelectedEventForTeams(savedSelectedEventForTeams || '');\r\n    setSelectedEventForStudents(savedSelectedEventForStudents || '');\r\n    setSelectedEventForPrograms(savedSelectedEventForPrograms || '');\r\n    setSelectedEventForResults(savedSelectedEventForResults || '');\r\n\r\n    // Initialize form select options\r\n    if (savedEvents && savedEvents.length > 0) {\r\n      setNewResult(prev => ({ ...prev, event: savedEvents[0].name }));\r\n      setSelectedEvent(savedEvents[0].name);\r\n    }\r\n    if (savedPrograms && savedPrograms.length > 0) {\r\n      setNewResult(prev => ({ ...prev, program: savedPrograms[0].name }));\r\n    }\r\n    if (savedCategories && savedCategories.length > 0) {\r\n      setNewResult(prev => ({ ...prev, category: savedCategories[0].name }));\r\n      setSelectedCategoryForPoints(savedCategories[0].name);\r\n      // Initialize selected categories for batch\r\n      setSelectedCategoriesForBatch(savedCategories.map(cat => cat.name));\r\n    }\r\n    if (savedTeams && savedTeams.length > 0) {\r\n      setNewTeamManager(prev => ({ ...prev, team: savedTeams[0].name }));\r\n    }\r\n  }, []);\r\n\r\n  // Initialize selected categories for batch when categories change\r\n  useEffect(() => {\r\n    if (categories.length > 0 && selectedCategoriesForBatch.length === 0) {\r\n      // Initially select all categories\r\n      setSelectedCategoriesForBatch(categories.map(cat => cat.name));\r\n    }\r\n  }, [categories]);\r\n\r\n  // Handle logout\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('isAdminLoggedIn');\r\n    navigate('/');\r\n  };\r\n\r\n  // Handle event selection\r\n  const handleEventSelection = (eventName) => {\r\n    setSelectedEvent(eventName);\r\n    \r\n    // Update forms that depend on event selection\r\n    setNewTeam({ ...newTeam, event: eventName });\r\n    setNewCategory({ ...newCategory, event: eventName });\r\n    setNewStudent({ ...newStudent, event: eventName });\r\n    setNewProgram({ ...newProgram, event: eventName });\r\n    setNewResult({ ...newResult, event: eventName });\r\n    setNewTeamManager({ ...newTeamManager, event: eventName });\r\n  };\r\n\r\n  // Team manager CRUD operations\r\n  const handleCreateTeamManager = () => {\r\n    if (newTeamManager.username.trim() === '' || newTeamManager.password.trim() === '' || newTeamManager.team.trim() === '') {\r\n      alert('Please fill in all fields');\r\n      return;\r\n    }\r\n    \r\n    // Check if username already exists\r\n    if (teamManagers.some(manager => manager.username === newTeamManager.username)) {\r\n      alert('Username already exists');\r\n      return;\r\n    }\r\n    \r\n    const updatedTeamManagers = [...teamManagers, newTeamManager];\r\n    setTeamManagers(updatedTeamManagers);\r\n    saveToLocalStorage('teamManagers', updatedTeamManagers);\r\n    setNewTeamManager({ username: '', password: '', team: '' });\r\n  };\r\n\r\n  const handleUpdateTeamManager = () => {\r\n    if (!editingTeamManager) return;\r\n    \r\n    const updatedTeamManagers = teamManagers.map(manager => \r\n      manager.username === editingTeamManager.username ? newTeamManager : manager\r\n    );\r\n    \r\n    setTeamManagers(updatedTeamManagers);\r\n    saveToLocalStorage('teamManagers', updatedTeamManagers);\r\n    setEditingTeamManager(null);\r\n    setNewTeamManager({ username: '', password: '', team: '' });\r\n  };\r\n\r\n  const handleDeleteTeamManager = (username) => {\r\n    if (window.confirm('Are you sure you want to delete this team manager?')) {\r\n      const updatedTeamManagers = teamManagers.filter(manager => manager.username !== username);\r\n      setTeamManagers(updatedTeamManagers);\r\n      saveToLocalStorage('teamManagers', updatedTeamManagers);\r\n    }\r\n  };\r\n\r\n  // Handle photo upload for students\r\n  const handlePhotoUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (event) => {\r\n        setNewStudent({ ...newStudent, photo: event.target.result });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DashboardContainer>\r\n      <Header>Admin Dashboard</Header>\r\n      <TabContainer>\r\n        <Tab active={activeTab === 'events'} onClick={() => setActiveTab('events')}>Events</Tab>\r\n        <Tab active={activeTab === 'teams'} onClick={() => setActiveTab('teams')}>Teams</Tab>\r\n        <Tab active={activeTab === 'categories'} onClick={() => setActiveTab('categories')}>Categories</Tab>\r\n        <Tab active={activeTab === 'students'} onClick={() => setActiveTab('students')}>Students</Tab>\r\n        <Tab active={activeTab === 'programs'} onClick={() => setActiveTab('programs')}>Programs</Tab>\r\n        <Tab active={activeTab === 'results'} onClick={() => setActiveTab('results')}>Results</Tab>\r\n        <Tab active={activeTab === 'points'} onClick={() => setActiveTab('points')}>Points</Tab>\r\n        <Tab active={activeTab === 'teamManagers'} onClick={() => setActiveTab('teamManagers')}>Team Managers</Tab>\r\n      </TabContainer>\r\n      {activeTab === 'events' && (\r\n        <div>\r\n          <FormContainer>\r\n            <FormTitle>Add New Event</FormTitle>\r\n            <FormGroup>\r\n              <Label>Name</Label>\r\n              <Input type=\"text\" value={newEvent.name} onChange={(e) => setNewEvent({ ...newEvent, name: e.target.value })} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Categories</Label>\r\n              <Input type=\"text\" value={newEvent.categories.join(', ')} onChange={(e) => setNewEvent({ ...newEvent, categories: e.target.value.split(',').map(cat => cat.trim()) })} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Color</Label>\r\n              <ColorPreview r={newEvent.color.r} g={newEvent.color.g} b={newEvent.color.b} />\r\n              <RGBInputContainer>\r\n                <RGBInput type=\"number\" value={newEvent.color.r} onChange={(e) => setNewEvent({ ...newEvent, color: { ...newEvent.color, r: parseInt(e.target.value) } })} />\r\n                <RGBInput type=\"number\" value={newEvent.color.g} onChange={(e) => setNewEvent({ ...newEvent, color: { ...newEvent.color, g: parseInt(e.target.value) } })} />\r\n                <RGBInput type=\"number\" value={newEvent.color.b} onChange={(e) => setNewEvent({ ...newEvent, color: { ...newEvent.color, b: parseInt(e.target.value) } })} />\r\n              </RGBInputContainer>\r\n            </FormGroup>\r\n            <Button onClick={() => {\r\n              setEvents([...events, newEvent]);\r\n              saveToLocalStorage('events', [...events, newEvent]);\r\n              setNewEvent({ name: '', categories: [], color: { r: 106, g: 17, b: 203 } });\r\n            }}>Add Event</Button>\r\n          </FormContainer>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <Th>Name</Th>\r\n                <Th>Categories</Th>\r\n                <Th>Color</Th>\r\n                <Th>Actions</Th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {events.map((event, index) => (\r\n                <Tr key={index}>\r\n                  <Td>{event.name}</Td>\r\n                  <Td>{event.categories.join(', ')}</Td>\r\n                  <Td><ColorPreview r={event.color.r} g={event.color.g} b={event.color.b} /></Td>\r\n                  <Td>\r\n                    <Button onClick={() => {\r\n                      setSelectedEvent(index);\r\n                      setNewEvent(event);\r\n                    }}>Edit</Button>\r\n                    <Button onClick={() => {\r\n                      const updatedEvents = events.filter((_, i) => i !== index);\r\n                      setEvents(updatedEvents);\r\n                      saveToLocalStorage('events', updatedEvents);\r\n                    }}>Delete</Button>\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      )}\r\n      {activeTab === 'teams' && (\r\n        <div>\r\n          <FormContainer>\r\n            <FormTitle>Add New Team</FormTitle>\r\n            <FormGroup>\r\n              <Label>Name</Label>\r\n              <Input type=\"text\" value={newTeam.name} onChange={(e) => setNewTeam({ ...newTeam, name: e.target.value })} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Color</Label>\r\n              <Input type=\"color\" value={newTeam.color} onChange={(e) => setNewTeam({ ...newTeam, color: e.target.value })} />\r\n            </FormGroup>\r\n            <Button onClick={() => {\r\n              setTeams([...teams, newTeam]);\r\n              saveToLocalStorage('teams', [...teams, newTeam]);\r\n              setNewTeam({ name: '', color: '#FF5733' });\r\n            }}>Add Team</Button>\r\n          </FormContainer>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <Th>Name</Th>\r\n                <Th>Color</Th>\r\n                <Th>Actions</Th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {teams.map((team, index) => (\r\n                <Tr key={index}>\r\n                  <Td>{team.name}</Td>\r\n                  <Td><ColorPreview r={parseInt(team.color.slice(1, 3), 16)} g={parseInt(team.color.slice(3, 5), 16)} b={parseInt(team.color.slice(5, 7), 16)} /></Td>\r\n                  <Td>\r\n                    <Button onClick={() => {\r\n                      setSelectedEvent(index);\r\n                      setNewTeam(team);\r\n                    }}>Edit</Button>\r\n                    <Button onClick={() => {\r\n                      const updatedTeams = teams.filter((_, i) => i !== index);\r\n                      setTeams(updatedTeams);\r\n                      saveToLocalStorage('teams', updatedTeams);\r\n                    }}>Delete</Button>\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      )}\r\n      {activeTab === 'categories' && (\r\n        <div>\r\n          <FormContainer>\r\n            <FormTitle>Add New Category</FormTitle>\r\n            <FormGroup>\r\n              <Label>Name</Label>\r\n              <Input type=\"text\" value={newCategory.name} onChange={(e) => setNewCategory({ ...newCategory, name: e.target.value })} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Order</Label>\r\n              <Input type=\"number\" value={newCategory.order} onChange={(e) => setNewCategory({ ...newCategory, order: parseInt(e.target.value) })} />\r\n            </FormGroup>\r\n            <Button onClick={() => {\r\n              setCategories([...categories, newCategory]);\r\n              saveToLocalStorage('categories', [...categories, newCategory]);\r\n              setNewCategory({ name: '', order: 1 });\r\n            }}>Add Category</Button>\r\n          </FormContainer>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <Th>Name</Th>\r\n                <Th>Order</Th>\r\n                <Th>Actions</Th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {categories.map((category, index) => (\r\n                <Tr key={index}>\r\n                  <Td>{category.name}</Td>\r\n                  <Td>{category.order}</Td>\r\n                  <Td>\r\n                    <Button onClick={() => {\r\n                      setSelectedEvent(index);\r\n                      setNewCategory(category);\r\n                    }}>Edit</Button>\r\n                    <Button onClick={() => {\r\n                      const updatedCategories = categories.filter((_, i) => i !== index);\r\n                      setCategories(updatedCategories);\r\n                      saveToLocalStorage('categories', updatedCategories);\r\n                    }}>Delete</Button>\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      )}\r\n      {activeTab === 'students' && (\r\n        <div>\r\n          <FormContainer>\r\n            <FormTitle>Add New Student</FormTitle>\r\n            <FormGroup>\r\n              <Label>Name</Label>\r\n              <Input type=\"text\" value={newStudent.name} onChange={(e) => setNewStudent({ ...newStudent, name: e.target.value })} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Chest Number</Label>\r\n              <Input type=\"text\" value={newStudent.chestNumber} onChange={(e) => setNewStudent({ ...newStudent, chestNumber: e.target.value })} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Team</Label>\r\n              <Select value={newStudent.team} onChange={(e) => setNewStudent({ ...newStudent, team: e.target.value })}>\r\n                <option value=\"\">Select Team</option>\r\n                {teams.map((team, index) => (\r\n                  <option key={index} value={team.name}>{team.name}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Category</Label>\r\n              <Select value={newStudent.category} onChange={(e) => setNewStudent({ ...newStudent, category: e.target.value })}>\r\n                <option value=\"\">Select Category</option>\r\n                {categories.map((category, index) => (\r\n                  <option key={index} value={category.name}>{category.name}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Photo</Label>\r\n              <Input type=\"file\" accept=\"image/*\" onChange={handlePhotoUpload} />\r\n              {newStudent.photo && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <img src={newStudent.photo} alt=\"Preview\" style={{ maxWidth: '200px', maxHeight: '200px' }} />\r\n                </div>\r\n              )}\r\n            </FormGroup>\r\n            <Button onClick={() => {\r\n              if (newStudent.name.trim() === '' || newStudent.chestNumber.trim() === '') {\r\n                alert('Please fill in all required fields');\r\n                return;\r\n              }\r\n              \r\n              const student = {\r\n                id: students.length > 0 ? Math.max(...students.map(s => s.id)) + 1 : 1,\r\n                name: newStudent.name,\r\n                chestNumber: newStudent.chestNumber,\r\n                team: newStudent.team,\r\n                category: newStudent.category,\r\n                photo: newStudent.photo || null\r\n              };\r\n              \r\n              const updatedStudents = [...students, student];\r\n              setStudents(updatedStudents);\r\n              const saveResult = saveToLocalStorage('students', updatedStudents);\r\n              console.log('Student creation save result:', saveResult);\r\n              if (!saveResult) {\r\n                console.error('Failed to save new student to localStorage');\r\n              }\r\n              \r\n              setNewStudent({ name: '', chestNumber: '', team: '', category: '', photo: null });\r\n            }}>Add Student</Button>\r\n          </FormContainer>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <Th>Name</Th>\r\n                <Th>Chest Number</Th>\r\n                <Th>Team</Th>\r\n                <Th>Category</Th>\r\n                <Th>Photo</Th>\r\n                <Th>Actions</Th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {students.map((student, index) => (\r\n                <Tr key={index}>\r\n                  <Td>{student.name}</Td>\r\n                  <Td>{student.chestNumber}</Td>\r\n                  <Td>{student.team}</Td>\r\n                  <Td>{student.category}</Td>\r\n                  <Td>{student.photo ? <img src={student.photo} alt={student.name} style={{ width: '50px', height: '50px' }} /> : 'No Photo'}</Td>\r\n                  <Td>\r\n                    <Button onClick={() => {\r\n                      setNewStudent({\r\n                        name: student.name,\r\n                        chestNumber: student.chestNumber,\r\n                        team: student.team,\r\n                        category: student.category,\r\n                        photo: student.photo || null\r\n                      });\r\n                      setSelectedEvent(index);\r\n                    }}>Edit</Button>\r\n                    <Button onClick={() => {\r\n                      const updatedStudents = students.filter((_, i) => i !== index);\r\n                      setStudents(updatedStudents);\r\n                      saveToLocalStorage('students', updatedStudents);\r\n                    }}>Delete</Button>\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      )}\r\n      {activeTab === 'programs' && (\r\n        <div>\r\n          <FormContainer>\r\n            <FormTitle>Add New Program</FormTitle>\r\n            <FormGroup>\r\n              <Label>Name</Label>\r\n              <Input type=\"text\" value={newProgram.name} onChange={(e) => setNewProgram({ ...newProgram, name: e.target.value })} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Type</Label>\r\n              <Select value={newProgram.type} onChange={(e) => setNewProgram({ ...newProgram, type: e.target.value })}>\r\n                <option value=\"Individual\">Individual</option>\r\n                <option value=\"Team\">Team</option>\r\n              </Select>\r\n            </FormGroup>\r\n            <Button onClick={() => {\r\n              setPrograms([...programs, newProgram]);\r\n              saveToLocalStorage('programs', [...programs, newProgram]);\r\n              setNewProgram({ name: '', type: 'Individual' });\r\n            }}>Add Program</Button>\r\n          </FormContainer>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <Th>Name</Th>\r\n                <Th>Type</Th>\r\n                <Th>Actions</Th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {programs.map((program, index) => (\r\n                <Tr key={index}>\r\n                  <Td>{program.name}</Td>\r\n                  <Td>{program.type}</Td>\r\n                  <Td>\r\n                    <Button onClick={() => {\r\n                      setSelectedEvent(index);\r\n                      setNewProgram(program);\r\n                    }}>Edit</Button>\r\n                    <Button onClick={() => {\r\n                      const updatedPrograms = programs.filter((_, i) => i !== index);\r\n                      setPrograms(updatedPrograms);\r\n                      saveToLocalStorage('programs', updatedPrograms);\r\n                    }}>Delete</Button>\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      )}\r\n      {activeTab === 'results' && (\r\n        <div>\r\n          <FormContainer>\r\n            <FormTitle>Add New Result</FormTitle>\r\n            <FormGroup>\r\n              <Label>Event</Label>\r\n              <Select value={newResult.event} onChange={(e) => setNewResult({ ...newResult, event: e.target.value })}>\r\n                <option value=\"\">Select Event</option>\r\n                {events.map((event, index) => (\r\n                  <option key={index} value={event.name}>{event.name}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Program</Label>\r\n              <Select value={newResult.program} onChange={(e) => setNewResult({ ...newResult, program: e.target.value })}>\r\n                <option value=\"\">Select Program</option>\r\n                {programs.map((program, index) => (\r\n                  <option key={index} value={program.name}>{program.name}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Category</Label>\r\n              <Select value={newResult.category} onChange={(e) => setNewResult({ ...newResult, category: e.target.value })}>\r\n                <option value=\"\">Select Category</option>\r\n                {categories.map((category, index) => (\r\n                  <option key={index} value={category.name}>{category.name}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Participants</Label>\r\n              <div>\r\n                {newResult.participants.map((participant, index) => (\r\n                  <div key={index}>\r\n                    <Input type=\"text\" value={participant.name} onChange={(e) => {\r\n                      const updatedParticipants = [...newResult.participants];\r\n                      updatedParticipants[index].name = e.target.value;\r\n                      setNewResult({ ...newResult, participants: updatedParticipants });\r\n                    }} />\r\n                    <Input type=\"text\" value={participant.position} onChange={(e) => {\r\n                      const updatedParticipants = [...newResult.participants];\r\n                      updatedParticipants[index].position = e.target.value;\r\n                      setNewResult({ ...newResult, participants: updatedParticipants });\r\n                    }} />\r\n                  </div>\r\n                ))}\r\n                <Button onClick={() => setNewResult({ ...newResult, participants: [...newResult.participants, { name: '', position: '' }] })}>Add Participant</Button>\r\n              </div>\r\n            </FormGroup>\r\n            <Button onClick={() => {\r\n              setResults([...results, newResult]);\r\n              saveToLocalStorage('results', [...results, newResult]);\r\n              setNewResult({ event: '', program: '', category: '', participants: [{ name: '', position: '' }] });\r\n            }}>Add Result</Button>\r\n          </FormContainer>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <Th>Event</Th>\r\n                <Th>Program</Th>\r\n                <Th>Category</Th>\r\n                <Th>Participants</Th>\r\n                <Th>Actions</Th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {results.map((result, index) => (\r\n                <Tr key={index}>\r\n                  <Td>{result.event}</Td>\r\n                  <Td>{result.program}</Td>\r\n                  <Td>{result.category}</Td>\r\n                  <Td>{result.participants.map(participant => `${participant.name} (${participant.position})`).join(', ')}</Td>\r\n                  <Td>\r\n                    <Button onClick={() => {\r\n                      setSelectedEvent(index);\r\n                      setNewResult(result);\r\n                    }}>Edit</Button>\r\n                    <Button onClick={() => {\r\n                      const updatedResults = results.filter((_, i) => i !== index);\r\n                      setResults(updatedResults);\r\n                      saveToLocalStorage('results', updatedResults);\r\n                    }}>Delete</Button>\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      )}\r\n      {activeTab === 'points' && (\r\n        <div>\r\n          <FormContainer>\r\n            <FormTitle>Configure Points</FormTitle>\r\n            <FormGroup>\r\n              <Label>Gold</Label>\r\n              <Input type=\"number\" value={points.gold} onChange={(e) => setPoints({ ...points, gold: parseInt(e.target.value) })} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Silver</Label>\r\n              <Input type=\"number\" value={points.silver} onChange={(e) => setPoints({ ...points, silver: parseInt(e.target.value) })} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Bronze</Label>\r\n              <Input type=\"number\" value={points.bronze} onChange={(e) => setPoints({ ...points, bronze: parseInt(e.target.value) })} />\r\n            </FormGroup>\r\n            <Button onClick={() => {\r\n              saveToLocalStorage('points', points);\r\n            }}>Save Points</Button>\r\n          </FormContainer>\r\n          <FormContainer>\r\n            <FormTitle>Configure Category Points</FormTitle>\r\n            <FormGroup>\r\n              <Label>Category</Label>\r\n              <Select value={selectedCategoryForPoints} onChange={(e) => setSelectedCategoryForPoints(e.target.value)}>\r\n                <option value=\"\">Select Category</option>\r\n                {categories.map((category, index) => (\r\n                  <option key={index} value={category.name}>{category.name}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Gold</Label>\r\n              <Input type=\"number\" value={categoryPoints[selectedCategoryForPoints]?.gold || ''} onChange={(e) => {\r\n                setCategoryPoints({\r\n                  ...categoryPoints,\r\n                  [selectedCategoryForPoints]: {\r\n                    ...categoryPoints[selectedCategoryForPoints],\r\n                    gold: parseInt(e.target.value)\r\n                  }\r\n                });\r\n              }} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Silver</Label>\r\n              <Input type=\"number\" value={categoryPoints[selectedCategoryForPoints]?.silver || ''} onChange={(e) => {\r\n                setCategoryPoints({\r\n                  ...categoryPoints,\r\n                  [selectedCategoryForPoints]: {\r\n                    ...categoryPoints[selectedCategoryForPoints],\r\n                    silver: parseInt(e.target.value)\r\n                  }\r\n                });\r\n              }} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Bronze</Label>\r\n              <Input type=\"number\" value={categoryPoints[selectedCategoryForPoints]?.bronze || ''} onChange={(e) => {\r\n                setCategoryPoints({\r\n                  ...categoryPoints,\r\n                  [selectedCategoryForPoints]: {\r\n                    ...categoryPoints[selectedCategoryForPoints],\r\n                    bronze: parseInt(e.target.value)\r\n                  }\r\n                });\r\n              }} />\r\n            </FormGroup>\r\n            <Button onClick={() => {\r\n              saveToLocalStorage('categoryPoints', categoryPoints);\r\n            }}>Save Category Points</Button>\r\n          </FormContainer>\r\n          <FormContainer>\r\n            <FormTitle>Configure Grade Points</FormTitle>\r\n            <FormGroup>\r\n              <Label>Grade</Label>\r\n              <Select value={selectedGradeForPoints} onChange={(e) => setSelectedGradeForPoints(e.target.value)}>\r\n                <option value=\"\">Select Grade</option>\r\n                {availableGrades.map((grade, index) => (\r\n                  <option key={index} value={grade}>{grade}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            \r\n            {/* Category Selection for Grade Points */}\r\n            <FormGroup>\r\n              <Label>Categories</Label>\r\n              <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap', marginBottom: '10px' }}>\r\n                <Button \r\n                  onClick={() => {\r\n                    if (selectedCategoriesForBatch.length === categories.length) {\r\n                      // Deselect all\r\n                      setSelectedCategoriesForBatch([]);\r\n                    } else {\r\n                      // Select all\r\n                      setSelectedCategoriesForBatch(categories.map(cat => cat.name));\r\n                    }\r\n                  }}\r\n                  style={{\r\n                    background: selectedCategoriesForBatch.length === categories.length ? 'gold' : 'rgba(255,255,255,0.2)',\r\n                    color: selectedCategoriesForBatch.length === categories.length ? '#333' : 'white'\r\n                  }}\r\n                >\r\n                  {selectedCategoriesForBatch.length === categories.length ? 'Deselect All' : 'Select All'}\r\n                </Button>\r\n              </div>\r\n              <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>\r\n                {categories.map((category) => (\r\n                  <label key={category.name} style={{ display: 'flex', alignItems: 'center', cursor: 'pointer' }}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={selectedCategoriesForBatch.includes(category.name)}\r\n                      onChange={(e) => {\r\n                        if (e.target.checked) {\r\n                          setSelectedCategoriesForBatch([...selectedCategoriesForBatch, category.name]);\r\n                        } else {\r\n                          setSelectedCategoriesForBatch(selectedCategoriesForBatch.filter(cat => cat !== category.name));\r\n                        }\r\n                      }}\r\n                      style={{ marginRight: '5px' }}\r\n                    />\r\n                    {category.name}\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </FormGroup>\r\n            \r\n            <FormGroup>\r\n              <Label>Gold</Label>\r\n              <Input type=\"number\" value={gradePoints[selectedGradeForPoints]?.gold || ''} onChange={(e) => {\r\n                setGradePoints({\r\n                  ...gradePoints,\r\n                  [selectedGradeForPoints]: {\r\n                    ...gradePoints[selectedGradeForPoints],\r\n                    gold: parseInt(e.target.value)\r\n                  }\r\n                });\r\n              }} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Silver</Label>\r\n              <Input type=\"number\" value={gradePoints[selectedGradeForPoints]?.silver || ''} onChange={(e) => {\r\n                setGradePoints({\r\n                  ...gradePoints,\r\n                  [selectedGradeForPoints]: {\r\n                    ...gradePoints[selectedGradeForPoints],\r\n                    silver: parseInt(e.target.value)\r\n                  }\r\n                });\r\n              }} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Bronze</Label>\r\n              <Input type=\"number\" value={gradePoints[selectedGradeForPoints]?.bronze || ''} onChange={(e) => {\r\n                setGradePoints({\r\n                  ...gradePoints,\r\n                  [selectedGradeForPoints]: {\r\n                    ...gradePoints[selectedGradeForPoints],\r\n                    bronze: parseInt(e.target.value)\r\n                  }\r\n                });\r\n              }} />\r\n            </FormGroup>\r\n            <Button \r\n              onClick={() => {\r\n                // Apply grade points to all selected categories\r\n                const updatedGradePoints = { ...gradePoints };\r\n                selectedCategoriesForBatch.forEach(categoryName => {\r\n                  const key = `${categoryName}-${selectedGradeForPoints}`;\r\n                  updatedGradePoints[key] = {\r\n                    gold: gradePoints[selectedGradeForPoints]?.gold || 0,\r\n                    silver: gradePoints[selectedGradeForPoints]?.silver || 0,\r\n                    bronze: gradePoints[selectedGradeForPoints]?.bronze || 0\r\n                  };\r\n                });\r\n                setGradePoints(updatedGradePoints);\r\n                saveToLocalStorage('gradePoints', updatedGradePoints);\r\n              }}\r\n              disabled={!selectedGradeForPoints || selectedCategoriesForBatch.length === 0}\r\n            >\r\n              Save Grade Points for Selected Categories\r\n            </Button>\r\n          </FormContainer>\r\n          <FormContainer>\r\n            <FormTitle>Configure Available Grades</FormTitle>\r\n            <FormGroup>\r\n              <Label>Grades</Label>\r\n              <Input type=\"text\" value={availableGrades.join(', ')} onChange={(e) => setAvailableGrades(e.target.value.split(',').map(grade => grade.trim()))} />\r\n            </FormGroup>\r\n            <Button onClick={() => {\r\n              saveToLocalStorage('availableGrades', availableGrades);\r\n            }}>Save Grades</Button>\r\n          </FormContainer>\r\n          <FormContainer>\r\n            <FormTitle>Configure New Grade Points</FormTitle>\r\n            \r\n            {/* Category Selection for Batch Grade Points */}\r\n            <FormGroup>\r\n              <Label>Apply to Categories</Label>\r\n              <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap', marginBottom: '10px' }}>\r\n                <Button \r\n                  onClick={() => {\r\n                    if (selectedCategoriesForBatch.length === categories.length) {\r\n                      // Deselect all\r\n                      setSelectedCategoriesForBatch([]);\r\n                    } else {\r\n                      // Select all\r\n                      setSelectedCategoriesForBatch(categories.map(cat => cat.name));\r\n                    }\r\n                  }}\r\n                  style={{\r\n                    background: selectedCategoriesForBatch.length === categories.length ? 'gold' : 'rgba(255,255,255,0.2)',\r\n                    color: selectedCategoriesForBatch.length === categories.length ? '#333' : 'white'\r\n                  }}\r\n                >\r\n                  {selectedCategoriesForBatch.length === categories.length ? 'Deselect All' : 'Select All'}\r\n                </Button>\r\n              </div>\r\n              <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>\r\n                {categories.map((category) => (\r\n                  <label key={category.name} style={{ display: 'flex', alignItems: 'center', cursor: 'pointer' }}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={selectedCategoriesForBatch.includes(category.name)}\r\n                      onChange={(e) => {\r\n                        if (e.target.checked) {\r\n                          setSelectedCategoriesForBatch([...selectedCategoriesForBatch, category.name]);\r\n                        } else {\r\n                          setSelectedCategoriesForBatch(selectedCategoriesForBatch.filter(cat => cat !== category.name));\r\n                        }\r\n                      }}\r\n                      style={{ marginRight: '5px' }}\r\n                    />\r\n                    {category.name}\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </FormGroup>\r\n            \r\n            <FormGroup>\r\n              <Label>Gold</Label>\r\n              <Input type=\"number\" value={newGradePoints.gold} onChange={(e) => setNewGradePoints({ ...newGradePoints, gold: parseInt(e.target.value) })} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Silver</Label>\r\n              <Input type=\"number\" value={newGradePoints.silver} onChange={(e) => setNewGradePoints({ ...newGradePoints, silver: parseInt(e.target.value) })} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Bronze</Label>\r\n              <Input type=\"number\" value={newGradePoints.bronze} onChange={(e) => setNewGradePoints({ ...newGradePoints, bronze: parseInt(e.target.value) })} />\r\n            </FormGroup>\r\n            <Button \r\n              onClick={() => {\r\n                // Apply new grade points to all selected categories\r\n                const updatedGradePoints = { ...gradePoints };\r\n                selectedCategoriesForBatch.forEach(categoryName => {\r\n                  const key = `${categoryName}-${selectedGradeForPoints}`;\r\n                  updatedGradePoints[key] = { ...newGradePoints };\r\n                });\r\n                setGradePoints(updatedGradePoints);\r\n                saveToLocalStorage('gradePoints', updatedGradePoints);\r\n              }}\r\n              disabled={selectedCategoriesForBatch.length === 0}\r\n            >\r\n              Apply New Grade Points to Selected Categories\r\n            </Button>\r\n          </FormContainer>\r\n        </div>\r\n      )}\r\n      {activeTab === 'teamManagers' && (\r\n        <div>\r\n          <FormContainer>\r\n            <FormTitle>Add New Team Manager</FormTitle>\r\n            <FormGroup>\r\n              <Label>Username</Label>\r\n              <Input type=\"text\" value={newTeamManager.username} onChange={(e) => setNewTeamManager({ ...newTeamManager, username: e.target.value })} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Password</Label>\r\n              <Input type=\"password\" value={newTeamManager.password} onChange={(e) => setNewTeamManager({ ...newTeamManager, password: e.target.value })} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>Team</Label>\r\n              <Select value={newTeamManager.team} onChange={(e) => setNewTeamManager({ ...newTeamManager, team: e.target.value })}>\r\n                <option value=\"\">Select Team</option>\r\n                {teams.map((team, index) => (\r\n                  <option key={index} value={team.name}>{team.name}</option>\r\n                ))}\r\n              </Select>\r\n            </FormGroup>\r\n            <Button onClick={() => {\r\n              setTeamManagers([...teamManagers, newTeamManager]);\r\n              saveToLocalStorage('teamManagers', [...teamManagers, newTeamManager]);\r\n              setNewTeamManager({ username: '', password: '', team: '' });\r\n            }}>Add Team Manager</Button>\r\n          </FormContainer>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <Th>Username</Th>\r\n                <Th>Team</Th>\r\n                <Th>Actions</Th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {teamManagers.map((manager, index) => (\r\n                <Tr key={index}>\r\n                  <Td>{manager.username}</Td>\r\n                  <Td>{manager.team}</Td>\r\n                  <Td>\r\n                    <Button onClick={() => {\r\n                      setSelectedEvent(index);\r\n                      setNewTeamManager(manager);\r\n                    }}>Edit</Button>\r\n                    <Button onClick={() => {\r\n                      const updatedTeamManagers = teamManagers.filter((_, i) => i !== index);\r\n                      setTeamManagers(updatedTeamManagers);\r\n                      saveToLocalStorage('teamManagers', updatedTeamManagers);\r\n                    }}>Delete</Button>\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      )}\r\n    </DashboardContainer>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}